{"ast":null,"code":"import _toConsumableArray from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{ButtonGroup,Dropdown}from'react-bootstrap';// type\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ColorVariantDropdown=function ColorVariantDropdown(_ref){var variants=_ref.variants;var colorVariantDropdown=_toConsumableArray(variants);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mb-1 mt-5\",children:\"Variant\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted font-13 mb-3\",children:\"The best part is you can do this with any button variant, too:\"}),(colorVariantDropdown||[]).map(function(color,index){return/*#__PURE__*/_jsxs(Dropdown,{as:ButtonGroup,className:\"mb-2 me-1\",children:[/*#__PURE__*/_jsxs(Dropdown.Toggle,{variant:color,children:[color.charAt(0).toUpperCase()+color.slice(1),/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-chevron-down ms-1\"})]}),/*#__PURE__*/_jsxs(Dropdown.Menu,{children:[/*#__PURE__*/_jsx(Dropdown.Item,{href:\"#\",children:\"Action\"}),/*#__PURE__*/_jsx(Dropdown.Item,{href:\"#\",children:\"Another action\"}),/*#__PURE__*/_jsx(Dropdown.Item,{href:\"#\",children:\"Something else here\"}),/*#__PURE__*/_jsx(Dropdown.Divider,{}),/*#__PURE__*/_jsx(Dropdown.Item,{href:\"#\",children:\"Separated link\"})]})]},index.toString());})]});};export default ColorVariantDropdown;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Dropdowns/ColorVariantDropdown.tsx"],"names":["ButtonGroup","Dropdown","ColorVariantDropdown","variants","colorVariantDropdown","map","color","index","charAt","toUpperCase","slice","toString"],"mappings":"mJAAA,OAASA,WAAT,CAAsBC,QAAtB,KAAsC,iBAAtC,CAEA;6IASA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,MAA6C,IAA1CC,CAAAA,QAA0C,MAA1CA,QAA0C,CACtE,GAAMC,CAAAA,oBAAuC,oBAAOD,QAAP,CAA7C,CACA,mBACI,wCACI,WAAI,SAAS,CAAC,WAAd,qBADJ,cAEI,UAAG,SAAS,CAAC,yBAAb,4EAFJ,CAIK,CAACC,oBAAoB,EAAI,EAAzB,EAA6BC,GAA7B,CAAiC,SAACC,KAAD,CAAQC,KAAR,CAAkB,CAChD,mBACI,MAAC,QAAD,EAAiC,EAAE,CAAEP,WAArC,CAAkD,SAAS,CAAC,WAA5D,wBACI,MAAC,QAAD,CAAU,MAAV,EAAiB,OAAO,CAAEM,KAA1B,WACKA,KAAK,CAAEE,MAAP,CAAc,CAAd,EAAiBC,WAAjB,GAAiCH,KAAK,CAAEI,KAAP,CAAa,CAAb,CADtC,cAEI,UAAG,SAAS,CAAC,2BAAb,EAFJ,GADJ,cAKI,MAAC,QAAD,CAAU,IAAV,yBACI,KAAC,QAAD,CAAU,IAAV,EAAe,IAAI,CAAC,GAApB,oBADJ,cAEI,KAAC,QAAD,CAAU,IAAV,EAAe,IAAI,CAAC,GAApB,4BAFJ,cAGI,KAAC,QAAD,CAAU,IAAV,EAAe,IAAI,CAAC,GAApB,iCAHJ,cAII,KAAC,QAAD,CAAU,OAAV,IAJJ,cAKI,KAAC,QAAD,CAAU,IAAV,EAAe,IAAI,CAAC,GAApB,4BALJ,GALJ,GAAeH,KAAK,CAACI,QAAN,EAAf,CADJ,CAeH,CAhBA,CAJL,GADJ,CAwBH,CA1BD,CA4BA,cAAeT,CAAAA,oBAAf","sourcesContent":["import { ButtonGroup, Dropdown } from 'react-bootstrap';\n\n// type\nimport { Variant } from './types';\n\ntype ColorVariantDropdownProps = {\n    variants: Variant[];\n};\n\ntype DropdownVariant = Variant;\n\nconst ColorVariantDropdown = ({ variants }: ColorVariantDropdownProps) => {\n    const colorVariantDropdown: DropdownVariant[] = [...variants];\n    return (\n        <>\n            <h5 className=\"mb-1 mt-5\">Variant</h5>\n            <p className=\"text-muted font-13 mb-3\">The best part is you can do this with any button variant, too:</p>\n\n            {(colorVariantDropdown || []).map((color, index) => {\n                return (\n                    <Dropdown key={index.toString()} as={ButtonGroup} className=\"mb-2 me-1\">\n                        <Dropdown.Toggle variant={color}>\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                            <i className=\"mdi mdi-chevron-down ms-1\"></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"#\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                );\n            })}\n        </>\n    );\n};\n\nexport default ColorVariantDropdown;\n"]},"metadata":{},"sourceType":"module"}