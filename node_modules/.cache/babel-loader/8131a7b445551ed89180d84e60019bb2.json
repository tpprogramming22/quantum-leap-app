{"ast":null,"code":"import _slicedToArray from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import{Button,Card,Modal}from'react-bootstrap';import classNames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ModalWithAlerts=function ModalWithAlerts(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),fillModal=_useState2[0],setFillModal=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),modal=_useState4[0],setModal=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),className=_useState6[0],setClassName=_useState6[1];// Show/hide the modal\nvar fillToggle=function fillToggle(){setFillModal(!fillModal);};var toggle=function toggle(){setModal(!modal);};// Opens modal with custom fill class\nvar openModalWithFillClass=function openModalWithFillClass(className){setClassName(className);fillToggle();};// Opens modal with custom class\nvar openModalWithClass=function openModalWithClass(className){setClassName(className);toggle();};return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"header-title\",children:\"Modal based Alerts\"}),/*#__PURE__*/_jsx(\"p\",{className:\"sub-header\",children:\"Show different contexual alert messages using modal component.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-list\",children:[/*#__PURE__*/_jsx(Button,{variant:\"success\",className:\"me-1\",onClick:function onClick(){return openModalWithFillClass('success');},children:\"Success Alert\"}),/*#__PURE__*/_jsx(Button,{variant:\"info\",className:\"me-1\",onClick:function onClick(){return openModalWithClass('info');},children:\"Info Alert\"}),/*#__PURE__*/_jsx(Button,{variant:\"warning\",className:\"me-1\",onClick:function onClick(){return openModalWithClass('warning');},children:\"Warning Alert\"}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",className:\"me-1\",onClick:function onClick(){return openModalWithFillClass('danger');},children:\"Danger Alert\"})]}),/*#__PURE__*/_jsx(Modal,{show:fillModal,onHide:fillToggle,size:\"sm\",children:/*#__PURE__*/_jsx(\"div\",{className:classNames('modal-filled','bg-'+className),children:/*#__PURE__*/_jsx(Modal.Body,{className:\"p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"dripicons-checkmark h1 text-white\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"mt-2 text-white\",children:\"Well Done!\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-3 text-white\",children:\"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam.\"}),/*#__PURE__*/_jsx(Button,{onClick:fillToggle,className:\"btn-light my-2\",children:\"Continue\"})]})})})}),/*#__PURE__*/_jsx(Modal,{show:modal,onHide:toggle,size:\"sm\",children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Modal.Body,{className:\"p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"i\",{className:classNames('dripicons-information','h1','text-'+className)}),/*#__PURE__*/_jsx(\"h4\",{className:\"mt-2\",children:\"Heads up!\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-3\",children:\"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam.\"}),/*#__PURE__*/_jsx(Button,{onClick:toggle,className:classNames('my-2','btn-'+className),children:\"Continue\"})]})})})})]})});};export default ModalWithAlerts;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Modals/ModalWithAlerts.tsx"],"names":["useState","Button","Card","Modal","classNames","ModalWithAlerts","fillModal","setFillModal","modal","setModal","className","setClassName","fillToggle","toggle","openModalWithFillClass","openModalWithClass"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nconst ModalWithAlerts = () => {\n    const [fillModal, setFillModal] = useState<boolean>(false);\n    const [modal, setModal] = useState<boolean>(false);\n\n    const [className, setClassName] = useState<string>('');\n\n    // Show/hide the modal\n    const fillToggle = () => {\n        setFillModal(!fillModal);\n    };\n\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    // Opens modal with custom fill class\n    const openModalWithFillClass = (className: string) => {\n        setClassName(className);\n        fillToggle();\n    };\n\n    // Opens modal with custom class\n    const openModalWithClass = (className: string) => {\n        setClassName(className);\n        toggle();\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Modal based Alerts</h4>\n\n                <p className=\"sub-header\">Show different contexual alert messages using modal component.</p>\n\n                <div className=\"button-list\">\n                    <Button variant=\"success\" className=\"me-1\" onClick={() => openModalWithFillClass('success')}>\n                        Success Alert\n                    </Button>\n                    <Button variant=\"info\" className=\"me-1\" onClick={() => openModalWithClass('info')}>\n                        Info Alert\n                    </Button>\n                    <Button variant=\"warning\" className=\"me-1\" onClick={() => openModalWithClass('warning')}>\n                        Warning Alert\n                    </Button>\n                    <Button variant=\"danger\" className=\"me-1\" onClick={() => openModalWithFillClass('danger')}>\n                        Danger Alert\n                    </Button>\n                </div>\n\n                <Modal show={fillModal} onHide={fillToggle} size=\"sm\">\n                    <div className={classNames('modal-filled', 'bg-' + className)}>\n                        <Modal.Body className=\"p-4\">\n                            <div className=\"text-center\">\n                                <i className=\"dripicons-checkmark h1 text-white\"></i>\n                                <h4 className=\"mt-2 text-white\">Well Done!</h4>\n                                <p className=\"mt-3 text-white\">\n                                    Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n                                    facilisis in, egestas eget quam.\n                                </p>\n                                <Button onClick={fillToggle} className=\"btn-light my-2\">\n                                    Continue\n                                </Button>\n                            </div>\n                        </Modal.Body>\n                    </div>\n                </Modal>\n\n                <Modal show={modal} onHide={toggle} size=\"sm\">\n                    <div>\n                        <Modal.Body className=\"p-4\">\n                            <div className=\"text-center\">\n                                <i className={classNames('dripicons-information', 'h1', 'text-' + className)}></i>\n                                <h4 className=\"mt-2\">Heads up!</h4>\n                                <p className=\"mt-3\">\n                                    Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n                                    facilisis in, egestas eget quam.\n                                </p>\n                                <Button onClick={toggle} className={classNames('my-2', 'btn-' + className)}>\n                                    Continue\n                                </Button>\n                            </div>\n                        </Modal.Body>\n                    </div>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ModalWithAlerts;\n"]},"metadata":{},"sourceType":"module"}