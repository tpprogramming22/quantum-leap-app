{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Notifications/LiveAlert.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Card, Alert, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LiveAlert = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  /*\n   * handle close\n   */\n\n  const handleClose = index => {\n    const updatedList = [...list];\n    updatedList.splice(index, 1);\n    setList(updatedList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Alert Live example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: \"Click the button below to show an alert (hidden with inline styles to start), then dismiss (and destroy) it with the built-in close button.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), (list || []).map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: () => handleClose(index),\n          dismissible: true,\n          children: \"Nice, you triggered this alert message!\"\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setList(prev => [...prev, prev.length]),\n        children: \"Show live alert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LiveAlert, \"5B5creADs30R66wN/2t9GZl+br4=\");\n\n_c = LiveAlert;\nexport default LiveAlert;\n\nvar _c;\n\n$RefreshReg$(_c, \"LiveAlert\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Notifications/LiveAlert.tsx"],"names":["useState","Card","Alert","Button","LiveAlert","list","setList","handleClose","index","updatedList","splice","map","color","toString","prev","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,iBAApC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAW,EAAX,CAAhC;AAEA;AACJ;AACA;;AACI,QAAMO,WAAW,GAAIC,KAAD,IAAmB;AACnC,UAAMC,WAAW,GAAG,CAAC,GAAGJ,IAAJ,CAApB;AACAI,IAAAA,WAAW,CAACC,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACAF,IAAAA,OAAO,CAACG,WAAD,CAAP;AACH,GAJD;;AAMA,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOK,CAACJ,IAAI,IAAI,EAAT,EAAaM,GAAb,CAAiB,CAACC,KAAD,EAAQJ,KAAR,KAAkB;AAChC,4BACI,QAAC,KAAD;AAA8B,UAAA,OAAO,EAAE,MAAMD,WAAW,CAACC,KAAD,CAAxD;AAAiE,UAAA,WAAW,MAA5E;AAAA;AAAA,WAAYA,KAAK,CAACK,QAAN,EAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA,CAPL,eAcI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMP,OAAO,CAAEQ,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUA,IAAI,CAACC,MAAf,CAAX,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAhCD;;GAAMX,S;;KAAAA,S;AAkCN,eAAeA,SAAf","sourcesContent":["import { useState } from 'react';\nimport { Card, Alert, Button } from 'react-bootstrap';\n\nconst LiveAlert = () => {\n    const [list, setList] = useState<number[]>([]);\n\n    /*\n     * handle close\n     */\n    const handleClose = (index: number) => {\n        const updatedList = [...list];\n        updatedList.splice(index, 1);\n        setList(updatedList);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Alert Live example</h4>\n                <p className=\"sub-header\">\n                    Click the button below to show an alert (hidden with inline styles to start), then dismiss (and\n                    destroy) it with the built-in close button.\n                </p>\n\n                {(list || []).map((color, index) => {\n                    return (\n                        <Alert key={index.toString()} onClose={() => handleClose(index)} dismissible>\n                            Nice, you triggered this alert message!\n                        </Alert>\n                    );\n                })}\n                <Button onClick={() => setList((prev) => [...prev, prev.length])}>Show live alert</Button>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LiveAlert;\n"]},"metadata":{},"sourceType":"module"}