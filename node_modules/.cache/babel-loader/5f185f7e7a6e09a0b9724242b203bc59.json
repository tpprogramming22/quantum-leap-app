{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Dropdowns/DropdownSizes.tsx\";\nimport React from 'react';\nimport { Button, ButtonGroup, Dropdown } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DropdownSizes = () => {\n  const sizes = [{\n    size: 'lg',\n    name: 'Large button'\n  }, {\n    size: 'sm',\n    name: 'Small button'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mb-1 mt-5\",\n      children: \"Sizing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted font-13 mb-3\",\n      children: \"Button dropdowns work with buttons of all sizes, including default and split dropdown buttons.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), (sizes || []).map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          as: ButtonGroup,\n          size: item.size,\n          className: \"mb-2 me-1\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"light\",\n            children: [item.name, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-chevron-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              href: \"#\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              href: \"#\",\n              children: \"Another action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              href: \"#\",\n              children: \"Something else here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {\n              as: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              href: \"#\",\n              children: \"Separated link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          as: ButtonGroup,\n          size: item.size,\n          className: \"me-1 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"light\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"light\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-chevron-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              href: \"#\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              href: \"#\",\n              children: \"Another action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              href: \"#\",\n              children: \"Something else here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {\n              as: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              href: \"#\",\n              children: \"Separated link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, index.toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_c = DropdownSizes;\nexport default DropdownSizes;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownSizes\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Dropdowns/DropdownSizes.tsx"],"names":["React","Button","ButtonGroup","Dropdown","DropdownSizes","sizes","size","name","map","item","index","toString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, ButtonGroup, Dropdown } from 'react-bootstrap';\n\nconst DropdownSizes = () => {\n    const sizes = [\n        {\n            size: 'lg',\n            name: 'Large button',\n        },\n        {\n            size: 'sm',\n            name: 'Small button',\n        },\n    ];\n    return (\n        <>\n            <h5 className=\"mb-1 mt-5\">Sizing</h5>\n            <p className=\"text-muted font-13 mb-3\">\n                Button dropdowns work with buttons of all sizes, including default and split dropdown buttons.\n            </p>\n            {(sizes || []).map((item, index) => {\n                return (\n                    <React.Fragment key={index.toString()}>\n                        <Dropdown as={ButtonGroup} size={item.size} className=\"mb-2 me-1\">\n                            <Dropdown.Toggle variant=\"light\">\n                                {item.name} <i className=\"mdi mdi-chevron-down\"></i>\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                <Dropdown.Item href=\"#\">Action</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\n                                <Dropdown.Divider as=\"div\" />\n                                <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        <Dropdown as={ButtonGroup} size={item.size} className=\"me-1 mb-2\">\n                            <Button variant=\"light\">{item.name}</Button>\n                            <Dropdown.Toggle variant=\"light\">\n                                <i className=\"mdi mdi-chevron-down\"></i>\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                <Dropdown.Item href=\"#\">Action</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\n                                <Dropdown.Divider as=\"div\" />\n                                <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </React.Fragment>\n                );\n            })}\n        </>\n    );\n};\n\nexport default DropdownSizes;\n"]},"metadata":{},"sourceType":"module"}