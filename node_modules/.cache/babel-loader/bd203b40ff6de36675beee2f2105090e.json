{"ast":null,"code":"import{createStore,compose,applyMiddleware}from'redux';import createSagaMiddleware from'redux-saga';import reducers from'./reducers';import rootSaga from'./sagas';var sagaMiddleware=createSagaMiddleware();var middlewares=[sagaMiddleware];var store;export function configureStore(initialState){var composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;var localstore=createStore(reducers,initialState,composeEnhancers(applyMiddleware.apply(void 0,middlewares)));sagaMiddleware.run(rootSaga);store=localstore;return localstore;}// Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/redux/store.ts"],"names":["createStore","compose","applyMiddleware","createSagaMiddleware","reducers","rootSaga","sagaMiddleware","middlewares","store","configureStore","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","localstore","run"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,OAAtB,CAA+BC,eAA/B,KAAsD,OAAtD,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,SAArB,CAQA,GAAMC,CAAAA,cAAc,CAAGH,oBAAoB,EAA3C,CACA,GAAMI,CAAAA,WAAW,CAAG,CAACD,cAAD,CAApB,CACA,GAAIE,CAAAA,KAAJ,CAEA,MAAO,SAASC,CAAAA,cAAT,CAAwBC,YAAxB,CAA0C,CAC7C,GAAMC,CAAAA,gBAAgB,CAAGC,MAAM,CAACC,oCAAP,EAA+CZ,OAAxE,CAEA,GAAMa,CAAAA,UAAU,CAAGd,WAAW,CAACI,QAAD,CAAWM,YAAX,CAAyBC,gBAAgB,CAACT,eAAe,MAAf,QAAmBK,WAAnB,CAAD,CAAzC,CAA9B,CACAD,cAAc,CAACS,GAAf,CAAmBV,QAAnB,EACAG,KAAK,CAAGM,UAAR,CACA,MAAOA,CAAAA,UAAP,CACH,CAED","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\ndeclare global {\n    interface Window {\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nlet store: any;\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const localstore = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(rootSaga);\n    store = localstore;\n    return localstore;\n}\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n"]},"metadata":{},"sourceType":"module"}