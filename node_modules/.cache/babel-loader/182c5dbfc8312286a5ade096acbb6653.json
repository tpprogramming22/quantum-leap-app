{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Buttons/OutlineRoundedButton.tsx\";\nimport { Button } from 'react-bootstrap'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OutlineRoundedButton = _ref => {\n  let {\n    variants\n  } = _ref;\n  const outlineRoundedButtonVariants = [...variants, 'light'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"header-title\",\n      children: \"Outline Rounded Buttons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sub-header\",\n      children: [\"Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \".rounded-pill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), \" to default button to get rounded corners.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-list\",\n      children: (outlineRoundedButtonVariants || []).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          variant: 'outline-' + item,\n          className: \"rounded-pill waves-effect waves-light\",\n          children: item.charAt(0).toUpperCase() + item.slice(1)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = OutlineRoundedButton;\nexport default OutlineRoundedButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutlineRoundedButton\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Buttons/OutlineRoundedButton.tsx"],"names":["Button","OutlineRoundedButton","variants","outlineRoundedButtonVariants","map","item","index","charAt","toUpperCase","slice","toString"],"mappings":";AAAA,SAASA,MAAT,QAAuB,iBAAvB,C,CAEA;;;;;AASA,MAAMC,oBAAoB,GAAG,QAA6C;AAAA,MAA5C;AAAEC,IAAAA;AAAF,GAA4C;AACtE,QAAMC,4BAA6C,GAAG,CAAC,GAAGD,QAAJ,EAAc,OAAd,CAAtD;AAEA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,sCACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACK,CAACC,4BAA4B,IAAI,EAAjC,EAAqCC,GAArC,CAAyC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvD,4BACI,QAAC,MAAD;AACI,UAAA,OAAO,EAAE,aAAaD,IAD1B;AAEI,UAAA,SAAS,EAAC,uCAFd;AAAA,oBAKKA,IAAI,CAAEE,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCH,IAAI,CAAEI,KAAN,CAAY,CAAZ;AALrC,WAGSH,KAAK,CAACI,QAAN,EAHT;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAVA;AADL;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADJ;AAsBH,CAzBD;;KAAMT,oB;AA2BN,eAAeA,oBAAf","sourcesContent":["import { Button } from 'react-bootstrap';\n\n// types\nimport { Variant } from './types';\n\ntype OutlineRoundedButtonProps = {\n    variants: Variant[];\n};\n\ntype ButtonVariant = Variant | 'light';\n\nconst OutlineRoundedButton = ({ variants }: OutlineRoundedButtonProps) => {\n    const outlineRoundedButtonVariants: ButtonVariant[] = [...variants, 'light'];\n\n    return (\n        <>\n            <h4 className=\"header-title\">Outline Rounded Buttons</h4>\n            <p className=\"sub-header\">\n                Add <code>.rounded-pill</code> to default button to get rounded corners.\n            </p>\n\n            <div className=\"button-list\">\n                {(outlineRoundedButtonVariants || []).map((item, index) => {\n                    return (\n                        <Button\n                            variant={'outline-' + item}\n                            className=\"rounded-pill waves-effect waves-light\"\n                            key={index.toString()}\n                        >\n                            {item!.charAt(0).toUpperCase() + item!.slice(1)}\n                        </Button>\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default OutlineRoundedButton;\n"]},"metadata":{},"sourceType":"module"}