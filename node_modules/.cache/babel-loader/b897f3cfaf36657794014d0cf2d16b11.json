{"ast":null,"code":"import classNames from'classnames';import{Form,OverlayTrigger,Tooltip}from'react-bootstrap';import{Link}from'react-router-dom';// types\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";// task item\nvar TaskItem=function TaskItem(props){var task=props.task||{};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:classNames('badge','float-end',{'bg-danger text-white':task.priority==='Urgent','bg-warning text-white':task.priority==='High'}),children:task.priority}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center mb-1\",children:[/*#__PURE__*/_jsx(Form.Check,{className:\"form-check form-check-success\",children:/*#__PURE__*/_jsx(Form.Check.Input,{type:\"checkbox\",name:\"taskCheck\",id:\"TaskCheck\"})}),/*#__PURE__*/_jsx(\"h5\",{className:\"my-0\",children:/*#__PURE__*/_jsx(Link,{to:\"/apps/tasks/details\",className:\"text-dark ms-1\",children:task.title})})]}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-inline kanban-detail\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"list-inline-item\",children:/*#__PURE__*/_jsx(OverlayTrigger,{placement:\"top\",overlay:/*#__PURE__*/_jsx(Tooltip,{children:task.userName}),children:/*#__PURE__*/_jsx(\"img\",{src:task.userAvatar,alt:task.userName,className:\"avatar-sm rounded-circle\"})})}),/*#__PURE__*/_jsx(\"li\",{className:\"list-inline-item\",children:/*#__PURE__*/_jsx(OverlayTrigger,{placement:\"top\",overlay:/*#__PURE__*/_jsx(Tooltip,{children:task.task+' Tasks'}),children:/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-format-align-left\"})})}),/*#__PURE__*/_jsx(\"li\",{className:\"list-inline-item\",children:/*#__PURE__*/_jsx(OverlayTrigger,{placement:\"top\",overlay:/*#__PURE__*/_jsx(Tooltip,{children:task.comment+' Comments'}),children:/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-comment-outline\"})})})]})]});};export default TaskItem;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/apps/Tasks/Board/Task.tsx"],"names":["classNames","Form","OverlayTrigger","Tooltip","Link","TaskItem","props","task","priority","title","userName","userAvatar","comment"],"mappings":"AAAA,MAAOA,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,IAAT,CAAeC,cAAf,CAA+BC,OAA/B,KAA8C,iBAA9C,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA;6IAOA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAA0B,CACvC,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAACC,IAAN,EAAc,EAA3B,CAEA,mBACI,wCACI,aACI,SAAS,CAAEP,UAAU,CAAC,OAAD,CAAU,WAAV,CAAuB,CACxC,uBAAwBO,IAAI,CAACC,QAAL,GAAkB,QADF,CAExC,wBAAyBD,IAAI,CAACC,QAAL,GAAkB,MAFH,CAAvB,CADzB,UAMKD,IAAI,CAACC,QANV,EADJ,cASI,aAAK,SAAS,CAAC,gCAAf,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,+BAAtB,uBACI,KAAC,IAAD,CAAM,KAAN,CAAY,KAAZ,EAAkB,IAAI,CAAC,UAAvB,CAAkC,IAAI,CAAC,WAAvC,CAAmD,EAAE,CAAC,WAAtD,EADJ,EADJ,cAII,WAAI,SAAS,CAAC,MAAd,uBACI,KAAC,IAAD,EAAM,EAAE,CAAC,qBAAT,CAA+B,SAAS,CAAC,gBAAzC,UACKD,IAAI,CAACE,KADV,EADJ,EAJJ,GATJ,cAoBI,YAAI,SAAS,CAAC,2BAAd,wBACI,WAAI,SAAS,CAAC,kBAAd,uBACI,KAAC,cAAD,EAAgB,SAAS,CAAC,KAA1B,CAAgC,OAAO,cAAE,KAAC,OAAD,WAAUF,IAAI,CAACG,QAAf,EAAzC,uBACI,YAAK,GAAG,CAAEH,IAAI,CAACI,UAAf,CAA2B,GAAG,CAAEJ,IAAI,CAACG,QAArC,CAA+C,SAAS,CAAC,0BAAzD,EADJ,EADJ,EADJ,cAMI,WAAI,SAAS,CAAC,kBAAd,uBACI,KAAC,cAAD,EAAgB,SAAS,CAAC,KAA1B,CAAgC,OAAO,cAAE,KAAC,OAAD,WAAUH,IAAI,CAACA,IAAL,CAAY,QAAtB,EAAzC,uBACI,UAAG,SAAS,CAAC,2BAAb,EADJ,EADJ,EANJ,cAWI,WAAI,SAAS,CAAC,kBAAd,uBACI,KAAC,cAAD,EAAgB,SAAS,CAAC,KAA1B,CAAgC,OAAO,cAAE,KAAC,OAAD,WAAUA,IAAI,CAACK,OAAL,CAAe,WAAzB,EAAzC,uBACI,UAAG,SAAS,CAAC,yBAAb,EADJ,EADJ,EAXJ,GApBJ,GADJ,CAwCH,CA3CD,CA6CA,cAAeP,CAAAA,QAAf","sourcesContent":["import classNames from 'classnames';\nimport { Form, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// types\nimport { KanbanBoardTask } from './types';\n\ntype TaskItemProps = {\n    task: KanbanBoardTask;\n};\n\n// task item\nconst TaskItem = (props: TaskItemProps) => {\n    const task = props.task || {};\n\n    return (\n        <>\n            <span\n                className={classNames('badge', 'float-end', {\n                    'bg-danger text-white': task.priority === 'Urgent',\n                    'bg-warning text-white': task.priority === 'High',\n                })}\n            >\n                {task.priority}\n            </span>\n            <div className=\"d-flex align-items-center mb-1\">\n                <Form.Check className=\"form-check form-check-success\">\n                    <Form.Check.Input type=\"checkbox\" name=\"taskCheck\" id=\"TaskCheck\" />\n                </Form.Check>\n                <h5 className=\"my-0\">\n                    <Link to=\"/apps/tasks/details\" className=\"text-dark ms-1\">\n                        {task.title}\n                    </Link>\n                </h5>\n            </div>\n\n            <ul className=\"list-inline kanban-detail\">\n                <li className=\"list-inline-item\">\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{task.userName}</Tooltip>}>\n                        <img src={task.userAvatar} alt={task.userName} className=\"avatar-sm rounded-circle\" />\n                    </OverlayTrigger>\n                </li>\n                <li className=\"list-inline-item\">\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{task.task + ' Tasks'}</Tooltip>}>\n                        <i className=\"mdi mdi-format-align-left\"></i>\n                    </OverlayTrigger>\n                </li>\n                <li className=\"list-inline-item\">\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{task.comment + ' Comments'}</Tooltip>}>\n                        <i className=\"mdi mdi-comment-outline\"></i>\n                    </OverlayTrigger>\n                </li>\n            </ul>\n        </>\n    );\n};\n\nexport default TaskItem;\n"]},"metadata":{},"sourceType":"module"}