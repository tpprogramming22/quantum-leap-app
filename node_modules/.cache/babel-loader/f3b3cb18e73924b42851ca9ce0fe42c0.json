{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/apps/Email/Compose.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup'; // editor\n\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs'; // styles\n\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'; // components\n\nimport { FormInput } from '../../../components/form/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Compose = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    toggleComposeModal\n  } = _ref;\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  useEffect(() => {\n    const html = `<h3><span class=\"ql-size-large\">Hello World!</span></h3>\n            <h5>This is a simple editable area.</h5>\n            <ul><li>Select a text to reveal the toolbar.</li><li>Edit rich document on-the-fly, so elastic!</li></ul>\n            <p>End of simple area</p>`;\n    const contentBlock = htmlToDraft(html);\n\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      setEditorState(EditorState.createWithContent(contentState));\n    }\n  }, []);\n  const schemaResolver = yupResolver(yup.object().shape({\n    to: yup.string().required('Please specify to email').email('Please enter valid Email'),\n    subject: yup.string().required('Please specify subject')\n  })); // form methods\n\n  const methods = useForm({\n    defaultValues: {},\n    resolver: schemaResolver\n  });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: {\n      errors\n    }\n  } = methods;\n  /**\n   * Handles the save\n   * @param {*} event\n   * @param {*} values\n   */\n\n  const handleEmailSave = (event, values) => {\n    const body = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n    console.log({ ...values,\n      body\n    });\n    toggleComposeModal();\n  };\n  /**\n   * On editor body change\n   */\n\n\n  const onEditorStateChange = editorStates => {\n    setEditorState(editorStates);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: isOpen,\n    onHide: toggleComposeModal,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      onHide: toggleComposeModal,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        as: \"h4\",\n        children: \"Compose Mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      as: \"h5\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleEmailSave),\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          name: \"to\",\n          placeholder: \"To\",\n          containerClass: 'mb-3',\n          register: register,\n          errors: errors,\n          control: control\n        }, \"to\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"email\",\n              name: \"cc\",\n              placeholder: \"Cc\",\n              containerClass: 'mb-3'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"email\",\n              name: \"bcc\",\n              placeholder: \"Bcc\",\n              containerClass: 'mb-3'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"subject\",\n          placeholder: \"Subject\",\n          containerClass: 'mb-3',\n          register: register,\n          errors: errors,\n          control: control\n        }, \"subject\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 card border-0\",\n          children: /*#__PURE__*/_jsxDEV(Editor, {\n            editorState: editorState,\n            onEditorStateChange: onEditorStateChange,\n            toolbarClassName: \"draft-toolbar\",\n            editorClassName: \"react-draft-editor\",\n            wrapperClassName: \"react-draft-wrapper  border border-1 rounded-1\",\n            editorStyle: {\n              minHeight: '170px'\n            },\n            toolbar: {\n              options: ['inline', 'fontSize', 'fontFamily', 'list', 'textAlign', 'link'],\n              inline: {\n                inDropdown: true\n              },\n              list: {\n                inDropdown: true\n              },\n              textAlign: {\n                inDropdown: true\n              },\n              link: {\n                inDropdown: true\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-toolbar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-end\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-success waves-effect waves-light me-1\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-success waves-effect waves-light me-1\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-trash-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"btn-purple waves-effect waves-light\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-paper-plane ms-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Compose, \"ToH+qJhsDXc1eGVbcC3ATK8jFmk=\", false, function () {\n  return [useForm];\n});\n\n_c = Compose;\nexport default Compose;\n\nvar _c;\n\n$RefreshReg$(_c, \"Compose\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/apps/Email/Compose.tsx"],"names":["React","useEffect","useState","Modal","Button","Row","Col","useForm","yup","yupResolver","EditorState","convertToRaw","ContentState","Editor","draftToHtml","htmlToDraft","FormInput","Compose","isOpen","toggleComposeModal","editorState","setEditorState","createEmpty","html","contentBlock","contentState","createFromBlockArray","contentBlocks","createWithContent","schemaResolver","object","shape","to","string","required","email","subject","methods","defaultValues","resolver","handleSubmit","register","control","formState","errors","handleEmailSave","event","values","body","getCurrentContent","console","log","onEditorStateChange","editorStates","minHeight","options","inline","inDropdown","list","textAlign","link"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,GAA7B,QAAwC,iBAAxC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,QAAwD,UAAxD;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB,C,CAEA;;AACA,OAAO,kDAAP,C,CAEA;;AACA,SAASC,SAAT,QAA0B,2BAA1B;;;AAOA,MAAMC,OAAO,GAAG,QAAuD;AAAA;;AAAA,MAAtD;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAsD;AACnE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAACQ,WAAW,CAACY,WAAZ,EAAD,CAA9C;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsB,IAAI,GAAI;AACtB;AACA;AACA,sCAHQ;AAIA,UAAMC,YAAY,GAAGT,WAAW,CAACQ,IAAD,CAAhC;;AACA,QAAIC,YAAJ,EAAkB;AACd,YAAMC,YAAY,GAAGb,YAAY,CAACc,oBAAb,CAAkCF,YAAY,CAACG,aAA/C,CAArB;AACAN,MAAAA,cAAc,CAACX,WAAW,CAACkB,iBAAZ,CAA8BH,YAA9B,CAAD,CAAd;AACH;AACJ,GAVQ,EAUN,EAVM,CAAT;AAYA,QAAMI,cAAc,GAAGpB,WAAW,CAC9BD,GAAG,CAACsB,MAAJ,GAAaC,KAAb,CAAmB;AACfC,IAAAA,EAAE,EAAExB,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,EAAiDC,KAAjD,CAAuD,0BAAvD,CADW;AAEfC,IAAAA,OAAO,EAAE5B,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB;AAFM,GAAnB,CAD8B,CAAlC,CAfmE,CAsBnE;;AACA,QAAMG,OAAO,GAAG9B,OAAO,CAAC;AAAE+B,IAAAA,aAAa,EAAE,EAAjB;AAAqBC,IAAAA,QAAQ,EAAEV;AAA/B,GAAD,CAAvB;AACA,QAAM;AACFW,IAAAA,YADE;AAEFC,IAAAA,QAFE;AAGFC,IAAAA,OAHE;AAIFC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJT,MAKFP,OALJ;AAOA;AACJ;AACA;AACA;AACA;;AACI,QAAMQ,eAAe,GAAG,CAACC,KAAD,EAAaC,MAAb,KAA6B;AACjD,UAAMC,IAAI,GAAGlC,WAAW,CAACH,YAAY,CAACS,WAAW,CAAC6B,iBAAZ,EAAD,CAAb,CAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAE,GAAGJ,MAAL;AAAaC,MAAAA;AAAb,KAAZ;AACA7B,IAAAA,kBAAkB;AACrB,GAJD;AAMA;AACJ;AACA;;;AACI,QAAMiC,mBAAmB,GAAIC,YAAD,IAAqD;AAC7EhC,IAAAA,cAAc,CAACgC,YAAD,CAAd;AACH,GAFD;;AAIA,sBACI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEnC,MAAb;AAAqB,IAAA,MAAM,EAAEC,kBAA7B;AAAiD,IAAA,QAAQ,MAAzD;AAAA,4BACI,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAA0B,MAAA,MAAM,EAAEA,kBAAlC;AAAA,6BACI,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,KAAD,CAAO,IAAP;AAAY,MAAA,EAAE,EAAC,IAAf;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEqB,YAAY,CAACK,eAAD,CAA5B;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,IAFT;AAGI,UAAA,WAAW,EAAC,IAHhB;AAII,UAAA,cAAc,EAAE,MAJpB;AAKI,UAAA,QAAQ,EAAEJ,QALd;AAOI,UAAA,MAAM,EAAEG,MAPZ;AAQI,UAAA,OAAO,EAAEF;AARb,WAMQ,IANR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,IAAI,EAAC,OAAhB;AAAwB,cAAA,IAAI,EAAC,IAA7B;AAAkC,cAAA,WAAW,EAAC,IAA9C;AAAmD,cAAA,cAAc,EAAE;AAAnE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,IAAI,EAAC,OAAhB;AAAwB,cAAA,IAAI,EAAC,KAA7B;AAAmC,cAAA,WAAW,EAAC,KAA/C;AAAqD,cAAA,cAAc,EAAE;AAArE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAqBI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,SAFT;AAGI,UAAA,WAAW,EAAC,SAHhB;AAII,UAAA,cAAc,EAAE,MAJpB;AAKI,UAAA,QAAQ,EAAED,QALd;AAOI,UAAA,MAAM,EAAEG,MAPZ;AAQI,UAAA,OAAO,EAAEF;AARb,WAMQ,SANR;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAgCI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,WAAW,EAAEtB,WADjB;AAEI,YAAA,mBAAmB,EAAEgC,mBAFzB;AAGI,YAAA,gBAAgB,EAAC,eAHrB;AAII,YAAA,eAAe,EAAC,oBAJpB;AAKI,YAAA,gBAAgB,EAAC,gDALrB;AAMI,YAAA,WAAW,EAAE;AAAEE,cAAAA,SAAS,EAAE;AAAb,aANjB;AAOI,YAAA,OAAO,EAAE;AACLC,cAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,UAAX,EAAuB,YAAvB,EAAqC,MAArC,EAA6C,WAA7C,EAA0D,MAA1D,CADJ;AAELC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,UAAU,EAAE;AAAd,eAFH;AAGLC,cAAAA,IAAI,EAAE;AAAED,gBAAAA,UAAU,EAAE;AAAd,eAHD;AAILE,cAAAA,SAAS,EAAE;AAAEF,gBAAAA,UAAU,EAAE;AAAd,eAJN;AAKLG,cAAAA,IAAI,EAAE;AAAEH,gBAAAA,UAAU,EAAE;AAAd;AALD;AAPb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAhCJ,eAiDI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,2CAAlB;AAAA,qCACI;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,2CAAlB;AAAA,qCACI;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,qCAAhC;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAjDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0EH,CA3HD;;GAAMxC,O;UAuBcV,O;;;KAvBdU,O;AA6HN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n// editor\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\n// styles\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n// components\nimport { FormInput } from '../../../components/form/';\n\ntype ComposeEmailProps = {\n    isOpen: boolean;\n    toggleComposeModal: () => void;\n};\n\nconst Compose = ({ isOpen, toggleComposeModal }: ComposeEmailProps) => {\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n    useEffect(() => {\n        const html = `<h3><span class=\"ql-size-large\">Hello World!</span></h3>\n            <h5>This is a simple editable area.</h5>\n            <ul><li>Select a text to reveal the toolbar.</li><li>Edit rich document on-the-fly, so elastic!</li></ul>\n            <p>End of simple area</p>`;\n        const contentBlock = htmlToDraft(html);\n        if (contentBlock) {\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n            setEditorState(EditorState.createWithContent(contentState));\n        }\n    }, []);\n\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            to: yup.string().required('Please specify to email').email('Please enter valid Email'),\n            subject: yup.string().required('Please specify subject'),\n        })\n    );\n\n    // form methods\n    const methods = useForm({ defaultValues: {}, resolver: schemaResolver });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    /**\n     * Handles the save\n     * @param {*} event\n     * @param {*} values\n     */\n    const handleEmailSave = (event: any, values: any) => {\n        const body = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n        console.log({ ...values, body });\n        toggleComposeModal();\n    };\n\n    /**\n     * On editor body change\n     */\n    const onEditorStateChange = (editorStates: React.SetStateAction<EditorState>) => {\n        setEditorState(editorStates);\n    };\n\n    return (\n        <Modal show={isOpen} onHide={toggleComposeModal} centered>\n            <Modal.Header closeButton onHide={toggleComposeModal}>\n                <Modal.Title as=\"h4\">Compose Mail</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body as=\"h5\">\n                <form onSubmit={handleSubmit(handleEmailSave)}>\n                    <FormInput\n                        type=\"email\"\n                        name=\"to\"\n                        placeholder=\"To\"\n                        containerClass={'mb-3'}\n                        register={register}\n                        key=\"to\"\n                        errors={errors}\n                        control={control}\n                    />\n\n                    <Row>\n                        <Col md={6}>\n                            <FormInput type=\"email\" name=\"cc\" placeholder=\"Cc\" containerClass={'mb-3'} />\n                        </Col>\n                        <Col md={6}>\n                            <FormInput type=\"email\" name=\"bcc\" placeholder=\"Bcc\" containerClass={'mb-3'} />\n                        </Col>\n                    </Row>\n\n                    <FormInput\n                        type=\"text\"\n                        name=\"subject\"\n                        placeholder=\"Subject\"\n                        containerClass={'mb-3'}\n                        register={register}\n                        key=\"subject\"\n                        errors={errors}\n                        control={control}\n                    />\n\n                    <div className=\"mb-3 card border-0\">\n                        <Editor\n                            editorState={editorState}\n                            onEditorStateChange={onEditorStateChange}\n                            toolbarClassName=\"draft-toolbar\"\n                            editorClassName=\"react-draft-editor\"\n                            wrapperClassName=\"react-draft-wrapper  border border-1 rounded-1\"\n                            editorStyle={{ minHeight: '170px' }}\n                            toolbar={{\n                                options: ['inline', 'fontSize', 'fontFamily', 'list', 'textAlign', 'link'],\n                                inline: { inDropdown: true },\n                                list: { inDropdown: true },\n                                textAlign: { inDropdown: true },\n                                link: { inDropdown: true },\n                            }}\n                        />\n                    </div>\n                    <div className=\"btn-toolbar\">\n                        <div className=\"float-end\">\n                            <Button className=\"btn-success waves-effect waves-light me-1\">\n                                <i className=\"far fa-save\"></i>\n                            </Button>\n                            <Button className=\"btn-success waves-effect waves-light me-1\">\n                                <i className=\"far fa-trash-alt\"></i>\n                            </Button>\n                            <Button type=\"submit\" className=\"btn-purple waves-effect waves-light\">\n                                <span>Send</span>\n                                <i className=\"fas fa-paper-plane ms-1\"></i>\n                            </Button>\n                        </div>\n                    </div>\n                </form>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nexport default Compose;\n"]},"metadata":{},"sourceType":"module"}