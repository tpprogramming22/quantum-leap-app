{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/TabsAccordions/Accordion1.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Accordion, useAccordionButton, AccordionContext } from 'react-bootstrap';\nimport classNames from 'classnames'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomToggle = _ref => {\n  _s();\n\n  let {\n    children,\n    eventKey,\n    containerClass,\n    linkClass,\n    callback\n  } = _ref;\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  const decoratedOnClick = useAccordionButton(eventKey, () => callback && callback(eventKey));\n  const isCurrentEventKey = activeEventKey === eventKey;\n  return /*#__PURE__*/_jsxDEV(\"h5\", {\n    className: containerClass,\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: classNames(linkClass, {\n        collapsed: !isCurrentEventKey\n      }),\n      onClick: decoratedOnClick,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomToggle, \"K86ZTghp9ndlgItxjW5zFoW1hWo=\", false, function () {\n  return [useAccordionButton];\n});\n\n_c = CustomToggle;\n\nconst Accordion1 = _ref2 => {\n  let {\n    accordionContent\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    defaultActiveKey: \"0\",\n    id: \"accordion\",\n    className: \"mb-3\",\n    children: (accordionContent || []).map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(CustomToggle, {\n            eventKey: String(index),\n            containerClass: \"m-0\",\n            linkClass: \"text-dark\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-help-circle me-1 text-primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), item.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n          eventKey: String(index),\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, index.toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Accordion1;\nexport default Accordion1;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomToggle\");\n$RefreshReg$(_c2, \"Accordion1\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/TabsAccordions/Accordion1.tsx"],"names":["useContext","Link","Card","Accordion","useAccordionButton","AccordionContext","classNames","CustomToggle","children","eventKey","containerClass","linkClass","callback","activeEventKey","decoratedOnClick","isCurrentEventKey","collapsed","Accordion1","accordionContent","map","item","index","String","title","text","toString"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,kBAA1B,EAA8CC,gBAA9C,QAAsE,iBAAtE;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;;;AAeA,MAAMC,YAAY,GAAG,QAAoF;AAAA;;AAAA,MAAnF;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,cAAtB;AAAsCC,IAAAA,SAAtC;AAAiDC,IAAAA;AAAjD,GAAmF;AACrG,QAAM;AAAEC,IAAAA;AAAF,MAAqBb,UAAU,CAACK,gBAAD,CAArC;AAEA,QAAMS,gBAAgB,GAAGV,kBAAkB,CAACK,QAAD,EAAW,MAAMG,QAAQ,IAAIA,QAAQ,CAACH,QAAD,CAArC,CAA3C;AAEA,QAAMM,iBAAiB,GAAGF,cAAc,KAAKJ,QAA7C;AAEA,sBACI;AAAI,IAAA,SAAS,EAAEC,cAAf;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,EAAE,EAAC,GADP;AAEI,MAAA,SAAS,EAAEJ,UAAU,CAACK,SAAD,EAAY;AAC7BK,QAAAA,SAAS,EAAE,CAACD;AADiB,OAAZ,CAFzB;AAKI,MAAA,OAAO,EAAED,gBALb;AAAA,gBAOKN;AAPL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CApBD;;GAAMD,Y;UAGuBH,kB;;;KAHvBG,Y;;AAsBN,MAAMU,UAAU,GAAG,SAA0C;AAAA,MAAzC;AAAEC,IAAAA;AAAF,GAAyC;AACzD,sBACI,QAAC,SAAD;AAAW,IAAA,gBAAgB,EAAC,GAA5B;AAAgC,IAAA,EAAE,EAAC,WAAnC;AAA+C,IAAA,SAAS,EAAC,MAAzD;AAAA,cACK,CAACA,gBAAgB,IAAI,EAArB,EAAyBC,GAAzB,CAA6B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3C,0BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,gCACI,QAAC,IAAD,CAAM,MAAN;AAAA,iCACI,QAAC,YAAD;AAAc,YAAA,QAAQ,EAAEC,MAAM,CAACD,KAAD,CAA9B;AAAuC,YAAA,cAAc,EAAC,KAAtD;AAA4D,YAAA,SAAS,EAAC,WAAtE;AAAA,oCACI;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKD,IAAI,CAACG,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,SAAD,CAAW,QAAX;AAAoB,UAAA,QAAQ,EAAED,MAAM,CAACD,KAAD,CAApC;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,sBAAYD,IAAI,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA,SAA4BH,KAAK,CAACI,QAAN,EAA5B;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH,KAdA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CApBD;;MAAMR,U;AAsBN,eAAeA,UAAf","sourcesContent":["import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Accordion, useAccordionButton, AccordionContext } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// types\nimport { TabContent } from './types';\n\ntype AccordionProps = {\n    accordionContent: TabContent[];\n};\n\ntype CustomToggleProps = {\n    children: React.ReactNode;\n    eventKey: string;\n    containerClass: string;\n    linkClass: string;\n    callback?: any;\n};\n\nconst CustomToggle = ({ children, eventKey, containerClass, linkClass, callback }: CustomToggleProps) => {\n    const { activeEventKey } = useContext(AccordionContext);\n\n    const decoratedOnClick = useAccordionButton(eventKey, () => callback && callback(eventKey));\n\n    const isCurrentEventKey = activeEventKey === eventKey;\n\n    return (\n        <h5 className={containerClass}>\n            <Link\n                to=\"#\"\n                className={classNames(linkClass, {\n                    collapsed: !isCurrentEventKey,\n                })}\n                onClick={decoratedOnClick}\n            >\n                {children}\n            </Link>\n        </h5>\n    );\n};\n\nconst Accordion1 = ({ accordionContent }: AccordionProps) => {\n    return (\n        <Accordion defaultActiveKey=\"0\" id=\"accordion\" className=\"mb-3\">\n            {(accordionContent || []).map((item, index) => {\n                return (\n                    <Card className=\"mb-1\" key={index.toString()}>\n                        <Card.Header>\n                            <CustomToggle eventKey={String(index)} containerClass=\"m-0\" linkClass=\"text-dark\">\n                                <i className=\"mdi mdi-help-circle me-1 text-primary\"></i>\n                                {item.title}\n                            </CustomToggle>\n                        </Card.Header>\n                        <Accordion.Collapse eventKey={String(index)}>\n                            <Card.Body>{item.text}</Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                );\n            })}\n        </Accordion>\n    );\n};\n\nexport default Accordion1;\n"]},"metadata":{},"sourceType":"module"}