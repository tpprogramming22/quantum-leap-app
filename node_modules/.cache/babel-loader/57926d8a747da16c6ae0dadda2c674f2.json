{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/GeneralUI/ContextualBadges.tsx\";\nimport { Badge, Card } from 'react-bootstrap';\nimport classNames from 'classnames'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContexualBadges = _ref => {\n  let {\n    variants\n  } = _ref;\n  const contexualBadges = [...variants];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Contexual variations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: [\"Add any of the below mentioned modifier classes to change the appearance of a badge. Badge can be more contextual as well. Just use regular convention e.g. \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"bg-*color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 79\n        }, this), \" to have badge with different background.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), (contexualBadges || []).map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          className: classNames('me-1', 'badge', 'bg-' + color, color === 'light' ? 'text-dark' : null),\n          bg: \"\",\n          children: color.charAt(0).toUpperCase() + color.slice(1)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mt-4\",\n        children: \"Soft Badges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: [\"Using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".badge-soft-*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 31\n        }, this), \" modifier class, you can have more soften variation.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), (contexualBadges || []).map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          className: classNames('me-1', 'badge-soft-' + color),\n          bg: \"\",\n          children: color.charAt(0).toUpperCase() + color.slice(1)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mt-4\",\n        children: \"Outline Badges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: [\"Using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".badge-outline-*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 31\n        }, this), \" to quickly create a bordered badges.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), (contexualBadges || []).map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"\",\n          className: classNames('me-1', 'badge-outline-' + color),\n          children: color.charAt(0).toUpperCase() + color.slice(1)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ContexualBadges;\nexport default ContexualBadges;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContexualBadges\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/GeneralUI/ContextualBadges.tsx"],"names":["Badge","Card","classNames","ContexualBadges","variants","contexualBadges","map","color","index","charAt","toUpperCase","slice","toString"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,iBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;;;AASA,MAAMC,eAAe,GAAG,QAAyC;AAAA,MAAxC;AAAEC,IAAAA;AAAF,GAAwC;AAC7D,QAAMC,eAAgC,GAAG,CAAC,GAAGD,QAAJ,CAAzC;AAEA,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,gMAE8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF9D;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAQK,CAACC,eAAe,IAAI,EAApB,EAAwBC,GAAxB,CAA4B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3C,4BACI,QAAC,KAAD;AACI,UAAA,SAAS,EAAEN,UAAU,CACjB,MADiB,EAEjB,OAFiB,EAGjB,QAAQK,KAHS,EAIjBA,KAAK,KAAK,OAAV,GAAoB,WAApB,GAAkC,IAJjB,CADzB;AAOI,UAAA,EAAE,EAAC,EAPP;AAAA,oBAUKA,KAAK,CAAEE,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCH,KAAK,CAAEI,KAAP,CAAa,CAAb;AAVtC,WAQSH,KAAK,CAACI,QAAN,EART;AAAA;AAAA;AAAA;AAAA,gBADJ;AAcH,OAfA,CARL,eAyBI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ,eA0BI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,8CACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADd;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BJ,EA8BK,CAACP,eAAe,IAAI,EAApB,EAAwBC,GAAxB,CAA4B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3C,4BACI,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEN,UAAU,CAAC,MAAD,EAAS,gBAAgBK,KAAzB,CAA5B;AAA6D,UAAA,EAAE,EAAC,EAAhE;AAAA,oBACKA,KAAK,CAAEE,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCH,KAAK,CAAEI,KAAP,CAAa,CAAb;AADtC,WAAwEH,KAAK,CAACI,QAAN,EAAxE;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA,CA9BL,eAsCI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCJ,eAuCI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,8CACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADd;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCJ,EA2CK,CAACP,eAAe,IAAI,EAApB,EAAwBC,GAAxB,CAA4B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3C,4BACI,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,EAAV;AAAa,UAAA,SAAS,EAAEN,UAAU,CAAC,MAAD,EAAS,mBAAmBK,KAA5B,CAAlC;AAAA,oBACKA,KAAK,CAAEE,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCH,KAAK,CAAEI,KAAP,CAAa,CAAb;AADtC,WAA2EH,KAAK,CAACI,QAAN,EAA3E;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA,CA3CL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuDH,CA1DD;;KAAMT,e;AA4DN,eAAeA,eAAf","sourcesContent":["import { Badge, Card } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// types\nimport { Variant } from './types';\n\ntype ContextualBadgesProps = {\n    variants: Variant[];\n};\n\ntype BadgesVariant = Variant;\n\nconst ContexualBadges = ({ variants }: ContextualBadgesProps) => {\n    const contexualBadges: BadgesVariant[] = [...variants];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Contexual variations</h4>\n                <p className=\"sub-header\">\n                    Add any of the below mentioned modifier classes to change the appearance of a badge. Badge can be\n                    more contextual as well. Just use regular convention e.g. <code>bg-*color</code> to have badge with\n                    different background.\n                </p>\n\n                {(contexualBadges || []).map((color, index) => {\n                    return (\n                        <Badge\n                            className={classNames(\n                                'me-1',\n                                'badge',\n                                'bg-' + color,\n                                color === 'light' ? 'text-dark' : null\n                            )}\n                            bg=\"\"\n                            key={index.toString()}\n                        >\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                        </Badge>\n                    );\n                })}\n\n                <h5 className=\"mt-4\">Soft Badges</h5>\n                <p className=\"sub-header\">\n                    Using the <code>.badge-soft-*</code> modifier class, you can have more soften variation.\n                </p>\n\n                {(contexualBadges || []).map((color, index) => {\n                    return (\n                        <Badge className={classNames('me-1', 'badge-soft-' + color)} bg=\"\" key={index.toString()}>\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                        </Badge>\n                    );\n                })}\n\n                <h5 className=\"mt-4\">Outline Badges</h5>\n                <p className=\"sub-header\">\n                    Using the <code>.badge-outline-*</code> to quickly create a bordered badges.\n                </p>\n\n                {(contexualBadges || []).map((color, index) => {\n                    return (\n                        <Badge bg=\"\" className={classNames('me-1', 'badge-outline-' + color)} key={index.toString()}>\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                        </Badge>\n                    );\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ContexualBadges;\n"]},"metadata":{},"sourceType":"module"}