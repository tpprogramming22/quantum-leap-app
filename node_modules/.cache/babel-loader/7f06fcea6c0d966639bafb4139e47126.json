{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/topbar/NotificationDropdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { Badge, Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames'; // hooks\n\nimport { useToggle } from '../../hooks'; // components\n\nimport Scrollbar from '../Scrollbar'; // dummy data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NotificationDropdown = _ref => {\n  _s();\n\n  let {\n    notifications\n  } = _ref;\n  const [isOpen, show, hide] = useToggle();\n  /*\n   * toggle apps-dropdown\n   */\n\n  const toggleDropdown = () => {\n    isOpen ? hide() : show();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    show: isOpen,\n    onToggle: toggleDropdown,\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      variant: \"\",\n      as: \"a\",\n      className: \"nav-link waves-effect waves-light\",\n      onClick: toggleDropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fe-bell noti-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"danger\",\n        className: \"rounded-circle noti-icon-badge\",\n        children: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      align: \"end\",\n      className: \"dropdown-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          as: \"div\",\n          className: \"noti-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"m-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"float-end\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                className: \"text-dark\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Clear All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), \"Notification\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n          className: \"noti-scroll\",\n          children: (notifications || []).map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              className: \"notify-item\",\n              children: item.avatar ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"notify-icon\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.avatar,\n                    alt: \"\",\n                    className: \"img-fluid rounded-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"notify-details\",\n                  children: item.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-muted mb-0 user-msg\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: item.subText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classNames('notify-icon', 'bg-' + item.bgColor),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: item.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"notify-details\",\n                  children: [item.text, \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-muted\",\n                    children: item.subText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, index.toString(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          className: \"text-center text-primary notify-item notify-all\",\n          children: [\"View All \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fe-arrow-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotificationDropdown, \"jOUES55wwQLGDP9Zc9ZaHu73Gis=\", false, function () {\n  return [useToggle];\n});\n\n_c = NotificationDropdown;\nexport default NotificationDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDropdown\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/topbar/NotificationDropdown.tsx"],"names":["Badge","Dropdown","Link","classNames","useToggle","Scrollbar","NotificationDropdown","notifications","isOpen","show","hide","toggleDropdown","map","item","index","avatar","text","subText","bgColor","icon","toString"],"mappings":"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","sourcesContent":["import { Badge, Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// hooks\nimport { useToggle } from '../../hooks';\n\n// components\nimport Scrollbar from '../Scrollbar';\n\n// dummy data\nimport { Notification } from '../../layouts/types';\n\ntype NotificationDropdownProps = {\n    notifications: Notification[];\n};\n\nconst NotificationDropdown = ({ notifications }: NotificationDropdownProps) => {\n    const [isOpen, show, hide] = useToggle();\n\n    /*\n     * toggle apps-dropdown\n     */\n    const toggleDropdown = () => {\n        isOpen ? hide() : show();\n    };\n\n    return (\n        <Dropdown show={isOpen} onToggle={toggleDropdown}>\n            <Dropdown.Toggle variant=\"\" as=\"a\" className=\"nav-link waves-effect waves-light\" onClick={toggleDropdown}>\n                <i className=\"fe-bell noti-icon\"></i>\n                <Badge bg=\"danger\" className=\"rounded-circle noti-icon-badge\">\n                    9\n                </Badge>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu align=\"end\" className=\"dropdown-lg\">\n                <div onClick={toggleDropdown}>\n                    <Dropdown.Item as=\"div\" className=\"noti-title\">\n                        <h5 className=\"m-0\">\n                            <span className=\"float-end\">\n                                <Link to=\"#\" className=\"text-dark\">\n                                    <small>Clear All</small>\n                                </Link>\n                            </span>\n                            Notification\n                        </h5>\n                    </Dropdown.Item>\n                    <Scrollbar className=\"noti-scroll\">\n                        {(notifications || []).map((item, index) => {\n                            return (\n                                <Dropdown.Item key={index.toString()} className=\"notify-item\">\n                                    {item.avatar ? (\n                                        <>\n                                            <div className=\"notify-icon\">\n                                                <img src={item.avatar} alt=\"\" className=\"img-fluid rounded-circle\" />\n                                            </div>\n                                            <p className=\"notify-details\">{item.text}</p>\n                                            <p className=\"text-muted mb-0 user-msg\">\n                                                <small>{item.subText}</small>\n                                            </p>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <div className={classNames('notify-icon', 'bg-' + item.bgColor)}>\n                                                <i className={item.icon}></i>\n                                            </div>\n                                            <p className=\"notify-details\">\n                                                {item.text} <small className=\"text-muted\">{item.subText}</small>\n                                            </p>\n                                        </>\n                                    )}\n                                </Dropdown.Item>\n                            );\n                        })}\n                    </Scrollbar>\n\n                    <Dropdown.Item className=\"text-center text-primary notify-item notify-all\">\n                        View All <i className=\"fe-arrow-right\"></i>\n                    </Dropdown.Item>\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default NotificationDropdown;\n"]},"metadata":{},"sourceType":"module"}