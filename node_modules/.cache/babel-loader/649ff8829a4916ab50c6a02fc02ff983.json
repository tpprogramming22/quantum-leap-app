{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Dropdowns/SpiltButtonDropdown.tsx\";\nimport { Button, ButtonGroup, Dropdown } from 'react-bootstrap'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SplitButtonDropdown = _ref => {\n  let {\n    variants\n  } = _ref;\n  const splitButtonDropdown = [...variants];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mb-1\",\n      children: \"Split button dropdowns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted font-13 mb-3\",\n      children: [\"You can split button dropdowns by adding \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"SplitButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 58\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), (splitButtonDropdown || []).map((color, index) => {\n      return /*#__PURE__*/_jsxDEV(Dropdown, {\n        as: ButtonGroup,\n        className: \"me-1 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: color,\n          children: color.charAt(0).toUpperCase() + color.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          split: true,\n          variant: color,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-chevron-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"1\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"2\",\n            children: \"Another action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"3\",\n            children: \"Something else here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"4\",\n            children: \"Separated link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, index.toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_c = SplitButtonDropdown;\nexport default SplitButtonDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"SplitButtonDropdown\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Dropdowns/SpiltButtonDropdown.tsx"],"names":["Button","ButtonGroup","Dropdown","SplitButtonDropdown","variants","splitButtonDropdown","map","color","index","charAt","toUpperCase","slice","toString"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,QAA9B,QAA8C,iBAA9C,C,CAEA;;;;;AASA,MAAMC,mBAAmB,GAAG,QAA4C;AAAA,MAA3C;AAAEC,IAAAA;AAAF,GAA2C;AACpE,QAAMC,mBAAsC,GAAG,CAAC,GAAGD,QAAJ,CAA/C;AAEA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA,2EAC6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD7C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAKK,CAACC,mBAAmB,IAAI,EAAxB,EAA4BC,GAA5B,CAAgC,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/C,0BACI,QAAC,QAAD;AAAiC,QAAA,EAAE,EAAEP,WAArC;AAAkD,QAAA,SAAS,EAAC,WAA5D;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEM,KAAjB;AAAA,oBAAyBA,KAAK,CAAEE,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCH,KAAK,CAAEI,KAAP,CAAa,CAAb;AAA1D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,QAAD,CAAU,MAAV;AAAiB,UAAA,KAAK,MAAtB;AAAuB,UAAA,OAAO,EAAEJ,KAAhC;AAAA,iCACI;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAOI,QAAC,QAAD,CAAU,IAAV;AAAA,kCACI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII,QAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA,SAAeC,KAAK,CAACI,QAAN,EAAf;AAAA;AAAA;AAAA;AAAA,cADJ;AAiBH,KAlBA,CALL;AAAA,kBADJ;AA2BH,CA9BD;;KAAMT,mB;AAgCN,eAAeA,mBAAf","sourcesContent":["import { Button, ButtonGroup, Dropdown } from 'react-bootstrap';\n\n// types\nimport { Variant } from './types';\n\ntype SpiltButtonDropdownProps = {\n    variants: Variant[];\n};\n\ntype DropdownVariant = Variant;\n\nconst SplitButtonDropdown = ({ variants }: SpiltButtonDropdownProps) => {\n    const splitButtonDropdown: DropdownVariant[] = [...variants];\n\n    return (\n        <>\n            <h5 className=\"mb-1\">Split button dropdowns</h5>\n            <p className=\"text-muted font-13 mb-3\">\n                You can split button dropdowns by adding <code>SplitButton</code>.\n            </p>\n            {(splitButtonDropdown || []).map((color, index) => {\n                return (\n                    <Dropdown key={index.toString()} as={ButtonGroup} className=\"me-1 mb-2\">\n                        <Button variant={color}>{color!.charAt(0).toUpperCase() + color!.slice(1)}</Button>\n\n                        <Dropdown.Toggle split variant={color}>\n                            <i className=\"mdi mdi-chevron-down\"></i>\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                );\n            })}\n        </>\n    );\n};\n\nexport default SplitButtonDropdown;\n"]},"metadata":{},"sourceType":"module"}