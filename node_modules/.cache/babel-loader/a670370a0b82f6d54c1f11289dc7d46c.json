{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/apps/Contacts/List/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Button, Card, Col, Modal, Row } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup'; // hooks\n\nimport { usePageTitle } from '../../../../hooks'; // component\n\nimport { VerticalForm, FormInput } from '../../../../components/form';\nimport ContactDetails from '../../../../components/ContactDetails'; // data\n\nimport { contacts } from './data'; // dummy data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst List = () => {\n  _s();\n\n  // set pagetitle\n  usePageTitle({\n    title: 'Contacts List',\n    breadCrumbItems: [{\n      path: '/apps/contacts/list',\n      label: 'Contacts'\n    }, {\n      path: '/apps/contacts/list',\n      label: 'Contacts List',\n      active: true\n    }]\n  });\n  const [modal, setModal] = useState(false); // Show/hide the modal\n\n  const toggle = () => {\n    setModal(!modal);\n  }; // form validation schema\n\n\n  const schemaResolver = yupResolver(yup.object().shape({\n    name: yup.string().required('Please enter name'),\n    position: yup.string().required('Please enter your position'),\n    company: yup.string().required('Please enter your company name'),\n    email: yup.string().required('Please enter Email address').email('Enter valid email')\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"justify-content-center\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-3 mt-md-0\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    className: \"waves-effect waves-light\",\n                    onClick: toggle,\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-plus-circle me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 45\n                    }, this), \"Add contact\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 8,\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: \"d-flex flex-wrap align-items-center justify-content-sm-end\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"me-2\",\n                    children: \"Sort By\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                    type: \"select\",\n                    name: \"sort\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"All\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Post\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Followers\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Followings\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                    type: \"search\",\n                    name: \"search\",\n                    placeholder: \"Search...\",\n                    className: \"ms-sm-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: (contacts || []).map((contact, index) => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          xl: 4,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(ContactDetails, {\n            contact: contact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: modal,\n      onHide: toggle,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          as: \"h4\",\n          children: \"Add Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(VerticalForm, {\n          onSubmit: () => {},\n          resolver: schemaResolver,\n          defaultValues: {},\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            label: 'Name',\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Enter name\",\n            containerClass: 'mb-3'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: 'Position',\n            type: \"text\",\n            name: \"position\",\n            placeholder: \"Enter position\",\n            containerClass: 'mb-3'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: 'Company',\n            type: \"text\",\n            name: \"company\",\n            placeholder: \"Enter company\",\n            containerClass: 'mb-3'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: 'Email address',\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Enter email\",\n            containerClass: 'mb-3'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"light\",\n            className: \"waves-effect waves-light me-1\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            className: \"waves-effect waves-light\",\n            onClick: toggle,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(List, \"Ya8Lj4tBsPe5evtGUm5OBiH7E0M=\", false, function () {\n  return [usePageTitle];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/apps/Contacts/List/index.tsx"],"names":["useState","Button","Card","Col","Modal","Row","yup","yupResolver","usePageTitle","VerticalForm","FormInput","ContactDetails","contacts","List","title","breadCrumbItems","path","label","active","modal","setModal","toggle","schemaResolver","object","shape","name","string","required","position","company","email","map","contact","index","toString"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Button, Card, Col, Modal, Row } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n// hooks\nimport { usePageTitle } from '../../../../hooks';\n\n// component\nimport { VerticalForm, FormInput } from '../../../../components/form';\n\nimport ContactDetails from '../../../../components/ContactDetails';\n\n// data\nimport { contacts } from './data';\n\n// dummy data\n\ntype MemberData = {\n    name: string;\n    position: string;\n    company: string;\n    email: string;\n};\n\nconst List = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Contacts List',\n        breadCrumbItems: [\n            {\n                path: '/apps/contacts/list',\n                label: 'Contacts',\n            },\n            {\n                path: '/apps/contacts/list',\n                label: 'Contacts List',\n                active: true,\n            },\n        ],\n    });\n\n    const [modal, setModal] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    // form validation schema\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            name: yup.string().required('Please enter name'),\n            position: yup.string().required('Please enter your position'),\n            company: yup.string().required('Please enter your company name'),\n            email: yup.string().required('Please enter Email address').email('Enter valid email'),\n        })\n    );\n    return (\n        <>\n            <Row>\n                <Col xs={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"justify-content-center\">\n                                <Col md={4}>\n                                    <div className=\"mt-3 mt-md-0\">\n                                        <Button variant=\"success\" className=\"waves-effect waves-light\" onClick={toggle}>\n                                            <i className=\"mdi mdi-plus-circle me-1\"></i>\n                                            Add contact\n                                        </Button>\n                                    </div>\n                                </Col>\n                                <Col md={8}>\n                                    <form className=\"d-flex flex-wrap align-items-center justify-content-sm-end\">\n                                        <label className=\"me-2\">Sort By</label>\n                                        <FormInput type=\"select\" name=\"sort\">\n                                            <option>All</option>\n                                            <option>Name</option>\n                                            <option>Post</option>\n                                            <option>Followers</option>\n                                            <option>Followings</option>\n                                        </FormInput>\n                                        <FormInput\n                                            type=\"search\"\n                                            name=\"search\"\n                                            placeholder=\"Search...\"\n                                            className=\"ms-sm-2\"\n                                        />\n                                    </form>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                {(contacts || []).map((contact, index) => {\n                    return (\n                        <Col xl={4} md={6} key={index.toString()}>\n                            <ContactDetails contact={contact} />\n                        </Col>\n                    );\n                })}\n            </Row>\n            <Modal show={modal} onHide={toggle} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title as=\"h4\">Add Contact</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <VerticalForm<MemberData> onSubmit={() => {}} resolver={schemaResolver} defaultValues={{}}>\n                        <FormInput\n                            label={'Name'}\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\"Enter name\"\n                            containerClass={'mb-3'}\n                        />\n\n                        <FormInput\n                            label={'Position'}\n                            type=\"text\"\n                            name=\"position\"\n                            placeholder=\"Enter position\"\n                            containerClass={'mb-3'}\n                        />\n\n                        <FormInput\n                            label={'Company'}\n                            type=\"text\"\n                            name=\"company\"\n                            placeholder=\"Enter company\"\n                            containerClass={'mb-3'}\n                        />\n\n                        <FormInput\n                            label={'Email address'}\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Enter email\"\n                            containerClass={'mb-3'}\n                        />\n\n                        <Button variant=\"light\" className=\"waves-effect waves-light me-1\" type=\"submit\">\n                            Save\n                        </Button>\n                        <Button variant=\"danger\" className=\"waves-effect waves-light\" onClick={toggle}>\n                            Cancel\n                        </Button>\n                    </VerticalForm>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}