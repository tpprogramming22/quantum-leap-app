{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Notifications/DismissibleAlerts.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Card, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DismissibleAlerts = () => {\n  _s();\n\n  const [colors, setColors] = useState(['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark']);\n  /*\n   * handle close\n   */\n\n  const handleClose = index => {\n    const list = [...colors];\n    list.splice(index, 1);\n    setColors(list);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Dismissing Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: [\"Add the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"dismissible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this), \" prop to add a functioning dismiss button to the Alert.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), colors.map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          variant: color,\n          onClose: () => handleClose(index),\n          dismissible: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [color, \" - \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), \" A simple \", color, \" alert\\u2014check it out!\"]\n        }, index.toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DismissibleAlerts, \"nUXlYA7bBNmSLiVN0XGUBkXlj3E=\");\n\n_c = DismissibleAlerts;\nexport default DismissibleAlerts;\n\nvar _c;\n\n$RefreshReg$(_c, \"DismissibleAlerts\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Notifications/DismissibleAlerts.tsx"],"names":["useState","Card","Alert","DismissibleAlerts","colors","setColors","handleClose","index","list","splice","map","color","toString"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,iBAA5B;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAW,CAC3C,SAD2C,EAE3C,WAF2C,EAG3C,SAH2C,EAI3C,QAJ2C,EAK3C,SAL2C,EAM3C,MAN2C,EAO3C,OAP2C,EAQ3C,MAR2C,CAAX,CAApC;AAWA;AACJ;AACA;;AACI,QAAMM,WAAW,GAAIC,KAAD,IAAmB;AACnC,UAAMC,IAAI,GAAG,CAAC,GAAGJ,MAAJ,CAAb;AACAI,IAAAA,IAAI,CAACC,MAAL,CAAYF,KAAZ,EAAmB,CAAnB;AACAF,IAAAA,SAAS,CAACG,IAAD,CAAT;AACH,GAJD;;AAMA,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,4CACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMKJ,MAAM,CAACM,GAAP,CAAW,CAACC,KAAD,EAAQJ,KAAR,KAAkB;AAC1B,4BACI,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEI,KAAhB;AAA8C,UAAA,OAAO,EAAE,MAAML,WAAW,CAACC,KAAD,CAAxE;AAAiF,UAAA,WAAW,MAA5F;AAAA,kCACI;AAAA,uBAASI,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,gBAC0CA,KAD1C;AAAA,WAA4BJ,KAAK,CAACK,QAAN,EAA5B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA,CANL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAvCD;;GAAMT,iB;;KAAAA,iB;AAyCN,eAAeA,iBAAf","sourcesContent":["import { useState } from 'react';\nimport { Card, Alert } from 'react-bootstrap';\n\nconst DismissibleAlerts = () => {\n    const [colors, setColors] = useState<string[]>([\n        'primary',\n        'secondary',\n        'success',\n        'danger',\n        'warning',\n        'info',\n        'light',\n        'dark',\n    ]);\n\n    /*\n     * handle close\n     */\n    const handleClose = (index: number) => {\n        const list = [...colors];\n        list.splice(index, 1);\n        setColors(list);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Dismissing Alerts</h4>\n                <p className=\"sub-header\">\n                    Add the <code>dismissible</code> prop to add a functioning dismiss button to the Alert.\n                </p>\n\n                {colors.map((color, index) => {\n                    return (\n                        <Alert variant={color} key={index.toString()} onClose={() => handleClose(index)} dismissible>\n                            <strong>{color} - </strong> A simple {color} alertâ€”check it out!\n                        </Alert>\n                    );\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DismissibleAlerts;\n"]},"metadata":{},"sourceType":"module"}