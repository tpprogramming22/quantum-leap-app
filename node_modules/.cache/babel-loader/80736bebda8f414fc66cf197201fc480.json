{"ast":null,"code":"import _slicedToArray from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';var useViewport=function useViewport(){var _useState=useState(window.innerWidth),_useState2=_slicedToArray(_useState,2),width=_useState2[0],setWidth=_useState2[1];var _useState3=useState(window.innerHeight),_useState4=_slicedToArray(_useState3,2),height=_useState4[0],setHeight=_useState4[1];useEffect(function(){var handleWindowResize=function handleWindowResize(){setWidth(window.innerWidth);setHeight(window.innerHeight);};window.addEventListener('resize',handleWindowResize);return function(){return window.removeEventListener('resize',handleWindowResize);};},[]);return{width:width,height:height};};export default useViewport;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/hooks/useViewPort.ts"],"names":["useState","useEffect","useViewport","window","innerWidth","width","setWidth","innerHeight","height","setHeight","handleWindowResize","addEventListener","removeEventListener"],"mappings":"2IAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,cAA0BF,QAAQ,CAACG,MAAM,CAACC,UAAR,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eACA,eAA4BN,QAAQ,CAACG,MAAM,CAACI,WAAR,CAApC,yCAAOC,MAAP,eAAeC,SAAf,eAEAR,SAAS,CAAC,UAAM,CACZ,GAAMS,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7BJ,QAAQ,CAACH,MAAM,CAACC,UAAR,CAAR,CACAK,SAAS,CAACN,MAAM,CAACI,WAAR,CAAT,CACH,CAHD,CAKAJ,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,CAAkCD,kBAAlC,EACA,MAAO,kBAAMP,CAAAA,MAAM,CAACS,mBAAP,CAA2B,QAA3B,CAAqCF,kBAArC,CAAN,EAAP,CACH,CARQ,CAQN,EARM,CAAT,CASA,MAAO,CAAEL,KAAK,CAALA,KAAF,CAASG,MAAM,CAANA,MAAT,CAAP,CACH,CAdD,CAgBA,cAAeN,CAAAA,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useViewport = () => {\n    const [width, setWidth] = useState(window.innerWidth);\n    const [height, setHeight] = useState(window.innerHeight);\n\n    useEffect(() => {\n        const handleWindowResize = () => {\n            setWidth(window.innerWidth);\n            setHeight(window.innerHeight);\n        };\n\n        window.addEventListener('resize', handleWindowResize);\n        return () => window.removeEventListener('resize', handleWindowResize);\n    }, []);\n    return { width, height };\n};\n\nexport default useViewport;\n"]},"metadata":{},"sourceType":"module"}