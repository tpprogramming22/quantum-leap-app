{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/other/Gallery/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry'; // hooks\n\nimport { usePageTitle } from '../../../hooks'; // components\n\nimport LightBox from './LightBox'; // types\n\n// dummy data\nimport { gallery as data } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Gallery = () => {\n  _s();\n\n  // set pagetitle\n  usePageTitle({\n    title: 'Gallery',\n    breadCrumbItems: [{\n      path: '/pages/gallery',\n      label: 'Extra Pages'\n    }, {\n      path: '/pages/gallery',\n      label: 'Gallery',\n      active: true\n    }]\n  });\n  const [gallery, setGallery] = useState(data);\n  const [category, setCategory] = useState('all');\n  const [galleryImages, setGalleryImages] = useState((data || []).map(album => {\n    return album.image;\n  }));\n  const [isOpen, setIsOpen] = useState(false);\n  const [photoIndex, setPhotoIndex] = useState(0);\n  /**\n   * filter images by category\n   * @param category category\n   */\n\n  const filterImages = category => {\n    setCategory(category);\n    setTimeout(() => {\n      const galleryAlbums = category === 'all' ? data : data.filter(album => {\n        var _album$category;\n\n        return (_album$category = album.category) === null || _album$category === void 0 ? void 0 : _album$category.includes(category);\n      });\n      setGallery(galleryAlbums);\n      setGalleryImages((galleryAlbums || []).map(album => {\n        return album.image;\n      }));\n    }, 300);\n  };\n  /*\n   * handle lightbox events\n   */\n\n\n  const openLightbox = index => {\n    setPhotoIndex(index);\n    setIsOpen(true);\n  };\n\n  const closeLightbox = () => {\n    setIsOpen(false);\n  };\n\n  const moveNext = () => {\n    setPhotoIndex(prevState => (prevState + 1) % galleryImages.length);\n  };\n\n  const movePrev = () => {\n    setPhotoIndex(prevState => (prevState + galleryImages.length - 1) % galleryImages.length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"portfolioFilter\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: classNames('filter-menu-item', 'me-1', {\n              current: category === 'all'\n            }),\n            onClick: () => filterImages('all'),\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: classNames('filter-menu-item', 'me-1', {\n              current: category === 'natural'\n            }),\n            onClick: () => filterImages('natural'),\n            children: \"Natural\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: classNames('filter-menu-item', 'me-1', {\n              current: category === 'creative'\n            }),\n            onClick: () => filterImages('creative'),\n            children: \"Creative\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: classNames('filter-menu-item', 'me-1', {\n              current: category === 'personal'\n            }),\n            onClick: () => filterImages('personal'),\n            children: \"Personal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: classNames('filter-menu-item', 'me-1', {\n              current: category === 'photography'\n            }),\n            onClick: () => filterImages('photography'),\n            children: \"Photography\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"port mb-2 mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"portfolioContainer\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveMasonry, {\n          columnsCountBreakPoints: {\n            350: 1,\n            750: 2,\n            900: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(Masonry, {\n            gutter: \"1.5rem\",\n            children: (gallery || []).map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gal-detail thumb mt-0\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: \"#\",\n                    className: \"image-popup\",\n                    title: item.image.caption,\n                    onClick: () => openLightbox(index),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: item.image.src,\n                      alt: \"\",\n                      className: \"thumb-img img-fluid\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"font-13 text-muted mb-2\",\n                      children: (item.category || []).map((category, index) => {\n                        return category.charAt(0).toUpperCase() + category.slice(1);\n                      }).join(', ')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 41\n                }, this)\n              }, index.toString(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(LightBox, {\n      images: galleryImages,\n      photoIndex: photoIndex,\n      closeLightbox: closeLightbox,\n      moveNext: moveNext,\n      movePrev: movePrev\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Gallery, \"qbo3QSveFPaKcBGlgK/AuA8+UxE=\", false, function () {\n  return [usePageTitle];\n});\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/other/Gallery/index.tsx"],"names":["React","useState","Row","Col","Link","classNames","Masonry","ResponsiveMasonry","usePageTitle","LightBox","gallery","data","Gallery","title","breadCrumbItems","path","label","active","setGallery","category","setCategory","galleryImages","setGalleryImages","map","album","image","isOpen","setIsOpen","photoIndex","setPhotoIndex","filterImages","setTimeout","galleryAlbums","filter","includes","openLightbox","index","closeLightbox","moveNext","prevState","length","movePrev","current","item","caption","src","charAt","toUpperCase","slice","join","toString"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// components\nimport LightBox from './LightBox';\n\n// types\nimport { GalleryItem, Image } from './types';\n\n// dummy data\nimport { gallery as data } from './data';\n\nconst Gallery = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Gallery',\n        breadCrumbItems: [\n            {\n                path: '/pages/gallery',\n                label: 'Extra Pages',\n            },\n            {\n                path: '/pages/gallery',\n                label: 'Gallery',\n                active: true,\n            },\n        ],\n    });\n\n    const [gallery, setGallery] = useState<GalleryItem[]>(data);\n    const [category, setCategory] = useState<string>('all');\n    const [galleryImages, setGalleryImages] = useState<Image[]>(\n        (data || []).map((album) => {\n            return album.image;\n        })\n    );\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n    const [photoIndex, setPhotoIndex] = useState<number>(0);\n\n    /**\n     * filter images by category\n     * @param category category\n     */\n    const filterImages = (category: string) => {\n        setCategory(category);\n        setTimeout(() => {\n            const galleryAlbums =\n                category === 'all' ? data : data.filter((album) => album.category?.includes(category));\n            setGallery(galleryAlbums);\n            setGalleryImages(\n                (galleryAlbums || []).map((album) => {\n                    return album.image;\n                })\n            );\n        }, 300);\n    };\n\n    /*\n     * handle lightbox events\n     */\n    const openLightbox = (index: number) => {\n        setPhotoIndex(index);\n        setIsOpen(true);\n    };\n\n    const closeLightbox = () => {\n        setIsOpen(false);\n    };\n\n    const moveNext = () => {\n        setPhotoIndex((prevState) => (prevState + 1) % galleryImages.length);\n    };\n\n    const movePrev = () => {\n        setPhotoIndex((prevState) => (prevState + galleryImages.length - 1) % galleryImages.length);\n    };\n\n    return (\n        <>\n            <Row>\n                <Col lg={12}>\n                    <div className=\"portfolioFilter\">\n                        <Link\n                            to=\"#\"\n                            className={classNames('filter-menu-item', 'me-1', {\n                                current: category === 'all',\n                            })}\n                            onClick={() => filterImages('all')}\n                        >\n                            All\n                        </Link>\n                        <Link\n                            to=\"#\"\n                            className={classNames('filter-menu-item', 'me-1', {\n                                current: category === 'natural',\n                            })}\n                            onClick={() => filterImages('natural')}\n                        >\n                            Natural\n                        </Link>\n                        <Link\n                            to=\"#\"\n                            className={classNames('filter-menu-item', 'me-1', {\n                                current: category === 'creative',\n                            })}\n                            onClick={() => filterImages('creative')}\n                        >\n                            Creative\n                        </Link>\n                        <Link\n                            to=\"#\"\n                            className={classNames('filter-menu-item', 'me-1', {\n                                current: category === 'personal',\n                            })}\n                            onClick={() => filterImages('personal')}\n                        >\n                            Personal\n                        </Link>\n                        <Link\n                            to=\"#\"\n                            className={classNames('filter-menu-item', 'me-1', {\n                                current: category === 'photography',\n                            })}\n                            onClick={() => filterImages('photography')}\n                        >\n                            Photography\n                        </Link>\n                    </div>\n                </Col>\n            </Row>\n\n            <div className=\"port mb-2 mt-4\">\n                <Row className=\"portfolioContainer\">\n                    <ResponsiveMasonry columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 4 }}>\n                        <Masonry gutter=\"1.5rem\">\n                            {(gallery || []).map((item, index) => {\n                                return (\n                                    <React.Fragment key={index.toString()}>\n                                        <div className=\"gal-detail thumb mt-0\">\n                                            <Link\n                                                to=\"#\"\n                                                className=\"image-popup\"\n                                                title={item.image!.caption}\n                                                onClick={() => openLightbox(index)}\n                                            >\n                                                <img src={item.image!.src} alt=\"\" className=\"thumb-img img-fluid\" />\n                                            </Link>\n\n                                            <div className=\"text-center\">\n                                                <h4>{item.title}</h4>\n                                                <p className=\"font-13 text-muted mb-2\">\n                                                    {(item.category || [])\n                                                        .map((category, index) => {\n                                                            return (\n                                                                category.charAt(0).toUpperCase() + category!.slice(1)\n                                                            );\n                                                        })\n                                                        .join(', ')}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </React.Fragment>\n                                );\n                            })}\n                        </Masonry>\n                    </ResponsiveMasonry>\n                </Row>\n            </div>\n            {/* image lightbox */}\n            {isOpen && (\n                <LightBox\n                    images={galleryImages}\n                    photoIndex={photoIndex}\n                    closeLightbox={closeLightbox}\n                    moveNext={moveNext}\n                    movePrev={movePrev}\n                />\n            )}\n        </>\n    );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}