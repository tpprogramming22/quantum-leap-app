{"ast":null,"code":"import _toConsumableArray from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{Badge,Card}from'react-bootstrap';import classNames from'classnames';// types\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PillBadges=function PillBadges(_ref){var variants=_ref.variants;var pillBadges=_toConsumableArray(variants);return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"header-title\",children:\"Pill Badges\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"sub-header\",children:[\"Use the \",/*#__PURE__*/_jsx(\"code\",{children:\".rounded-pill\"}),\" modifier class to make badges more rounded.\"]}),(pillBadges||[]).map(function(color,index){return/*#__PURE__*/_jsx(Badge,{pill:true,bg:\"\",className:classNames('me-1','bg-'+color,color==='light'?'text-dark':null),children:color.charAt(0).toUpperCase()+color.slice(1)},index.toString());}),/*#__PURE__*/_jsx(\"h5\",{className:\"mt-4\",children:\"Soft Badges\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"sub-header\",children:[\"Use the \",/*#__PURE__*/_jsx(\"code\",{children:\".badge-soft-*\"}),\" modifier class to make badges lighten.\"]}),(pillBadges||[]).map(function(color,index){return/*#__PURE__*/_jsx(Badge,{pill:true,bg:\"\",className:classNames('me-1','badge-soft-'+color),children:color.charAt(0).toUpperCase()+color.slice(1)},index.toString());}),/*#__PURE__*/_jsx(\"h5\",{className:\"mt-4\",children:\"Outline Badges\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"sub-header\",children:[\"Using the \",/*#__PURE__*/_jsx(\"code\",{children:\".badge-outline-*\"}),\" to quickly create a bordered badges.\"]}),(pillBadges||[]).map(function(color,index){return/*#__PURE__*/_jsx(Badge,{bg:\"\",pill:true,className:classNames('me-1','badge-outline-'+color),children:color.charAt(0).toUpperCase()+color.slice(1)},index.toString());})]})});};export default PillBadges;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/GeneralUI/PillBadges.tsx"],"names":["Badge","Card","classNames","PillBadges","variants","pillBadges","map","color","index","charAt","toUpperCase","slice","toString"],"mappings":"mJAAA,OAASA,KAAT,CAAgBC,IAAhB,KAA4B,iBAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA;wFASA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAmC,IAAhCC,CAAAA,QAAgC,MAAhCA,QAAgC,CAClD,GAAMC,CAAAA,UAA2B,oBAAOD,QAAP,CAAjC,CAEA,mBACI,KAAC,IAAD,wBACI,MAAC,IAAD,CAAM,IAAN,yBACI,WAAI,SAAS,CAAC,cAAd,yBADJ,cAEI,WAAG,SAAS,CAAC,YAAb,mCACY,uCADZ,kDAFJ,CAMK,CAACC,UAAU,EAAI,EAAf,EAAmBC,GAAnB,CAAuB,SAACC,KAAD,CAAQC,KAAR,CAAkB,CACtC,mBACI,KAAC,KAAD,EACI,IAAI,KADR,CAEI,EAAE,CAAC,EAFP,CAGI,SAAS,CAAEN,UAAU,CAAC,MAAD,CAAS,MAAQK,KAAjB,CAAwBA,KAAK,GAAK,OAAV,CAAoB,WAApB,CAAkC,IAA1D,CAHzB,UAMKA,KAAK,CAAEE,MAAP,CAAc,CAAd,EAAiBC,WAAjB,GAAiCH,KAAK,CAAEI,KAAP,CAAa,CAAb,CANtC,EAISH,KAAK,CAACI,QAAN,EAJT,CADJ,CAUH,CAXA,CANL,cAmBI,WAAI,SAAS,CAAC,MAAd,yBAnBJ,cAoBI,WAAG,SAAS,CAAC,YAAb,mCACY,uCADZ,6CApBJ,CAwBK,CAACP,UAAU,EAAI,EAAf,EAAmBC,GAAnB,CAAuB,SAACC,KAAD,CAAQC,KAAR,CAAkB,CACtC,mBACI,KAAC,KAAD,EAAO,IAAI,KAAX,CAAY,EAAE,CAAC,EAAf,CAAkB,SAAS,CAAEN,UAAU,CAAC,MAAD,CAAS,cAAgBK,KAAzB,CAAvC,UACKA,KAAK,CAAEE,MAAP,CAAc,CAAd,EAAiBC,WAAjB,GAAiCH,KAAK,CAAEI,KAAP,CAAa,CAAb,CADtC,EAA6EH,KAAK,CAACI,QAAN,EAA7E,CADJ,CAKH,CANA,CAxBL,cAgCI,WAAI,SAAS,CAAC,MAAd,4BAhCJ,cAiCI,WAAG,SAAS,CAAC,YAAb,qCACc,0CADd,2CAjCJ,CAqCK,CAACP,UAAU,EAAI,EAAf,EAAmBC,GAAnB,CAAuB,SAACC,KAAD,CAAQC,KAAR,CAAkB,CACtC,mBACI,KAAC,KAAD,EACI,EAAE,CAAC,EADP,CAEI,IAAI,KAFR,CAGI,SAAS,CAAEN,UAAU,CAAC,MAAD,CAAS,iBAAmBK,KAA5B,CAHzB,UAMKA,KAAK,CAAEE,MAAP,CAAc,CAAd,EAAiBC,WAAjB,GAAiCH,KAAK,CAAEI,KAAP,CAAa,CAAb,CANtC,EAISH,KAAK,CAACI,QAAN,EAJT,CADJ,CAUH,CAXA,CArCL,GADJ,EADJ,CAsDH,CAzDD,CA2DA,cAAeT,CAAAA,UAAf","sourcesContent":["import { Badge, Card } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// types\nimport { Variant } from './types';\n\ntype PillBadgesProps = {\n    variants: Variant[];\n};\n\ntype BadgesVariant = Variant;\n\nconst PillBadges = ({ variants }: PillBadgesProps) => {\n    const pillBadges: BadgesVariant[] = [...variants];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Pill Badges</h4>\n                <p className=\"sub-header\">\n                    Use the <code>.rounded-pill</code> modifier class to make badges more rounded.\n                </p>\n\n                {(pillBadges || []).map((color, index) => {\n                    return (\n                        <Badge\n                            pill\n                            bg=\"\"\n                            className={classNames('me-1', 'bg-' + color, color === 'light' ? 'text-dark' : null)}\n                            key={index.toString()}\n                        >\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                        </Badge>\n                    );\n                })}\n\n                <h5 className=\"mt-4\">Soft Badges</h5>\n                <p className=\"sub-header\">\n                    Use the <code>.badge-soft-*</code> modifier class to make badges lighten.\n                </p>\n\n                {(pillBadges || []).map((color, index) => {\n                    return (\n                        <Badge pill bg=\"\" className={classNames('me-1', 'badge-soft-' + color)} key={index.toString()}>\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                        </Badge>\n                    );\n                })}\n\n                <h5 className=\"mt-4\">Outline Badges</h5>\n                <p className=\"sub-header\">\n                    Using the <code>.badge-outline-*</code> to quickly create a bordered badges.\n                </p>\n\n                {(pillBadges || []).map((color, index) => {\n                    return (\n                        <Badge\n                            bg=\"\"\n                            pill\n                            className={classNames('me-1', 'badge-outline-' + color)}\n                            key={index.toString()}\n                        >\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                        </Badge>\n                    );\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PillBadges;\n"]},"metadata":{},"sourceType":"module"}