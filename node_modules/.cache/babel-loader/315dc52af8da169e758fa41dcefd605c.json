{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/auth/ForgetPassword.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Button, Alert, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next'; // hooks\n\nimport { useRedux } from '../../hooks/'; //actions\n\nimport { resetAuth, forgotPassword } from '../../redux/actions'; // components\n\nimport { VerticalForm, FormInput } from '../../components/form/';\nimport AuthLayout from './AuthLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/* bottom link */\nconst BottomLink = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"mt-3\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: [t('Back to'), ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: '/auth/login',\n          className: \"text-dark ms-1\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: t('Log In')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BottomLink, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = BottomLink;\n\nconst ForgetPassword = () => {\n  _s2();\n\n  const {\n    dispatch,\n    appSelector\n  } = useRedux();\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n  const {\n    loading,\n    passwordReset,\n    resetPasswordSuccess,\n    error\n  } = appSelector(state => ({\n    loading: state.Auth.loading,\n    user: state.Auth.user,\n    error: state.Auth.error,\n    passwordReset: state.Auth.passwordReset,\n    resetPasswordSuccess: state.Auth.resetPasswordSuccess\n  }));\n  /*\n   * form validation schema\n   */\n\n  const schemaResolver = yupResolver(yup.object().shape({\n    email: yup.string().required(t('Please enter Email')).email(t('Please enter Email'))\n  }));\n  /*\n   * handle form submission\n   */\n\n  const onSubmit = formData => {\n    dispatch(forgotPassword(formData['email']));\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthLayout, {\n    bottomLinks: /*#__PURE__*/_jsxDEV(BottomLink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 34\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-uppercase mt-0 mb-3\",\n        children: t('Reset Password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted mb-0 font-13\",\n        children: t(\"Enter your email address and we'll send you an email with instructions to reset your password.\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), resetPasswordSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: resetPasswordSuccess.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 38\n    }, this), error && !resetPasswordSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      className: \"my-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), !passwordReset && /*#__PURE__*/_jsxDEV(VerticalForm, {\n      onSubmit: onSubmit,\n      resolver: schemaResolver,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: t('Email address'),\n        type: \"email\",\n        name: \"email\",\n        placeholder: t('Enter your email'),\n        containerClass: 'mb-3'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 d-grid text-center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: loading,\n          children: t('Reset Password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ForgetPassword, \"aew9GLuqP4a4xDYzFGrc5LPhKGA=\", false, function () {\n  return [useRedux, useTranslation];\n});\n\n_c2 = ForgetPassword;\nexport default ForgetPassword;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BottomLink\");\n$RefreshReg$(_c2, \"ForgetPassword\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/auth/ForgetPassword.tsx"],"names":["useEffect","Button","Alert","Row","Col","Link","yup","yupResolver","useTranslation","useRedux","resetAuth","forgotPassword","VerticalForm","FormInput","AuthLayout","BottomLink","t","ForgetPassword","dispatch","appSelector","loading","passwordReset","resetPasswordSuccess","error","state","Auth","user","schemaResolver","object","shape","email","string","required","onSubmit","formData","message"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { Button, Alert, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next';\n\n// hooks\nimport { useRedux } from '../../hooks/';\n\n//actions\nimport { resetAuth, forgotPassword } from '../../redux/actions';\n\n// components\nimport { VerticalForm, FormInput } from '../../components/form/';\n\nimport AuthLayout from './AuthLayout';\n\ntype UserData = {\n    email: string;\n};\n\n/* bottom link */\nconst BottomLink = () => {\n    const { t } = useTranslation();\n\n    return (\n        <Row className=\"mt-3\">\n            <Col className=\"text-center\">\n                <p className=\"text-muted\">\n                    {t('Back to')}{' '}\n                    <Link to={'/auth/login'} className=\"text-dark ms-1\">\n                        <b>{t('Log In')}</b>\n                    </Link>\n                </p>\n            </Col>\n        </Row>\n    );\n};\n\nconst ForgetPassword = () => {\n    const { dispatch, appSelector } = useRedux();\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        dispatch(resetAuth());\n    }, [dispatch]);\n\n    const { loading, passwordReset, resetPasswordSuccess, error } = appSelector((state) => ({\n        loading: state.Auth.loading,\n        user: state.Auth.user,\n        error: state.Auth.error,\n        passwordReset: state.Auth.passwordReset,\n        resetPasswordSuccess: state.Auth.resetPasswordSuccess,\n    }));\n\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            email: yup.string().required(t('Please enter Email')).email(t('Please enter Email')),\n        })\n    );\n\n    /*\n     * handle form submission\n     */\n    const onSubmit = (formData: UserData) => {\n        dispatch(forgotPassword(formData['email']));\n    };\n\n    return (\n        <AuthLayout bottomLinks={<BottomLink />}>\n            <div className=\"text-center mb-4\">\n                <h4 className=\"text-uppercase mt-0 mb-3\">{t('Reset Password')}</h4>\n                <p className=\"text-muted mb-0 font-13\">\n                    {t(\n                        \"Enter your email address and we'll send you an email with instructions to reset your password.\"\n                    )}\n                </p>\n            </div>\n\n            {resetPasswordSuccess && <Alert variant=\"success\">{resetPasswordSuccess.message}</Alert>}\n\n            {error && !resetPasswordSuccess && (\n                <Alert variant=\"danger\" className=\"my-2\">\n                    {error}\n                </Alert>\n            )}\n\n            {!passwordReset && (\n                <VerticalForm<UserData> onSubmit={onSubmit} resolver={schemaResolver}>\n                    <FormInput\n                        label={t('Email address')}\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder={t('Enter your email')}\n                        containerClass={'mb-3'}\n                    />\n\n                    <div className=\"mb-3 d-grid text-center\">\n                        <Button type=\"submit\" disabled={loading}>\n                            {t('Reset Password')}\n                        </Button>\n                    </div>\n                </VerticalForm>\n            )}\n        </AuthLayout>\n    );\n};\n\nexport default ForgetPassword;\n"]},"metadata":{},"sourceType":"module"}