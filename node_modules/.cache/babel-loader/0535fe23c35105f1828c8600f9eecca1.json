{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/ThemeCustomizer/LayoutColor.tsx\";\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LayoutColor = _ref => {\n  let {\n    changeLayoutColorScheme,\n    layoutColor,\n    layoutConstants\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"fw-medium font-14 mt-4 mb-2 pb-1\",\n      children: \"Color Scheme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n      className: \"form-check form-switch mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Check.Input, {\n        type: \"radio\",\n        name: \"color\",\n        id: \"light-check\",\n        value: layoutConstants.LAYOUT_COLOR_LIGHT,\n        onChange: e => changeLayoutColorScheme(e.target.value),\n        checked: layoutColor === layoutConstants.LAYOUT_COLOR_LIGHT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check.Label, {\n        htmlFor: \"fluid-check\",\n        children: \"Light Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n      className: \"form-check form-switch mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Check.Input, {\n        type: \"radio\",\n        name: \"color\",\n        id: \"dark-check\",\n        value: layoutConstants.LAYOUT_COLOR_DARK,\n        onChange: e => changeLayoutColorScheme(e.target.value),\n        checked: layoutColor === layoutConstants.LAYOUT_COLOR_DARK\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check.Label, {\n        htmlFor: \"boxed-check\",\n        children: \"Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = LayoutColor;\nexport default LayoutColor;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutColor\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/ThemeCustomizer/LayoutColor.tsx"],"names":["Form","LayoutColor","changeLayoutColorScheme","layoutColor","layoutConstants","LAYOUT_COLOR_LIGHT","e","target","value","LAYOUT_COLOR_DARK"],"mappings":";AAAA,SAASA,IAAT,QAAqB,iBAArB;;;;AASA,MAAMC,WAAW,GAAG,QAAiF;AAAA,MAAhF;AAAEC,IAAAA,uBAAF;AAA2BC,IAAAA,WAA3B;AAAwCC,IAAAA;AAAxC,GAAgF;AACjG,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,6BAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,EAAE,EAAC,aAHP;AAII,QAAA,KAAK,EAAEA,eAAe,CAACC,kBAJ3B;AAKI,QAAA,QAAQ,EAAGC,CAAD,IAAOJ,uBAAuB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAL5C;AAMI,QAAA,OAAO,EAAEL,WAAW,KAAKC,eAAe,CAACC;AAN7C;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AAAkB,QAAA,OAAO,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAeI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,6BAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,EAAE,EAAC,YAHP;AAII,QAAA,KAAK,EAAED,eAAe,CAACK,iBAJ3B;AAKI,QAAA,QAAQ,EAAGH,CAAD,IAAOJ,uBAAuB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAL5C;AAMI,QAAA,OAAO,EAAEL,WAAW,KAAKC,eAAe,CAACK;AAN7C;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AAAkB,QAAA,OAAO,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA,kBADJ;AA6BH,CA9BD;;KAAMR,W;AAgCN,eAAeA,WAAf","sourcesContent":["import { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ntype LayoutColorProps = {\n    changeLayoutColorScheme: (value: string) => void;\n    layoutColor: string;\n    layoutConstants: typeof layoutConstants.LayoutColor;\n};\n\nconst LayoutColor = ({ changeLayoutColorScheme, layoutColor, layoutConstants }: LayoutColorProps) => {\n    return (\n        <>\n            <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Color Scheme</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"color\"\n                    id=\"light-check\"\n                    value={layoutConstants.LAYOUT_COLOR_LIGHT}\n                    onChange={(e) => changeLayoutColorScheme(e.target.value)}\n                    checked={layoutColor === layoutConstants.LAYOUT_COLOR_LIGHT}\n                />\n                <Form.Check.Label htmlFor=\"fluid-check\">Light Mode</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"color\"\n                    id=\"dark-check\"\n                    value={layoutConstants.LAYOUT_COLOR_DARK}\n                    onChange={(e) => changeLayoutColorScheme(e.target.value)}\n                    checked={layoutColor === layoutConstants.LAYOUT_COLOR_DARK}\n                />\n                <Form.Check.Label htmlFor=\"boxed-check\">Dark Mode</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LayoutColor;\n"]},"metadata":{},"sourceType":"module"}