{"ast":null,"code":"import{Form}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TopbarTheme=function TopbarTheme(_ref){var changeTopBarTheme=_ref.changeTopBarTheme,topbarTheme=_ref.topbarTheme,layoutConstants=_ref.layoutConstants;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h6\",{className:\"fw-medium font-14 mt-4 mb-2 pb-1\",children:\"Topbar\"}),/*#__PURE__*/_jsxs(Form.Check,{className:\"form-check form-switch mb-1\",children:[/*#__PURE__*/_jsx(Form.Check.Input,{type:\"radio\",name:\"topbar-color\",id:\"darktopbar-check\",value:layoutConstants.TOPBAR_THEME_DARK,onChange:function onChange(e){return changeTopBarTheme(e.target.value);},checked:topbarTheme===layoutConstants.TOPBAR_THEME_DARK}),/*#__PURE__*/_jsx(Form.Check.Label,{htmlFor:\"darktopbar-check\",children:\"Dark\"})]}),/*#__PURE__*/_jsxs(Form.Check,{className:\"form-check form-switch mb-1\",children:[/*#__PURE__*/_jsx(Form.Check.Input,{type:\"radio\",name:\"topbar-color\",id:\"lighttopbar-check\",value:layoutConstants.TOPBAR_THEME_LIGHT,onChange:function onChange(e){return changeTopBarTheme(e.target.value);},checked:topbarTheme===layoutConstants.TOPBAR_THEME_LIGHT}),/*#__PURE__*/_jsx(Form.Check.Label,{htmlFor:\"lighttopbar-check\",children:\"Light\"})]})]});};export default TopbarTheme;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/ThemeCustomizer/TopbarTheme.tsx"],"names":["Form","TopbarTheme","changeTopBarTheme","topbarTheme","layoutConstants","TOPBAR_THEME_DARK","e","target","value","TOPBAR_THEME_LIGHT"],"mappings":"AAAA,OAASA,IAAT,KAAqB,iBAArB,C,6IASA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAA2E,IAAxEC,CAAAA,iBAAwE,MAAxEA,iBAAwE,CAArDC,WAAqD,MAArDA,WAAqD,CAAxCC,eAAwC,MAAxCA,eAAwC,CAC3F,mBACI,wCACI,WAAI,SAAS,CAAC,kCAAd,oBADJ,cAGI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,6BAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,CAAY,KAAZ,EACI,IAAI,CAAC,OADT,CAEI,IAAI,CAAC,cAFT,CAGI,EAAE,CAAC,kBAHP,CAII,KAAK,CAAEA,eAAe,CAACC,iBAJ3B,CAKI,QAAQ,CAAE,kBAACC,CAAD,QAAOJ,CAAAA,iBAAiB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxB,EALd,CAMI,OAAO,CAAEL,WAAW,GAAKC,eAAe,CAACC,iBAN7C,EADJ,cASI,KAAC,IAAD,CAAM,KAAN,CAAY,KAAZ,EAAkB,OAAO,CAAC,kBAA1B,kBATJ,GAHJ,cAeI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,6BAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,CAAY,KAAZ,EACI,IAAI,CAAC,OADT,CAEI,IAAI,CAAC,cAFT,CAGI,EAAE,CAAC,mBAHP,CAII,KAAK,CAAED,eAAe,CAACK,kBAJ3B,CAKI,QAAQ,CAAE,kBAACH,CAAD,QAAOJ,CAAAA,iBAAiB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxB,EALd,CAMI,OAAO,CAAEL,WAAW,GAAKC,eAAe,CAACK,kBAN7C,EADJ,cASI,KAAC,IAAD,CAAM,KAAN,CAAY,KAAZ,EAAkB,OAAO,CAAC,mBAA1B,mBATJ,GAfJ,GADJ,CA6BH,CA9BD,CAgCA,cAAeR,CAAAA,WAAf","sourcesContent":["import { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ntype TopbarThemeProps = {\n    changeTopBarTheme: (value: string) => void;\n    topbarTheme: string;\n    layoutConstants: typeof layoutConstants.TopbarTheme;\n};\n\nconst TopbarTheme = ({ changeTopBarTheme, topbarTheme, layoutConstants }: TopbarThemeProps) => {\n    return (\n        <>\n            <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Topbar</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"topbar-color\"\n                    id=\"darktopbar-check\"\n                    value={layoutConstants.TOPBAR_THEME_DARK}\n                    onChange={(e) => changeTopBarTheme(e.target.value)}\n                    checked={topbarTheme === layoutConstants.TOPBAR_THEME_DARK}\n                />\n                <Form.Check.Label htmlFor=\"darktopbar-check\">Dark</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"topbar-color\"\n                    id=\"lighttopbar-check\"\n                    value={layoutConstants.TOPBAR_THEME_LIGHT}\n                    onChange={(e) => changeTopBarTheme(e.target.value)}\n                    checked={topbarTheme === layoutConstants.TOPBAR_THEME_LIGHT}\n                />\n                <Form.Check.Label htmlFor=\"lighttopbar-check\">Light</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default TopbarTheme;\n"]},"metadata":{},"sourceType":"module"}