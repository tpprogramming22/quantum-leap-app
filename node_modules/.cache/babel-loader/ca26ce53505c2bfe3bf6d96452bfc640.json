{"ast":null,"code":"import{Suspense,useEffect}from'react';import{Outlet}from'react-router-dom';// hooks\nimport{useRedux}from'../hooks/';// utils\nimport{changeBodyAttribute}from'../utils';import{jsx as _jsx}from\"react/jsx-runtime\";var loading=function loading(){return/*#__PURE__*/_jsx(\"div\",{className:\"\"});};var DefaultLayout=function DefaultLayout(props){var _useRedux=useRedux(),appSelector=_useRedux.appSelector;var _appSelector=appSelector(function(state){return{layoutColor:state.Layout.layoutColor};}),layoutColor=_appSelector.layoutColor;useEffect(function(){changeBodyAttribute('data-layout-color',layoutColor);},[layoutColor]);return/*#__PURE__*/_jsx(Suspense,{fallback:loading(),children:/*#__PURE__*/_jsx(Outlet,{})});};export default DefaultLayout;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/layouts/Default.tsx"],"names":["Suspense","useEffect","Outlet","useRedux","changeBodyAttribute","loading","DefaultLayout","props","appSelector","state","layoutColor","Layout"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,MAAT,KAAuB,kBAAvB,CAEA;AACA,OAASC,QAAT,KAAyB,WAAzB,CAEA;AACA,OAASC,mBAAT,KAAoC,UAApC,C,2CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,sBAAM,YAAK,SAAS,CAAC,EAAf,EAAN,EAAhB,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAA+B,CACjD,cAAwBJ,QAAQ,EAAhC,CAAQK,WAAR,WAAQA,WAAR,CAEA,iBAAwBA,WAAW,CAAC,SAACC,KAAD,QAAY,CAC5CC,WAAW,CAAED,KAAK,CAACE,MAAN,CAAaD,WADkB,CAAZ,EAAD,CAAnC,CAAQA,WAAR,cAAQA,WAAR,CAIAT,SAAS,CAAC,UAAM,CACZG,mBAAmB,CAAC,mBAAD,CAAsBM,WAAtB,CAAnB,CACH,CAFQ,CAEN,CAACA,WAAD,CAFM,CAAT,CAIA,mBACI,KAAC,QAAD,EAAU,QAAQ,CAAEL,OAAO,EAA3B,uBACI,KAAC,MAAD,IADJ,EADJ,CAKH,CAhBD,CAiBA,cAAeC,CAAAA,aAAf","sourcesContent":["import { Suspense, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\n\n// hooks\nimport { useRedux } from '../hooks/';\n\n// utils\nimport { changeBodyAttribute } from '../utils';\n\nconst loading = () => <div className=\"\"></div>;\n\ntype DefaultLayoutProps = {};\n\nconst DefaultLayout = (props: DefaultLayoutProps) => {\n    const { appSelector } = useRedux();\n\n    const { layoutColor } = appSelector((state) => ({\n        layoutColor: state.Layout.layoutColor,\n    }));\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    return (\n        <Suspense fallback={loading()}>\n            <Outlet />\n        </Suspense>\n    );\n};\nexport default DefaultLayout;\n"]},"metadata":{},"sourceType":"module"}