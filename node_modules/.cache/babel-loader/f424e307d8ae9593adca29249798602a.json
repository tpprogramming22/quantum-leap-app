{"ast":null,"code":"import{Form}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var LayoutColor=function LayoutColor(_ref){var changeLayoutColorScheme=_ref.changeLayoutColorScheme,layoutColor=_ref.layoutColor,layoutConstants=_ref.layoutConstants;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h6\",{className:\"fw-medium font-14 mt-4 mb-2 pb-1\",children:\"Color Scheme\"}),/*#__PURE__*/_jsxs(Form.Check,{className:\"form-check form-switch mb-1\",children:[/*#__PURE__*/_jsx(Form.Check.Input,{type:\"radio\",name:\"color\",id:\"light-check\",value:layoutConstants.LAYOUT_COLOR_LIGHT,onChange:function onChange(e){return changeLayoutColorScheme(e.target.value);},checked:layoutColor===layoutConstants.LAYOUT_COLOR_LIGHT}),/*#__PURE__*/_jsx(Form.Check.Label,{htmlFor:\"fluid-check\",children:\"Light Mode\"})]}),/*#__PURE__*/_jsxs(Form.Check,{className:\"form-check form-switch mb-1\",children:[/*#__PURE__*/_jsx(Form.Check.Input,{type:\"radio\",name:\"color\",id:\"dark-check\",value:layoutConstants.LAYOUT_COLOR_DARK,onChange:function onChange(e){return changeLayoutColorScheme(e.target.value);},checked:layoutColor===layoutConstants.LAYOUT_COLOR_DARK}),/*#__PURE__*/_jsx(Form.Check.Label,{htmlFor:\"boxed-check\",children:\"Dark Mode\"})]})]});};export default LayoutColor;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/ThemeCustomizer/LayoutColor.tsx"],"names":["Form","LayoutColor","changeLayoutColorScheme","layoutColor","layoutConstants","LAYOUT_COLOR_LIGHT","e","target","value","LAYOUT_COLOR_DARK"],"mappings":"AAAA,OAASA,IAAT,KAAqB,iBAArB,C,6IASA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAiF,IAA9EC,CAAAA,uBAA8E,MAA9EA,uBAA8E,CAArDC,WAAqD,MAArDA,WAAqD,CAAxCC,eAAwC,MAAxCA,eAAwC,CACjG,mBACI,wCACI,WAAI,SAAS,CAAC,kCAAd,0BADJ,cAGI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,6BAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,CAAY,KAAZ,EACI,IAAI,CAAC,OADT,CAEI,IAAI,CAAC,OAFT,CAGI,EAAE,CAAC,aAHP,CAII,KAAK,CAAEA,eAAe,CAACC,kBAJ3B,CAKI,QAAQ,CAAE,kBAACC,CAAD,QAAOJ,CAAAA,uBAAuB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAA9B,EALd,CAMI,OAAO,CAAEL,WAAW,GAAKC,eAAe,CAACC,kBAN7C,EADJ,cASI,KAAC,IAAD,CAAM,KAAN,CAAY,KAAZ,EAAkB,OAAO,CAAC,aAA1B,wBATJ,GAHJ,cAeI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,6BAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,CAAY,KAAZ,EACI,IAAI,CAAC,OADT,CAEI,IAAI,CAAC,OAFT,CAGI,EAAE,CAAC,YAHP,CAII,KAAK,CAAED,eAAe,CAACK,iBAJ3B,CAKI,QAAQ,CAAE,kBAACH,CAAD,QAAOJ,CAAAA,uBAAuB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAA9B,EALd,CAMI,OAAO,CAAEL,WAAW,GAAKC,eAAe,CAACK,iBAN7C,EADJ,cASI,KAAC,IAAD,CAAM,KAAN,CAAY,KAAZ,EAAkB,OAAO,CAAC,aAA1B,uBATJ,GAfJ,GADJ,CA6BH,CA9BD,CAgCA,cAAeR,CAAAA,WAAf","sourcesContent":["import { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ntype LayoutColorProps = {\n    changeLayoutColorScheme: (value: string) => void;\n    layoutColor: string;\n    layoutConstants: typeof layoutConstants.LayoutColor;\n};\n\nconst LayoutColor = ({ changeLayoutColorScheme, layoutColor, layoutConstants }: LayoutColorProps) => {\n    return (\n        <>\n            <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Color Scheme</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"color\"\n                    id=\"light-check\"\n                    value={layoutConstants.LAYOUT_COLOR_LIGHT}\n                    onChange={(e) => changeLayoutColorScheme(e.target.value)}\n                    checked={layoutColor === layoutConstants.LAYOUT_COLOR_LIGHT}\n                />\n                <Form.Check.Label htmlFor=\"fluid-check\">Light Mode</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"color\"\n                    id=\"dark-check\"\n                    value={layoutConstants.LAYOUT_COLOR_DARK}\n                    onChange={(e) => changeLayoutColorScheme(e.target.value)}\n                    checked={layoutColor === layoutConstants.LAYOUT_COLOR_DARK}\n                />\n                <Form.Check.Label htmlFor=\"boxed-check\">Dark Mode</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LayoutColor;\n"]},"metadata":{},"sourceType":"module"}