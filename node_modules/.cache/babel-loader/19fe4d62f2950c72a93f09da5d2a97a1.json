{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Buttons/RoundedButtonsWithLabels.tsx\";\nimport { Button } from 'react-bootstrap'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RoundedButtonWithLabels = _ref => {\n  let {\n    buttonswithLabels\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"header-title\",\n      children: \"Rounded Buttons Labels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sub-header\",\n      children: [\"Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \".rounded-pill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), \" to default button to get rounded corners.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-list\",\n      children: (buttonswithLabels || []).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          variant: item.variant,\n          className: \"rounded-pill waves-effect waves-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-label\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: item.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this), item.variant.charAt(0).toUpperCase() + item.variant.slice(1)]\n        }, index.toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-list\",\n      children: (buttonswithLabels || []).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          variant: item.variant,\n          className: \"rounded-pill waves-effect waves-light\",\n          children: [item.variant.charAt(0).toUpperCase() + item.variant.slice(1), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-label-right\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: item.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, index.toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = RoundedButtonWithLabels;\nexport default RoundedButtonWithLabels;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoundedButtonWithLabels\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Buttons/RoundedButtonsWithLabels.tsx"],"names":["Button","RoundedButtonWithLabels","buttonswithLabels","map","item","index","variant","icon","charAt","toUpperCase","slice","toString"],"mappings":";AAAA,SAASA,MAAT,QAAuB,iBAAvB,C,CAEA;;;;;AAOA,MAAMC,uBAAuB,GAAG,QAAkD;AAAA,MAAjD;AAAEC,IAAAA;AAAF,GAAiD;AAC9E,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,sCACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACK,CAACA,iBAAiB,IAAI,EAAtB,EAA0BC,GAA1B,CAA8B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5C,4BACI,QAAC,MAAD;AACI,UAAA,OAAO,EAAED,IAAI,CAACE,OADlB;AAEI,UAAA,SAAS,EAAC,uCAFd;AAAA,kCAKI;AAAM,YAAA,SAAS,EAAC,WAAhB;AAAA,mCACI;AAAG,cAAA,SAAS,EAAEF,IAAI,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ,EAQKH,IAAI,CAACE,OAAL,CAAcE,MAAd,CAAqB,CAArB,EAAwBC,WAAxB,KAAwCL,IAAI,CAACE,OAAL,CAAcI,KAAd,CAAoB,CAApB,CAR7C;AAAA,WAGSL,KAAK,CAACM,QAAN,EAHT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAYH,OAbA;AADL;AAAA;AAAA;AAAA;AAAA,YANJ,eAsBI;AAAA;AAAA;AAAA;AAAA,YAtBJ,eAuBI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACK,CAACT,iBAAiB,IAAI,EAAtB,EAA0BC,GAA1B,CAA8B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5C,4BACI,QAAC,MAAD;AACI,UAAA,OAAO,EAAED,IAAI,CAACE,OADlB;AAEI,UAAA,SAAS,EAAC,uCAFd;AAAA,qBAKKF,IAAI,CAACE,OAAL,CAAcE,MAAd,CAAqB,CAArB,EAAwBC,WAAxB,KAAwCL,IAAI,CAACE,OAAL,CAAcI,KAAd,CAAoB,CAApB,CAL7C,eAMI;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA,mCACI;AAAG,cAAA,SAAS,EAAEN,IAAI,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA,WAGSF,KAAK,CAACM,QAAN,EAHT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAYH,OAbA;AADL;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA,kBADJ;AA0CH,CA3CD;;KAAMV,uB;AA6CN,eAAeA,uBAAf","sourcesContent":["import { Button } from 'react-bootstrap';\n\n// types\nimport { ButtonsWithLabel } from './types';\n\ntype ButtonWithLabelsProps = {\n    buttonswithLabels: ButtonsWithLabel[];\n};\n\nconst RoundedButtonWithLabels = ({ buttonswithLabels }: ButtonWithLabelsProps) => {\n    return (\n        <>\n            <h4 className=\"header-title\">Rounded Buttons Labels</h4>\n            <p className=\"sub-header\">\n                Add <code>.rounded-pill</code> to default button to get rounded corners.\n            </p>\n\n            <div className=\"button-list\">\n                {(buttonswithLabels || []).map((item, index) => {\n                    return (\n                        <Button\n                            variant={item.variant}\n                            className=\"rounded-pill waves-effect waves-light\"\n                            key={index.toString()}\n                        >\n                            <span className=\"btn-label\">\n                                <i className={item.icon}></i>\n                            </span>\n                            {item.variant!.charAt(0).toUpperCase() + item.variant!.slice(1)}\n                        </Button>\n                    );\n                })}\n            </div>\n            <br />\n            <div className=\"button-list\">\n                {(buttonswithLabels || []).map((item, index) => {\n                    return (\n                        <Button\n                            variant={item.variant}\n                            className=\"rounded-pill waves-effect waves-light\"\n                            key={index.toString()}\n                        >\n                            {item.variant!.charAt(0).toUpperCase() + item.variant!.slice(1)}\n                            <span className=\"btn-label-right\">\n                                <i className={item.icon}></i>\n                            </span>\n                        </Button>\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default RoundedButtonWithLabels;\n"]},"metadata":{},"sourceType":"module"}