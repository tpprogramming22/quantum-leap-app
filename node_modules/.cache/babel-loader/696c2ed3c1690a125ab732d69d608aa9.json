{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Dropdowns/ColorVariantDropdown.tsx\";\nimport { ButtonGroup, Dropdown } from 'react-bootstrap'; // type\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ColorVariantDropdown = _ref => {\n  let {\n    variants\n  } = _ref;\n  const colorVariantDropdown = [...variants];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mb-1 mt-5\",\n      children: \"Variant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted font-13 mb-3\",\n      children: \"The best part is you can do this with any button variant, too:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), (colorVariantDropdown || []).map((color, index) => {\n      return /*#__PURE__*/_jsxDEV(Dropdown, {\n        as: ButtonGroup,\n        className: \"mb-2 me-1\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: color,\n          children: [color.charAt(0).toUpperCase() + color.slice(1), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-chevron-down ms-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            href: \"#\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            href: \"#\",\n            children: \"Another action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            href: \"#\",\n            children: \"Something else here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            href: \"#\",\n            children: \"Separated link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)]\n      }, index.toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_c = ColorVariantDropdown;\nexport default ColorVariantDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorVariantDropdown\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Dropdowns/ColorVariantDropdown.tsx"],"names":["ButtonGroup","Dropdown","ColorVariantDropdown","variants","colorVariantDropdown","map","color","index","charAt","toUpperCase","slice","toString"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,iBAAtC,C,CAEA;;;;;AASA,MAAMC,oBAAoB,GAAG,QAA6C;AAAA,MAA5C;AAAEC,IAAAA;AAAF,GAA4C;AACtE,QAAMC,oBAAuC,GAAG,CAAC,GAAGD,QAAJ,CAAhD;AACA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIK,CAACC,oBAAoB,IAAI,EAAzB,EAA6BC,GAA7B,CAAiC,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAChD,0BACI,QAAC,QAAD;AAAiC,QAAA,EAAE,EAAEP,WAArC;AAAkD,QAAA,SAAS,EAAC,WAA5D;AAAA,gCACI,QAAC,QAAD,CAAU,MAAV;AAAiB,UAAA,OAAO,EAAEM,KAA1B;AAAA,qBACKA,KAAK,CAAEE,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCH,KAAK,CAAEI,KAAP,CAAa,CAAb,CADtC,eAEI;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,QAAD,CAAU,IAAV;AAAA,kCACI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,IAAI,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,IAAI,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,IAAI,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII,QAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,IAAI,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA,SAAeH,KAAK,CAACI,QAAN,EAAf;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH,KAhBA,CAJL;AAAA,kBADJ;AAwBH,CA1BD;;KAAMT,oB;AA4BN,eAAeA,oBAAf","sourcesContent":["import { ButtonGroup, Dropdown } from 'react-bootstrap';\n\n// type\nimport { Variant } from './types';\n\ntype ColorVariantDropdownProps = {\n    variants: Variant[];\n};\n\ntype DropdownVariant = Variant;\n\nconst ColorVariantDropdown = ({ variants }: ColorVariantDropdownProps) => {\n    const colorVariantDropdown: DropdownVariant[] = [...variants];\n    return (\n        <>\n            <h5 className=\"mb-1 mt-5\">Variant</h5>\n            <p className=\"text-muted font-13 mb-3\">The best part is you can do this with any button variant, too:</p>\n\n            {(colorVariantDropdown || []).map((color, index) => {\n                return (\n                    <Dropdown key={index.toString()} as={ButtonGroup} className=\"mb-2 me-1\">\n                        <Dropdown.Toggle variant={color}>\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                            <i className=\"mdi mdi-chevron-down ms-1\"></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"#\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                );\n            })}\n        </>\n    );\n};\n\nexport default ColorVariantDropdown;\n"]},"metadata":{},"sourceType":"module"}