{"ast":null,"code":"import _objectSpread from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"name\",\"placeholder\",\"refCallback\",\"errors\",\"control\",\"register\",\"className\"],_excluded2=[\"type\",\"name\",\"placeholder\",\"endIcon\",\"register\",\"errors\",\"comp\",\"rows\",\"className\",\"refCallback\"],_excluded3=[\"type\",\"label\",\"name\",\"placeholder\",\"register\",\"errors\",\"comp\",\"rows\",\"className\",\"refCallback\"],_excluded4=[\"type\",\"label\",\"name\",\"placeholder\",\"register\",\"errors\",\"comp\",\"className\",\"children\",\"refCallback\"],_excluded5=[\"label\",\"type\",\"name\",\"placeholder\",\"endIcon\",\"register\",\"errors\",\"control\",\"className\",\"labelClassName\",\"containerClass\",\"refCallback\",\"children\",\"action\",\"rows\"];import{useState}from'react';import{Form,InputGroup}from'react-bootstrap';import classNames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";/* Password Input with addons */var PasswordInput=function PasswordInput(_ref){var name=_ref.name,placeholder=_ref.placeholder,refCallback=_ref.refCallback,errors=_ref.errors,control=_ref.control,register=_ref.register,className=_ref.className,otherProps=_objectWithoutProperties(_ref,_excluded);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPassword=_useState2[0],setShowPassword=_useState2[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(InputGroup,{className:\"mb-0\",children:[/*#__PURE__*/_jsx(Form.Control,_objectSpread(_objectSpread({type:showPassword?'text':'password',placeholder:placeholder,name:name,id:name,as:\"input\",ref:function ref(r){if(refCallback)refCallback(r);},className:className,isInvalid:errors&&errors[name]?true:false},register?register(name):{}),{},{autoComplete:name},otherProps)),/*#__PURE__*/_jsx(\"div\",{className:classNames('input-group-text','input-group-password',{'show-password':showPassword}),\"data-password\":showPassword?'true':'false',children:/*#__PURE__*/_jsx(\"span\",{className:\"password-eye\",onClick:function onClick(){setShowPassword(!showPassword);}})})]}),errors&&errors[name]?/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",className:\"d-block\",children:errors[name]['message']}):null]});};// textual form-controlsâ€”like inputs, passwords, textareas etc.\nvar TextualInput=function TextualInput(_ref2){var type=_ref2.type,name=_ref2.name,placeholder=_ref2.placeholder,endIcon=_ref2.endIcon,register=_ref2.register,errors=_ref2.errors,comp=_ref2.comp,rows=_ref2.rows,className=_ref2.className,refCallback=_ref2.refCallback,otherProps=_objectWithoutProperties(_ref2,_excluded2);return/*#__PURE__*/_jsx(_Fragment,{children:type==='password'&&endIcon?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(PasswordInput,_objectSpread({name:name,placeholder:placeholder,refCallback:refCallback,errors:errors,register:register,className:className},otherProps))}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Form.Control,_objectSpread(_objectSpread({type:type,placeholder:placeholder,name:name,as:comp,id:name,ref:function ref(r){if(refCallback)refCallback(r);},className:className,isInvalid:errors&&errors[name]?true:false},register?register(name):{}),{},{rows:rows},otherProps)),errors&&errors[name]?/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",className:\"d-block\",children:errors[name]['message']}):null]})});};// non-textual checkbox and radio controls\nvar CheckInput=function CheckInput(_ref3){var type=_ref3.type,label=_ref3.label,name=_ref3.name,placeholder=_ref3.placeholder,register=_ref3.register,errors=_ref3.errors,comp=_ref3.comp,rows=_ref3.rows,className=_ref3.className,refCallback=_ref3.refCallback,otherProps=_objectWithoutProperties(_ref3,_excluded3);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Form.Check,_objectSpread(_objectSpread({type:type,label:label,name:name,id:name,ref:function ref(r){if(refCallback)refCallback(r);},className:className,isInvalid:errors&&errors[name]?true:false},register?register(name):{}),otherProps)),errors&&errors[name]?/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",className:\"d-block\",children:errors[name]['message']}):null]});};// handle select controls\nvar SelectInput=function SelectInput(_ref4){var type=_ref4.type,label=_ref4.label,name=_ref4.name,placeholder=_ref4.placeholder,register=_ref4.register,errors=_ref4.errors,comp=_ref4.comp,className=_ref4.className,children=_ref4.children,refCallback=_ref4.refCallback,otherProps=_objectWithoutProperties(_ref4,_excluded4);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Form.Select,_objectSpread(_objectSpread({type:type,label:label,name:name,id:name,ref:function ref(r){if(refCallback)refCallback(r);},children:children,className:className,isInvalid:errors&&errors[name]?true:false},register?register(name):{}),otherProps)),errors&&errors[name]?/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:errors[name]['message']}):null]});};var FormInput=function FormInput(_ref5){var label=_ref5.label,type=_ref5.type,name=_ref5.name,placeholder=_ref5.placeholder,endIcon=_ref5.endIcon,register=_ref5.register,errors=_ref5.errors,control=_ref5.control,className=_ref5.className,labelClassName=_ref5.labelClassName,containerClass=_ref5.containerClass,refCallback=_ref5.refCallback,children=_ref5.children,action=_ref5.action,rows=_ref5.rows,otherProps=_objectWithoutProperties(_ref5,_excluded5);// handle input type\nvar comp=type==='textarea'?'textarea':type==='select'?'select':'input';var hasEndIcon=endIcon!==undefined?endIcon:true;return/*#__PURE__*/_jsx(_Fragment,{children:type==='hidden'?/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({type:type,name:name},register?register(name):{}),otherProps)):/*#__PURE__*/_jsx(_Fragment,{children:type==='select'?/*#__PURE__*/_jsxs(Form.Group,{className:containerClass,children:[label?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Form.Label,{className:labelClassName,children:label}),action&&action]}):null,/*#__PURE__*/_jsx(SelectInput,_objectSpread({type:type,name:name,placeholder:placeholder,refCallback:refCallback,errors:errors,register:register,comp:comp,className:className,children:children},otherProps))]}):/*#__PURE__*/_jsx(_Fragment,{children:type==='checkbox'||type==='radio'?/*#__PURE__*/_jsx(Form.Group,{className:containerClass,children:/*#__PURE__*/_jsx(CheckInput,_objectSpread({type:type,label:label,name:name,placeholder:placeholder,refCallback:refCallback,errors:errors,register:register,comp:comp,className:className,rows:rows},otherProps))}):/*#__PURE__*/_jsxs(Form.Group,{className:containerClass,children:[label?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Form.Label,{className:labelClassName,children:label}),action&&action]}):null,/*#__PURE__*/_jsx(TextualInput,_objectSpread({type:type,name:name,placeholder:placeholder,endIcon:hasEndIcon,refCallback:refCallback,errors:errors,register:register,comp:comp,className:className,rows:rows},otherProps))]})})})});};export default FormInput;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/form/FormInput.tsx"],"names":["useState","Form","InputGroup","classNames","PasswordInput","name","placeholder","refCallback","errors","control","register","className","otherProps","showPassword","setShowPassword","r","TextualInput","type","endIcon","comp","rows","CheckInput","label","SelectInput","children","FormInput","labelClassName","containerClass","action","hasEndIcon","undefined"],"mappings":"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","sourcesContent":["import { useState, InputHTMLAttributes } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport { FieldErrors, Control } from 'react-hook-form';\n\ntype FormInputProps = InputHTMLAttributes<HTMLInputElement> & {\n    endIcon?: boolean;\n    label?: string;\n    type?: string;\n    name: string;\n    comp?: string;\n    placeholder?: string;\n    register?: any;\n    errors?: FieldErrors;\n    control?: Control<any>;\n    className?: string;\n    labelClassName?: string;\n    containerClass?: string;\n    textClassName?: string;\n    refCallback?: any;\n    action?: React.ReactNode;\n    rows?: number;\n};\n\n/* Password Input with addons */\nconst PasswordInput = ({\n    name,\n    placeholder,\n    refCallback,\n    errors,\n    control,\n    register,\n    className,\n    ...otherProps\n}: FormInputProps) => {\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r: HTMLInputElement) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                    {...otherProps}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}\n                >\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}\n                    ></span>\n                </div>\n            </InputGroup>\n\n            {errors && errors[name] ? (\n                <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                    {errors[name]['message']}\n                </Form.Control.Feedback>\n            ) : null}\n        </>\n    );\n};\n\n// textual form-controlsâ€”like inputs, passwords, textareas etc.\nconst TextualInput = ({\n    type,\n    name,\n    placeholder,\n    endIcon,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            {type === 'password' && endIcon ? (\n                <>\n                    <PasswordInput\n                        name={name}\n                        placeholder={placeholder}\n                        refCallback={refCallback}\n                        errors={errors!}\n                        register={register}\n                        className={className}\n                        {...otherProps}\n                    />\n                </>\n            ) : (\n                <>\n                    <Form.Control\n                        type={type}\n                        placeholder={placeholder}\n                        name={name}\n                        as={comp}\n                        id={name}\n                        ref={(r: HTMLInputElement) => {\n                            if (refCallback) refCallback(r);\n                        }}\n                        className={className}\n                        isInvalid={errors && errors[name] ? true : false}\n                        {...(register ? register(name) : {})}\n                        rows={rows}\n                        {...otherProps}\n                    ></Form.Control>\n\n                    {errors && errors[name] ? (\n                        <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                            {errors[name]['message']}\n                        </Form.Control.Feedback>\n                    ) : null}\n                </>\n            )}\n        </>\n    );\n};\n\n// non-textual checkbox and radio controls\nconst CheckInput = ({\n    type,\n    label,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Check\n                type={type}\n                label={label}\n                name={name}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                {...otherProps}\n            />\n\n            {errors && errors[name] ? (\n                <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                    {errors[name]['message']}\n                </Form.Control.Feedback>\n            ) : null}\n        </>\n    );\n};\n\n// handle select controls\nconst SelectInput = ({\n    type,\n    label,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    className,\n    children,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Select\n                type={type}\n                label={label}\n                name={name}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                children={children}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                {...otherProps}\n            />\n\n            {errors && errors[name] ? (\n                <Form.Control.Feedback type=\"invalid\">{errors[name]['message']}</Form.Control.Feedback>\n            ) : null}\n        </>\n    );\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    placeholder,\n    endIcon,\n    register,\n    errors,\n    control,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    action,\n    rows,\n    ...otherProps\n}: FormInputProps) => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    const hasEndIcon = endIcon !== undefined ? endIcon : true;\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'select' ? (\n                        <Form.Group className={containerClass}>\n                            {label ? (\n                                <>\n                                    <Form.Label className={labelClassName}>{label}</Form.Label>\n                                    {action && action}\n                                </>\n                            ) : null}\n\n                            <SelectInput\n                                type={type}\n                                name={name}\n                                placeholder={placeholder}\n                                refCallback={refCallback}\n                                errors={errors}\n                                register={register}\n                                comp={comp}\n                                className={className}\n                                children={children}\n                                {...otherProps}\n                            />\n                        </Form.Group>\n                    ) : (\n                        <>\n                            {type === 'checkbox' || type === 'radio' ? (\n                                <Form.Group className={containerClass}>\n                                    <CheckInput\n                                        type={type}\n                                        label={label}\n                                        name={name}\n                                        placeholder={placeholder}\n                                        refCallback={refCallback}\n                                        errors={errors}\n                                        register={register}\n                                        comp={comp}\n                                        className={className}\n                                        rows={rows}\n                                        {...otherProps}\n                                    />\n                                </Form.Group>\n                            ) : (\n                                <Form.Group className={containerClass}>\n                                    {label ? (\n                                        <>\n                                            <Form.Label className={labelClassName}>{label}</Form.Label>\n                                            {action && action}\n                                        </>\n                                    ) : null}\n\n                                    <TextualInput\n                                        type={type}\n                                        name={name}\n                                        placeholder={placeholder}\n                                        endIcon={hasEndIcon}\n                                        refCallback={refCallback}\n                                        errors={errors}\n                                        register={register}\n                                        comp={comp}\n                                        className={className}\n                                        rows={rows}\n                                        {...otherProps}\n                                    />\n                                </Form.Group>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n"]},"metadata":{},"sourceType":"module"}