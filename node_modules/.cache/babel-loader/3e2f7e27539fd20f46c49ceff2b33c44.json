{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/apps/Chat/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Col, Row } from 'react-bootstrap'; // hooks\n\nimport { usePageTitle } from '../../../hooks'; // component\n\nimport ChatUsers from './ChatUsers';\nimport ChatArea from './ChatArea'; // types\n\n// dummy data\nimport { users } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatApp = () => {\n  _s();\n\n  // set pagetitle\n  usePageTitle({\n    title: 'Chat',\n    breadCrumbItems: [{\n      path: '/apps/chat',\n      label: 'Apps'\n    }, {\n      path: '/apps/chat',\n      label: 'Chat',\n      active: true\n    }]\n  });\n  const [selectedUser, setSelectedUser] = useState(users[1]); // On user change\n\n  const onUserChange = user => {\n    setSelectedUser(user);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xl: 3,\n      lg: 4,\n      children: /*#__PURE__*/_jsxDEV(ChatUsers, {\n        onUserSelect: onUserChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xl: 9,\n      lg: 8,\n      children: /*#__PURE__*/_jsxDEV(ChatArea, {\n        selectedUser: selectedUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatApp, \"ie7MzIA60tFzwJl0D0YFleN9vig=\", false, function () {\n  return [usePageTitle];\n});\n\n_c = ChatApp;\nexport default ChatApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/apps/Chat/index.tsx"],"names":["useState","Col","Row","usePageTitle","ChatUsers","ChatArea","users","ChatApp","title","breadCrumbItems","path","label","active","selectedUser","setSelectedUser","onUserChange","user"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,gBAA7B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;AAGA;AACA,SAASC,KAAT,QAAsB,QAAtB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB;AACAJ,EAAAA,YAAY,CAAC;AACTK,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,eAAe,EAAE,CACb;AACIC,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADa,EAKb;AACID,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,KAAK,EAAE,MAFX;AAGIC,MAAAA,MAAM,EAAE;AAHZ,KALa;AAFR,GAAD,CAAZ;AAeA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAWM,KAAK,CAAC,CAAD,CAAhB,CAAhD,CAjBkB,CAmBlB;;AACA,QAAMS,YAAY,GAAIC,IAAD,IAAoB;AACrCF,IAAAA,eAAe,CAACE,IAAD,CAAf;AACH,GAFD;;AAIA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,YAAY,EAAED;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEF;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAlCD;;GAAMN,O;UAEFJ,Y;;;KAFEI,O;AAoCN,eAAeA,OAAf","sourcesContent":["import { useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// component\nimport ChatUsers from './ChatUsers';\nimport ChatArea from './ChatArea';\n\n// types\nimport { ChatUser } from './types';\n\n// dummy data\nimport { users } from './data';\n\nconst ChatApp = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Chat',\n        breadCrumbItems: [\n            {\n                path: '/apps/chat',\n                label: 'Apps',\n            },\n            {\n                path: '/apps/chat',\n                label: 'Chat',\n                active: true,\n            },\n        ],\n    });\n\n    const [selectedUser, setSelectedUser] = useState<ChatUser>(users[1]);\n\n    // On user change\n    const onUserChange = (user: ChatUser) => {\n        setSelectedUser(user);\n    };\n\n    return (\n        <Row>\n            <Col xl={3} lg={4}>\n                <ChatUsers onUserSelect={onUserChange} />\n            </Col>\n            <Col xl={9} lg={8}>\n                <ChatArea selectedUser={selectedUser} />\n            </Col>\n        </Row>\n    );\n};\n\nexport default ChatApp;\n"]},"metadata":{},"sourceType":"module"}