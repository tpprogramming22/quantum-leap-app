{"ast":null,"code":"import _slicedToArray from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import{Col,Row}from'react-bootstrap';// hooks\nimport{usePageTitle}from'../../../hooks';// component\nimport ChatUsers from'./ChatUsers';import ChatArea from'./ChatArea';// types\n// dummy data\nimport{users}from'./data';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatApp=function ChatApp(){// set pagetitle\nusePageTitle({title:'Chat',breadCrumbItems:[{path:'/apps/chat',label:'Apps'},{path:'/apps/chat',label:'Chat',active:true}]});var _useState=useState(users[1]),_useState2=_slicedToArray(_useState,2),selectedUser=_useState2[0],setSelectedUser=_useState2[1];// On user change\nvar onUserChange=function onUserChange(user){setSelectedUser(user);};return/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xl:3,lg:4,children:/*#__PURE__*/_jsx(ChatUsers,{onUserSelect:onUserChange})}),/*#__PURE__*/_jsx(Col,{xl:9,lg:8,children:/*#__PURE__*/_jsx(ChatArea,{selectedUser:selectedUser})})]});};export default ChatApp;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/apps/Chat/index.tsx"],"names":["useState","Col","Row","usePageTitle","ChatUsers","ChatArea","users","ChatApp","title","breadCrumbItems","path","label","active","selectedUser","setSelectedUser","onUserChange","user"],"mappings":"2IAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CAEA;AACA,OAASC,YAAT,KAA6B,gBAA7B,CAEA;AACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA;AAGA;AACA,OAASC,KAAT,KAAsB,QAAtB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB;AACAJ,YAAY,CAAC,CACTK,KAAK,CAAE,MADE,CAETC,eAAe,CAAE,CACb,CACIC,IAAI,CAAE,YADV,CAEIC,KAAK,CAAE,MAFX,CADa,CAKb,CACID,IAAI,CAAE,YADV,CAEIC,KAAK,CAAE,MAFX,CAGIC,MAAM,CAAE,IAHZ,CALa,CAFR,CAAD,CAAZ,CAeA,cAAwCZ,QAAQ,CAAWM,KAAK,CAAC,CAAD,CAAhB,CAAhD,wCAAOO,YAAP,eAAqBC,eAArB,eAEA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAoB,CACrCF,eAAe,CAACE,IAAD,CAAf,CACH,CAFD,CAIA,mBACI,MAAC,GAAD,yBACI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,EAAE,CAAE,CAAhB,uBACI,KAAC,SAAD,EAAW,YAAY,CAAED,YAAzB,EADJ,EADJ,cAII,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,EAAE,CAAE,CAAhB,uBACI,KAAC,QAAD,EAAU,YAAY,CAAEF,YAAxB,EADJ,EAJJ,GADJ,CAUH,CAlCD,CAoCA,cAAeN,CAAAA,OAAf","sourcesContent":["import { useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// component\nimport ChatUsers from './ChatUsers';\nimport ChatArea from './ChatArea';\n\n// types\nimport { ChatUser } from './types';\n\n// dummy data\nimport { users } from './data';\n\nconst ChatApp = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Chat',\n        breadCrumbItems: [\n            {\n                path: '/apps/chat',\n                label: 'Apps',\n            },\n            {\n                path: '/apps/chat',\n                label: 'Chat',\n                active: true,\n            },\n        ],\n    });\n\n    const [selectedUser, setSelectedUser] = useState<ChatUser>(users[1]);\n\n    // On user change\n    const onUserChange = (user: ChatUser) => {\n        setSelectedUser(user);\n    };\n\n    return (\n        <Row>\n            <Col xl={3} lg={4}>\n                <ChatUsers onUserSelect={onUserChange} />\n            </Col>\n            <Col xl={9} lg={8}>\n                <ChatArea selectedUser={selectedUser} />\n            </Col>\n        </Row>\n    );\n};\n\nexport default ChatApp;\n"]},"metadata":{},"sourceType":"module"}