{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Notifications/DefaultToasts.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Row, Col, Card, Toast } from 'react-bootstrap'; // images\n\nimport logo from '../../../assets/images/logo-sm.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DefaultToasts = () => {\n  _s();\n\n  const [show, setShow] = useState(true);\n  const [showTranslucent, setShowTranslucent] = useState(true);\n  const [showPlacement, setShowPlacement] = useState(true);\n  const [stacked, setStacked] = useState([{\n    time: 'just now',\n    desc: 'See? Just like this.'\n  }, {\n    time: '2 seconds ago',\n    desc: 'Heads up, toasts will stack automatically'\n  }]);\n  /*\n   * handle close\n   */\n\n  const handleClose = index => {\n    const list = [...stacked];\n    list.splice(index, 1);\n    setStacked(list);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Bootstrap Toasts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted font-14\",\n        children: \"Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-2\",\n            children: \"Basic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted font-14\",\n            children: \"Toasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your \\u201Ctoasted\\u201D content and strongly encourage a dismiss button.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3\",\n            children: /*#__PURE__*/_jsxDEV(Toast, {\n              onClose: () => setShow(false),\n              show: show,\n              delay: 5000,\n              autohide: true,\n              children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: logo,\n                  alt: \"brand-logo\",\n                  height: \"12\",\n                  className: \"me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"me-auto\",\n                  children: \"Adminto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"ms-5\",\n                  children: \"11 mins ago\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                children: \"Hello, world! This is a toast message.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-2\",\n            children: \"Translucent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted font-14\",\n            children: \"Toasts are slightly translucent, too, so they blend over whatever they might appear over. For browsers that support the backdrop-filter CSS property, we\\u2019ll also attempt to blur the elements under a toast.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-light\",\n            children: /*#__PURE__*/_jsxDEV(Toast, {\n              onClose: () => setShowTranslucent(false),\n              show: showTranslucent,\n              delay: 8000,\n              autohide: true,\n              children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: logo,\n                  alt: \"brand-logo\",\n                  height: \"12\",\n                  className: \"me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"me-auto\",\n                  children: \"Adminto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"ms-5\",\n                  children: \"11 mins ago\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                children: \"Hello, world! This is a toast message.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-2\",\n            children: \"Stacking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted font-14\",\n            children: \"When you have multiple toasts, we default to vertiaclly stacking them in a readable manner.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              \"aria-live\": \"polite\",\n              \"aria-atomic\": \"true\",\n              style: {\n                position: 'relative',\n                minHeight: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"toast-container\",\n                style: {\n                  position: 'absolute',\n                  top: 0,\n                  right: 0\n                },\n                children: (stacked || []).map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(Toast, {\n                    onClose: () => handleClose(index),\n                    delay: 11000,\n                    autohide: true,\n                    children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: logo,\n                        alt: \"brand-logo\",\n                        height: \"12\",\n                        className: \"me-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 110,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        className: \"me-auto\",\n                        children: \"Adminto\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                        className: \"ms-5\",\n                        children: item.time\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                      children: item.desc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 49\n                    }, this)]\n                  }, index.toString(), true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-2\",\n            children: \"Placement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted font-14\",\n            children: [\"Place toasts with custom CSS as you need them. The top right is often used for notifications, as is the top middle. If you\\u2019re only ever going to show one toast at a time, put the positioning styles right on the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".toast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 69\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              \"aria-live\": \"polite\",\n              \"aria-atomic\": \"true\",\n              className: \"d-flex justify-content-center align-items-center\",\n              style: {\n                minHeight: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Toast, {\n                onClose: () => setShowPlacement(false),\n                show: showPlacement,\n                children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: logo,\n                    alt: \"brand-logo\",\n                    height: \"12\",\n                    className: \"me-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    className: \"me-auto\",\n                    children: \"Adminto\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"ms-5\",\n                    children: \"1 mins ago\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                  children: \"Heads up, toasts will stack automatically\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DefaultToasts, \"qLelb1NPVk/Qbz6SyCwTg7ePFTc=\");\n\n_c = DefaultToasts;\nexport default DefaultToasts;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultToasts\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Notifications/DefaultToasts.tsx"],"names":["useState","Row","Col","Card","Toast","logo","DefaultToasts","show","setShow","showTranslucent","setShowTranslucent","showPlacement","setShowPlacement","stacked","setStacked","time","desc","handleClose","index","list","splice","position","minHeight","top","right","map","item","toString"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Row, Col, Card, Toast } from 'react-bootstrap';\n\n// images\nimport logo from '../../../assets/images/logo-sm.png';\n\nconst DefaultToasts = () => {\n    const [show, setShow] = useState<boolean>(true);\n    const [showTranslucent, setShowTranslucent] = useState<boolean>(true);\n    const [showPlacement, setShowPlacement] = useState<boolean>(true);\n\n    const [stacked, setStacked] = useState([\n        {\n            time: 'just now',\n            desc: 'See? Just like this.',\n        },\n        {\n            time: '2 seconds ago',\n            desc: 'Heads up, toasts will stack automatically',\n        },\n    ]);\n\n    /*\n     * handle close\n     */\n    const handleClose = (index: number) => {\n        const list = [...stacked];\n        list.splice(index, 1);\n        setStacked(list);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Bootstrap Toasts</h4>\n                <p className=\"text-muted font-14\">\n                    Push notifications to your visitors with a toast, a lightweight and easily customizable alert\n                    message.\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <h5 className=\"mb-2\">Basic</h5>\n                        <p className=\"text-muted font-14\">\n                            Toasts are as flexible as you need and have very little required markup. At a minimum, we\n                            require a single element to contain your “toasted” content and strongly encourage a dismiss\n                            button.\n                        </p>\n                        <div className=\"p-3\">\n                            <Toast onClose={() => setShow(false)} show={show} delay={5000} autohide>\n                                <Toast.Header>\n                                    <img src={logo} alt=\"brand-logo\" height=\"12\" className=\"me-1\" />\n                                    <strong className=\"me-auto\">Adminto</strong>\n                                    <small className=\"ms-5\">11 mins ago</small>\n                                </Toast.Header>\n                                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                            </Toast>\n                        </div>\n                    </Col>\n\n                    <Col lg={6}>\n                        <h5 className=\"mb-2\">Translucent</h5>\n                        <p className=\"text-muted font-14\">\n                            Toasts are slightly translucent, too, so they blend over whatever they might appear over.\n                            For browsers that support the backdrop-filter CSS property, we’ll also attempt to blur the\n                            elements under a toast.\n                        </p>\n\n                        <div className=\"p-3 bg-light\">\n                            <Toast\n                                onClose={() => setShowTranslucent(false)}\n                                show={showTranslucent}\n                                delay={8000}\n                                autohide\n                            >\n                                <Toast.Header>\n                                    <img src={logo} alt=\"brand-logo\" height=\"12\" className=\"me-1\" />\n                                    <strong className=\"me-auto\">Adminto</strong>\n                                    <small className=\"ms-5\">11 mins ago</small>\n                                </Toast.Header>\n                                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                            </Toast>\n                        </div>\n                    </Col>\n                </Row>\n\n                {/* stacked */}\n                <Row>\n                    <Col lg={6} className=\"mt-4\">\n                        <h5 className=\"mb-2\">Stacking</h5>\n                        <p className=\"text-muted font-14\">\n                            When you have multiple toasts, we default to vertiaclly stacking them in a readable manner.\n                        </p>\n                        <div className=\"p-3\">\n                            <div\n                                aria-live=\"polite\"\n                                aria-atomic=\"true\"\n                                style={{ position: 'relative', minHeight: '200px' }}\n                            >\n                                <div className=\"toast-container\" style={{ position: 'absolute', top: 0, right: 0 }}>\n                                    {(stacked || []).map((item, index) => {\n                                        return (\n                                            <Toast\n                                                key={index.toString()}\n                                                onClose={() => handleClose(index)}\n                                                delay={11000}\n                                                autohide\n                                            >\n                                                <Toast.Header>\n                                                    <img src={logo} alt=\"brand-logo\" height=\"12\" className=\"me-1\" />\n                                                    <strong className=\"me-auto\">Adminto</strong>\n                                                    <small className=\"ms-5\">{item.time}</small>\n                                                </Toast.Header>\n                                                <Toast.Body>{item.desc}</Toast.Body>\n                                            </Toast>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                        </div>\n                    </Col>\n\n                    <Col lg={6} className=\"mt-4\">\n                        <h5 className=\"mb-2\">Placement</h5>\n                        <p className=\"text-muted font-14\">\n                            Place toasts with custom CSS as you need them. The top right is often used for\n                            notifications, as is the top middle. If you’re only ever going to show one toast at a time,\n                            put the positioning styles right on the <code>.toast</code>.\n                        </p>\n\n                        <div className=\"p-3\">\n                            <div\n                                aria-live=\"polite\"\n                                aria-atomic=\"true\"\n                                className=\"d-flex justify-content-center align-items-center\"\n                                style={{ minHeight: '200px' }}\n                            >\n                                <Toast onClose={() => setShowPlacement(false)} show={showPlacement}>\n                                    <Toast.Header>\n                                        <img src={logo} alt=\"brand-logo\" height=\"12\" className=\"me-1\" />\n                                        <strong className=\"me-auto\">Adminto</strong>\n                                        <small className=\"ms-5\">1 mins ago</small>\n                                    </Toast.Header>\n                                    <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\n                                </Toast>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DefaultToasts;\n"]},"metadata":{},"sourceType":"module"}