{"ast":null,"code":"import _slicedToArray from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import{Button,Card,Col,Modal,Row}from'react-bootstrap';import*as yup from'yup';import{yupResolver}from'@hookform/resolvers/yup';// hooks\nimport{usePageTitle}from'../../../../hooks';// component\nimport{VerticalForm,FormInput}from'../../../../components/form';import ContactDetails from'../../../../components/ContactDetails';// data\nimport{contacts}from'./data';// dummy data\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var List=function List(){// set pagetitle\nusePageTitle({title:'Contacts List',breadCrumbItems:[{path:'/apps/contacts/list',label:'Contacts'},{path:'/apps/contacts/list',label:'Contacts List',active:true}]});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modal=_useState2[0],setModal=_useState2[1];// Show/hide the modal\nvar toggle=function toggle(){setModal(!modal);};// form validation schema\nvar schemaResolver=yupResolver(yup.object().shape({name:yup.string().required('Please enter name'),position:yup.string().required('Please enter your position'),company:yup.string().required('Please enter your company name'),email:yup.string().required('Please enter Email address').email('Enter valid email')}));return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Row,{className:\"justify-content-center\",children:[/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 mt-md-0\",children:/*#__PURE__*/_jsxs(Button,{variant:\"success\",className:\"waves-effect waves-light\",onClick:toggle,children:[/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-plus-circle me-1\"}),\"Add contact\"]})})}),/*#__PURE__*/_jsx(Col,{md:8,children:/*#__PURE__*/_jsxs(\"form\",{className:\"d-flex flex-wrap align-items-center justify-content-sm-end\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"me-2\",children:\"Sort By\"}),/*#__PURE__*/_jsxs(FormInput,{type:\"select\",name:\"sort\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Post\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Followers\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Followings\"})]}),/*#__PURE__*/_jsx(FormInput,{type:\"search\",name:\"search\",placeholder:\"Search...\",className:\"ms-sm-2\"})]})})]})})})})}),/*#__PURE__*/_jsx(Row,{children:(contacts||[]).map(function(contact,index){return/*#__PURE__*/_jsx(Col,{xl:4,md:6,children:/*#__PURE__*/_jsx(ContactDetails,{contact:contact})},index.toString());})}),/*#__PURE__*/_jsxs(Modal,{show:modal,onHide:toggle,centered:true,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{as:\"h4\",children:\"Add Contact\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(VerticalForm,{onSubmit:function onSubmit(){},resolver:schemaResolver,defaultValues:{},children:[/*#__PURE__*/_jsx(FormInput,{label:'Name',type:\"text\",name:\"name\",placeholder:\"Enter name\",containerClass:'mb-3'}),/*#__PURE__*/_jsx(FormInput,{label:'Position',type:\"text\",name:\"position\",placeholder:\"Enter position\",containerClass:'mb-3'}),/*#__PURE__*/_jsx(FormInput,{label:'Company',type:\"text\",name:\"company\",placeholder:\"Enter company\",containerClass:'mb-3'}),/*#__PURE__*/_jsx(FormInput,{label:'Email address',type:\"email\",name:\"email\",placeholder:\"Enter email\",containerClass:'mb-3'}),/*#__PURE__*/_jsx(Button,{variant:\"light\",className:\"waves-effect waves-light me-1\",type:\"submit\",children:\"Save\"}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",className:\"waves-effect waves-light\",onClick:toggle,children:\"Cancel\"})]})})]})]});};export default List;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/apps/Contacts/List/index.tsx"],"names":["useState","Button","Card","Col","Modal","Row","yup","yupResolver","usePageTitle","VerticalForm","FormInput","ContactDetails","contacts","List","title","breadCrumbItems","path","label","active","modal","setModal","toggle","schemaResolver","object","shape","name","string","required","position","company","email","map","contact","index","toString"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Button, Card, Col, Modal, Row } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n// hooks\nimport { usePageTitle } from '../../../../hooks';\n\n// component\nimport { VerticalForm, FormInput } from '../../../../components/form';\n\nimport ContactDetails from '../../../../components/ContactDetails';\n\n// data\nimport { contacts } from './data';\n\n// dummy data\n\ntype MemberData = {\n    name: string;\n    position: string;\n    company: string;\n    email: string;\n};\n\nconst List = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Contacts List',\n        breadCrumbItems: [\n            {\n                path: '/apps/contacts/list',\n                label: 'Contacts',\n            },\n            {\n                path: '/apps/contacts/list',\n                label: 'Contacts List',\n                active: true,\n            },\n        ],\n    });\n\n    const [modal, setModal] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    // form validation schema\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            name: yup.string().required('Please enter name'),\n            position: yup.string().required('Please enter your position'),\n            company: yup.string().required('Please enter your company name'),\n            email: yup.string().required('Please enter Email address').email('Enter valid email'),\n        })\n    );\n    return (\n        <>\n            <Row>\n                <Col xs={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"justify-content-center\">\n                                <Col md={4}>\n                                    <div className=\"mt-3 mt-md-0\">\n                                        <Button variant=\"success\" className=\"waves-effect waves-light\" onClick={toggle}>\n                                            <i className=\"mdi mdi-plus-circle me-1\"></i>\n                                            Add contact\n                                        </Button>\n                                    </div>\n                                </Col>\n                                <Col md={8}>\n                                    <form className=\"d-flex flex-wrap align-items-center justify-content-sm-end\">\n                                        <label className=\"me-2\">Sort By</label>\n                                        <FormInput type=\"select\" name=\"sort\">\n                                            <option>All</option>\n                                            <option>Name</option>\n                                            <option>Post</option>\n                                            <option>Followers</option>\n                                            <option>Followings</option>\n                                        </FormInput>\n                                        <FormInput\n                                            type=\"search\"\n                                            name=\"search\"\n                                            placeholder=\"Search...\"\n                                            className=\"ms-sm-2\"\n                                        />\n                                    </form>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                {(contacts || []).map((contact, index) => {\n                    return (\n                        <Col xl={4} md={6} key={index.toString()}>\n                            <ContactDetails contact={contact} />\n                        </Col>\n                    );\n                })}\n            </Row>\n            <Modal show={modal} onHide={toggle} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title as=\"h4\">Add Contact</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <VerticalForm<MemberData> onSubmit={() => {}} resolver={schemaResolver} defaultValues={{}}>\n                        <FormInput\n                            label={'Name'}\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\"Enter name\"\n                            containerClass={'mb-3'}\n                        />\n\n                        <FormInput\n                            label={'Position'}\n                            type=\"text\"\n                            name=\"position\"\n                            placeholder=\"Enter position\"\n                            containerClass={'mb-3'}\n                        />\n\n                        <FormInput\n                            label={'Company'}\n                            type=\"text\"\n                            name=\"company\"\n                            placeholder=\"Enter company\"\n                            containerClass={'mb-3'}\n                        />\n\n                        <FormInput\n                            label={'Email address'}\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Enter email\"\n                            containerClass={'mb-3'}\n                        />\n\n                        <Button variant=\"light\" className=\"waves-effect waves-light me-1\" type=\"submit\">\n                            Save\n                        </Button>\n                        <Button variant=\"danger\" className=\"waves-effect waves-light\" onClick={toggle}>\n                            Cancel\n                        </Button>\n                    </VerticalForm>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}