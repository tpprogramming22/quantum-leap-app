{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/GeneralUI/RoundedPagination.tsx\";\nimport { Pagination } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RoundedPagination = () => {\n  let items = [];\n\n  for (let number = 1; number <= 5; number++) {\n    items.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n      active: number === 3,\n      children: number\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-1 fw-bold mt-4\",\n      children: \"Rounded Pagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted font-14\",\n      children: [\"Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \" .pagination-rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), \" for rounded pagination.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      className: \"pagination-rounded\",\n      children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), items, /*#__PURE__*/_jsxDEV(Pagination.Next, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = RoundedPagination;\nexport default RoundedPagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoundedPagination\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/GeneralUI/RoundedPagination.tsx"],"names":["Pagination","RoundedPagination","items","number","push"],"mappings":";AAAA,SAASA,UAAT,QAA2B,iBAA3B;;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,IAAI,CAA/B,EAAkCA,MAAM,EAAxC,EAA4C;AACxCD,IAAAA,KAAK,CAACE,IAAN,eACI,QAAC,UAAD,CAAY,IAAZ;AAA8B,MAAA,MAAM,EAAED,MAAM,KAAK,CAAjD;AAAA,gBACKA;AADL,OAAsBA,MAAtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AACD,sBACI;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,oBAAb;AAAA,sCACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,oBAAtB;AAAA,8BACI,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKD,KAFL,eAGI,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAaH,CAtBD;;KAAMD,iB;AAwBN,eAAeA,iBAAf","sourcesContent":["import { Pagination } from 'react-bootstrap';\n\nconst RoundedPagination = () => {\n    let items = [];\n    for (let number = 1; number <= 5; number++) {\n        items.push(\n            <Pagination.Item key={number} active={number === 3}>\n                {number}\n            </Pagination.Item>\n        );\n    }\n    return (\n        <>\n            <p className=\"mb-1 fw-bold mt-4\">Rounded Pagination</p>\n            <p className=\"text-muted font-14\">\n                Add <code> .pagination-rounded</code> for rounded pagination.\n            </p>\n            <Pagination className=\"pagination-rounded\">\n                <Pagination.Prev />\n                {items}\n                <Pagination.Next />\n            </Pagination>\n        </>\n    );\n};\n\nexport default RoundedPagination;\n"]},"metadata":{},"sourceType":"module"}