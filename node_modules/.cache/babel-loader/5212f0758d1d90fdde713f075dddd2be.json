{"ast":null,"code":"// app constants\nimport { LayoutColor, TopbarTheme, LayoutWidth, SideBarTypes } from '../constants';\nimport { LayoutActionTypes } from '../redux/layout/constants'; // actions\n\n// add property to change in particular option\nlet config = {\n  topbarTheme: TopbarTheme.TOPBAR_THEME_LIGHT,\n  leftSideBarType: SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT\n};\n\nconst getLayoutConfigs = (actionType, value) => {\n  switch (actionType) {\n    case LayoutActionTypes.CHANGE_LAYOUT_COLOR:\n      switch (value) {\n        case LayoutColor.LAYOUT_COLOR_DARK:\n          config.topbarTheme = TopbarTheme.TOPBAR_THEME_DARK;\n          break;\n\n        case LayoutColor.LAYOUT_COLOR_LIGHT:\n          config.topbarTheme = TopbarTheme.TOPBAR_THEME_LIGHT;\n          break;\n\n        default:\n          return config;\n      }\n\n      break;\n\n    case LayoutActionTypes.CHANGE_LAYOUT_WIDTH:\n      switch (value) {\n        case LayoutWidth.LAYOUT_WIDTH_FLUID:\n          config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT;\n          break;\n\n        case LayoutWidth.LAYOUT_WIDTH_BOXED:\n          config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED;\n          break;\n\n        default:\n          return config;\n      }\n\n      break;\n\n    default:\n      return config;\n  }\n\n  return config;\n};\n/**\n * Changes the body attribute\n */\n\n\nconst changeBodyAttribute = (attribute, value) => {\n  if (document.body) document.body.setAttribute(attribute, value);\n};\n\nexport { getLayoutConfigs, changeBodyAttribute };","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/utils/layout.ts"],"names":["LayoutColor","TopbarTheme","LayoutWidth","SideBarTypes","LayoutActionTypes","config","topbarTheme","TOPBAR_THEME_LIGHT","leftSideBarType","LEFT_SIDEBAR_TYPE_DEFAULT","getLayoutConfigs","actionType","value","CHANGE_LAYOUT_COLOR","LAYOUT_COLOR_DARK","TOPBAR_THEME_DARK","LAYOUT_COLOR_LIGHT","CHANGE_LAYOUT_WIDTH","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_TYPE_CONDENSED","changeBodyAttribute","attribute","document","body","setAttribute"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,WAAnC,EAAgDC,YAAhD,QAAoE,cAApE;AACA,SAASC,iBAAT,QAAkC,2BAAlC,C,CAEA;;AAWA;AACA,IAAIC,MAAmB,GAAG;AACtBC,EAAAA,WAAW,EAAEL,WAAW,CAACM,kBADH;AAEtBC,EAAAA,eAAe,EAAEL,YAAY,CAACM;AAFR,CAA1B;;AAKA,MAAMC,gBAAgB,GAAG,CACrBC,UADqB,EAErBC,KAFqB,KAGpB;AACD,UAAQD,UAAR;AACI,SAAKP,iBAAiB,CAACS,mBAAvB;AACI,cAAQD,KAAR;AACI,aAAKZ,WAAW,CAACc,iBAAjB;AACIT,UAAAA,MAAM,CAACC,WAAP,GAAqBL,WAAW,CAACc,iBAAjC;AACA;;AACJ,aAAKf,WAAW,CAACgB,kBAAjB;AACIX,UAAAA,MAAM,CAACC,WAAP,GAAqBL,WAAW,CAACM,kBAAjC;AACA;;AACJ;AACI,iBAAOF,MAAP;AARR;;AAUA;;AAEJ,SAAKD,iBAAiB,CAACa,mBAAvB;AACI,cAAQL,KAAR;AACI,aAAKV,WAAW,CAACgB,kBAAjB;AACIb,UAAAA,MAAM,CAACG,eAAP,GAAyBL,YAAY,CAACM,yBAAtC;AACA;;AACJ,aAAKP,WAAW,CAACiB,kBAAjB;AACId,UAAAA,MAAM,CAACG,eAAP,GAAyBL,YAAY,CAACiB,2BAAtC;AACA;;AACJ;AACI,iBAAOf,MAAP;AARR;;AAUA;;AACJ;AACI,aAAOA,MAAP;AA3BR;;AA6BA,SAAOA,MAAP;AACH,CAlCD;AAoCA;AACA;AACA;;;AACA,MAAMgB,mBAAmB,GAAG,CAACC,SAAD,EAAoBV,KAApB,KAA4C;AACpE,MAAIW,QAAQ,CAACC,IAAb,EAAmBD,QAAQ,CAACC,IAAT,CAAcC,YAAd,CAA2BH,SAA3B,EAAsCV,KAAtC;AACtB,CAFD;;AAIA,SAASF,gBAAT,EAA2BW,mBAA3B","sourcesContent":["// app constants\nimport { LayoutColor, TopbarTheme, LayoutWidth, SideBarTypes } from '../constants';\nimport { LayoutActionTypes } from '../redux/layout/constants';\n\n// actions\nimport { LayoutActionType } from '../redux/actions';\n\ntype ConfigTypes = {\n    topbarTheme: TopbarTheme.TOPBAR_THEME_LIGHT | TopbarTheme.TOPBAR_THEME_DARK;\n    leftSideBarType:\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_COMPACT;\n};\n\n// add property to change in particular option\nlet config: ConfigTypes = {\n    topbarTheme: TopbarTheme.TOPBAR_THEME_LIGHT,\n    leftSideBarType: SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT,\n};\n\nconst getLayoutConfigs = (\n    actionType: LayoutActionType<string | boolean | null>['type'],\n    value: string | boolean | null\n) => {\n    switch (actionType) {\n        case LayoutActionTypes.CHANGE_LAYOUT_COLOR:\n            switch (value) {\n                case LayoutColor.LAYOUT_COLOR_DARK:\n                    config.topbarTheme = TopbarTheme.TOPBAR_THEME_DARK;\n                    break;\n                case LayoutColor.LAYOUT_COLOR_LIGHT:\n                    config.topbarTheme = TopbarTheme.TOPBAR_THEME_LIGHT;\n                    break;\n                default:\n                    return config;\n            }\n            break;\n\n        case LayoutActionTypes.CHANGE_LAYOUT_WIDTH:\n            switch (value) {\n                case LayoutWidth.LAYOUT_WIDTH_FLUID:\n                    config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT;\n                    break;\n                case LayoutWidth.LAYOUT_WIDTH_BOXED:\n                    config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED;\n                    break;\n                default:\n                    return config;\n            }\n            break;\n        default:\n            return config;\n    }\n    return config;\n};\n\n/**\n * Changes the body attribute\n */\nconst changeBodyAttribute = (attribute: string, value: string): void => {\n    if (document.body) document.body.setAttribute(attribute, value);\n};\n\nexport { getLayoutConfigs, changeBodyAttribute };\n"]},"metadata":{},"sourceType":"module"}