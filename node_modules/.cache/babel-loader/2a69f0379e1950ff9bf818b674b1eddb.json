{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Offcanvases/OffCanvasWithBackdrop.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Card, Offcanvas, Button } from 'react-bootstrap'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BackdropButton = _ref => {\n  _s();\n\n  let {\n    name,\n    scroll,\n    backdrop\n  } = _ref;\n  const [show, setShow] = useState(false);\n  /**\n   * handle modal toggle\n   */\n\n  const toggle = () => {\n    setShow(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggle,\n      className: \"me-1\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: toggle,\n      scroll: scroll,\n      backdrop: backdrop,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Offcanvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: [\"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\", /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mt-3\",\n          children: \"List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ps-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"\",\n            children: \"Nemo enim ipsam voluptatem quia aspernatur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"\",\n            children: \"Neque porro quisquam est, qui dolorem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"\",\n            children: \"Quis autem vel eum iure qui in ea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ps-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"\",\n            children: \"At vero eos et accusamus et iusto odio dignissimos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"\",\n            children: \"Et harum quidem rerum facilis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"\",\n            children: \"Temporibus autem quibusdam et aut officiis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BackdropButton, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = BackdropButton;\n\nconst OffCanvasWithBackdrop = _ref2 => {\n  let {\n    options\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Offcanvas Backdrop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: [\"Scrolling the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<body>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 35\n        }, this), \" element is disabled when an offcanvas and its backdrop are visible. Use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"scroll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 38\n        }, this), \" prop to toggle \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<body>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 73\n        }, this), \" scrolling and\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"backdrop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), \" prop to toggle the backdrop.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-list\",\n        children: (options || []).map((props, idx) => /*#__PURE__*/_jsxDEV(BackdropButton, {\n          name: props.name,\n          scroll: props.scroll,\n          backdrop: props.backdrop\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = OffCanvasWithBackdrop;\nexport default OffCanvasWithBackdrop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BackdropButton\");\n$RefreshReg$(_c2, \"OffCanvasWithBackdrop\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Offcanvases/OffCanvasWithBackdrop.tsx"],"names":["useState","Card","Offcanvas","Button","BackdropButton","name","scroll","backdrop","show","setShow","toggle","prevState","OffCanvasWithBackdrop","options","map","props","idx"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Card, Offcanvas, Button } from 'react-bootstrap';\n\n// types\nimport { BackdropOption } from './types';\n\ntype OffCanvasWithBackdropProps = {\n    options: BackdropOption[];\n};\n\nconst BackdropButton = ({ name, scroll, backdrop }: BackdropOption) => {\n    const [show, setShow] = useState<boolean>(false);\n\n    /**\n     * handle modal toggle\n     */\n    const toggle = () => {\n        setShow((prevState) => !prevState);\n    };\n\n    return (\n        <>\n            <Button onClick={toggle} className=\"me-1\">\n                {name}\n            </Button>\n            <Offcanvas show={show} onHide={toggle} scroll={scroll} backdrop={backdrop}>\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    Some text as placeholder. In real life you can have the elements you have chosen. Like, text,\n                    images, lists, etc.\n                    <h5 className=\"mt-3\">List</h5>\n                    <ul className=\"ps-3\">\n                        <li className=\"\">Nemo enim ipsam voluptatem quia aspernatur</li>\n                        <li className=\"\">Neque porro quisquam est, qui dolorem</li>\n                        <li className=\"\">Quis autem vel eum iure qui in ea</li>\n                    </ul>\n                    <ul className=\"ps-3\">\n                        <li className=\"\">At vero eos et accusamus et iusto odio dignissimos</li>\n                        <li className=\"\">Et harum quidem rerum facilis</li>\n                        <li className=\"\">Temporibus autem quibusdam et aut officiis</li>\n                    </ul>\n                </Offcanvas.Body>\n            </Offcanvas>\n        </>\n    );\n};\n\nconst OffCanvasWithBackdrop = ({ options }: OffCanvasWithBackdropProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Offcanvas Backdrop</h4>\n                <p className=\"text-muted\">\n                    Scrolling the <code>&lt;body&gt;</code> element is disabled when an offcanvas and its backdrop are\n                    visible. Use the <code>scroll</code> prop to toggle <code>&lt;body&gt;</code> scrolling and{' '}\n                    <code>backdrop</code> prop to toggle the backdrop.\n                </p>\n\n                <div className=\"button-list\">\n                    {(options || []).map((props, idx) => (\n                        <BackdropButton key={idx} name={props.name} scroll={props.scroll} backdrop={props.backdrop} />\n                    ))}\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default OffCanvasWithBackdrop;\n"]},"metadata":{},"sourceType":"module"}