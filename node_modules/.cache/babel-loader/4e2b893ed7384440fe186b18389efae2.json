{"ast":null,"code":"// app constants\nimport{LayoutColor,TopbarTheme,LayoutWidth,SideBarTypes}from'../constants';import{LayoutActionTypes}from'../redux/layout/constants';// actions\n// add property to change in particular option\nvar config={topbarTheme:TopbarTheme.TOPBAR_THEME_LIGHT,leftSideBarType:SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT};var getLayoutConfigs=function getLayoutConfigs(actionType,value){switch(actionType){case LayoutActionTypes.CHANGE_LAYOUT_COLOR:switch(value){case LayoutColor.LAYOUT_COLOR_DARK:config.topbarTheme=TopbarTheme.TOPBAR_THEME_DARK;break;case LayoutColor.LAYOUT_COLOR_LIGHT:config.topbarTheme=TopbarTheme.TOPBAR_THEME_LIGHT;break;default:return config;}break;case LayoutActionTypes.CHANGE_LAYOUT_WIDTH:switch(value){case LayoutWidth.LAYOUT_WIDTH_FLUID:config.leftSideBarType=SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT;break;case LayoutWidth.LAYOUT_WIDTH_BOXED:config.leftSideBarType=SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED;break;default:return config;}break;default:return config;}return config;};/**\n * Changes the body attribute\n */var changeBodyAttribute=function changeBodyAttribute(attribute,value){if(document.body)document.body.setAttribute(attribute,value);};export{getLayoutConfigs,changeBodyAttribute};","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/utils/layout.ts"],"names":["LayoutColor","TopbarTheme","LayoutWidth","SideBarTypes","LayoutActionTypes","config","topbarTheme","TOPBAR_THEME_LIGHT","leftSideBarType","LEFT_SIDEBAR_TYPE_DEFAULT","getLayoutConfigs","actionType","value","CHANGE_LAYOUT_COLOR","LAYOUT_COLOR_DARK","TOPBAR_THEME_DARK","LAYOUT_COLOR_LIGHT","CHANGE_LAYOUT_WIDTH","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_TYPE_CONDENSED","changeBodyAttribute","attribute","document","body","setAttribute"],"mappings":"AAAA;AACA,OAASA,WAAT,CAAsBC,WAAtB,CAAmCC,WAAnC,CAAgDC,YAAhD,KAAoE,cAApE,CACA,OAASC,iBAAT,KAAkC,2BAAlC,CAEA;AAWA;AACA,GAAIC,CAAAA,MAAmB,CAAG,CACtBC,WAAW,CAAEL,WAAW,CAACM,kBADH,CAEtBC,eAAe,CAAEL,YAAY,CAACM,yBAFR,CAA1B,CAKA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CACrBC,UADqB,CAErBC,KAFqB,CAGpB,CACD,OAAQD,UAAR,EACI,IAAKP,CAAAA,iBAAiB,CAACS,mBAAvB,CACI,OAAQD,KAAR,EACI,IAAKZ,CAAAA,WAAW,CAACc,iBAAjB,CACIT,MAAM,CAACC,WAAP,CAAqBL,WAAW,CAACc,iBAAjC,CACA,MACJ,IAAKf,CAAAA,WAAW,CAACgB,kBAAjB,CACIX,MAAM,CAACC,WAAP,CAAqBL,WAAW,CAACM,kBAAjC,CACA,MACJ,QACI,MAAOF,CAAAA,MAAP,CARR,CAUA,MAEJ,IAAKD,CAAAA,iBAAiB,CAACa,mBAAvB,CACI,OAAQL,KAAR,EACI,IAAKV,CAAAA,WAAW,CAACgB,kBAAjB,CACIb,MAAM,CAACG,eAAP,CAAyBL,YAAY,CAACM,yBAAtC,CACA,MACJ,IAAKP,CAAAA,WAAW,CAACiB,kBAAjB,CACId,MAAM,CAACG,eAAP,CAAyBL,YAAY,CAACiB,2BAAtC,CACA,MACJ,QACI,MAAOf,CAAAA,MAAP,CARR,CAUA,MACJ,QACI,MAAOA,CAAAA,MAAP,CA3BR,CA6BA,MAAOA,CAAAA,MAAP,CACH,CAlCD,CAoCA;AACA;AACA,GACA,GAAMgB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,SAAD,CAAoBV,KAApB,CAA4C,CACpE,GAAIW,QAAQ,CAACC,IAAb,CAAmBD,QAAQ,CAACC,IAAT,CAAcC,YAAd,CAA2BH,SAA3B,CAAsCV,KAAtC,EACtB,CAFD,CAIA,OAASF,gBAAT,CAA2BW,mBAA3B","sourcesContent":["// app constants\nimport { LayoutColor, TopbarTheme, LayoutWidth, SideBarTypes } from '../constants';\nimport { LayoutActionTypes } from '../redux/layout/constants';\n\n// actions\nimport { LayoutActionType } from '../redux/actions';\n\ntype ConfigTypes = {\n    topbarTheme: TopbarTheme.TOPBAR_THEME_LIGHT | TopbarTheme.TOPBAR_THEME_DARK;\n    leftSideBarType:\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_COMPACT;\n};\n\n// add property to change in particular option\nlet config: ConfigTypes = {\n    topbarTheme: TopbarTheme.TOPBAR_THEME_LIGHT,\n    leftSideBarType: SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT,\n};\n\nconst getLayoutConfigs = (\n    actionType: LayoutActionType<string | boolean | null>['type'],\n    value: string | boolean | null\n) => {\n    switch (actionType) {\n        case LayoutActionTypes.CHANGE_LAYOUT_COLOR:\n            switch (value) {\n                case LayoutColor.LAYOUT_COLOR_DARK:\n                    config.topbarTheme = TopbarTheme.TOPBAR_THEME_DARK;\n                    break;\n                case LayoutColor.LAYOUT_COLOR_LIGHT:\n                    config.topbarTheme = TopbarTheme.TOPBAR_THEME_LIGHT;\n                    break;\n                default:\n                    return config;\n            }\n            break;\n\n        case LayoutActionTypes.CHANGE_LAYOUT_WIDTH:\n            switch (value) {\n                case LayoutWidth.LAYOUT_WIDTH_FLUID:\n                    config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT;\n                    break;\n                case LayoutWidth.LAYOUT_WIDTH_BOXED:\n                    config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED;\n                    break;\n                default:\n                    return config;\n            }\n            break;\n        default:\n            return config;\n    }\n    return config;\n};\n\n/**\n * Changes the body attribute\n */\nconst changeBodyAttribute = (attribute: string, value: string): void => {\n    if (document.body) document.body.setAttribute(attribute, value);\n};\n\nexport { getLayoutConfigs, changeBodyAttribute };\n"]},"metadata":{},"sourceType":"module"}