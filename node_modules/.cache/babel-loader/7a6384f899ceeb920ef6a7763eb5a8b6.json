{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/topbar/ProfileDropdown.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames'; // hooks\n\nimport { useToggle } from '../../hooks/'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileDropdown = _ref => {\n  _s();\n\n  let {\n    userImage,\n    username,\n    menuItems\n  } = _ref;\n  const [isOpen, show, hide] = useToggle();\n  /*\n   * toggle apps-dropdown\n   */\n\n  const toggleDropdown = () => {\n    isOpen ? hide() : show();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    show: isOpen,\n    onToggle: toggleDropdown,\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      as: \"a\",\n      variant: \"\",\n      className: \"nav-link nav-user me-0 waves-effect waves-light\",\n      id: \"page-header-user-dropdown\",\n      onClick: toggleDropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userImage,\n        alt: \"user\",\n        className: \"rounded-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pro-user-name ms-1\",\n        children: [username, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-chevron-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      align: \"end\",\n      className: \"profile-dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Header, {\n          className: \"noti-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"text-overflow m-0\",\n            children: \"Welcome !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), (menuItems || []).map((menu, i) => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [i === menuItems.length - 1 && /*#__PURE__*/_jsxDEV(Dropdown.Divider, {\n              as: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 64\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: menu.redirectTo,\n              className: \"dropdown-item notify-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: classNames(menu.icon, 'me-1')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: menu.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)]\n            }, i + '-profile-menu', true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)]\n          }, i + '-menu', true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileDropdown, \"jOUES55wwQLGDP9Zc9ZaHu73Gis=\", false, function () {\n  return [useToggle];\n});\n\n_c = ProfileDropdown;\nexport default ProfileDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileDropdown\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/topbar/ProfileDropdown.tsx"],"names":["React","Dropdown","Link","classNames","useToggle","ProfileDropdown","userImage","username","menuItems","isOpen","show","hide","toggleDropdown","map","menu","i","length","redirectTo","icon","label"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,cAA1B,C,CAEA;;;;AASA,MAAMC,eAAe,GAAG,QAA8D;AAAA;;AAAA,MAA7D;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,GAA6D;AAClF,QAAM,CAACC,MAAD,EAASC,IAAT,EAAeC,IAAf,IAAuBP,SAAS,EAAtC;AAEA;AACJ;AACA;;AACI,QAAMQ,cAAc,GAAG,MAAM;AACzBH,IAAAA,MAAM,GAAGE,IAAI,EAAP,GAAYD,IAAI,EAAtB;AACH,GAFD;;AAIA,sBACI,QAAC,QAAD;AAAU,IAAA,IAAI,EAAED,MAAhB;AAAwB,IAAA,QAAQ,EAAEG,cAAlC;AAAA,4BACI,QAAC,QAAD,CAAU,MAAV;AACI,MAAA,EAAE,EAAC,GADP;AAEI,MAAA,OAAO,EAAC,EAFZ;AAGI,MAAA,SAAS,EAAC,iDAHd;AAII,MAAA,EAAE,EAAC,2BAJP;AAKI,MAAA,OAAO,EAAEA,cALb;AAAA,8BAOI;AAAK,QAAA,GAAG,EAAEN,SAAV;AAAqB,QAAA,GAAG,EAAC,MAAzB;AAAgC,QAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA,mBACKC,QADL,oBACe;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADf;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI,QAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAC,KAArB;AAA2B,MAAA,SAAS,EAAC,kBAArC;AAAA,6BACI;AAAK,QAAA,OAAO,EAAEK,cAAd;AAAA,gCACI,QAAC,QAAD,CAAU,MAAV;AAAiB,UAAA,SAAS,EAAC,YAA3B;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKK,CAACJ,SAAS,IAAI,EAAd,EAAkBK,GAAlB,CAAsB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAChC,8BACI,QAAC,KAAD,CAAO,QAAP;AAAA,uBACKA,CAAC,KAAKP,SAAS,CAACQ,MAAV,GAAmB,CAAzB,iBAA8B,QAAC,QAAD,CAAU,OAAV;AAAkB,cAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,oBADnC,eAEI,QAAC,IAAD;AACI,cAAA,EAAE,EAAEF,IAAI,CAACG,UADb;AAEI,cAAA,SAAS,EAAC,2BAFd;AAAA,sCAKI;AAAG,gBAAA,SAAS,EAAEd,UAAU,CAACW,IAAI,CAACI,IAAN,EAAY,MAAZ;AAAxB;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA,0BAAOJ,IAAI,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA,eAGSJ,CAAC,GAAG,eAHb;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,aAAqBA,CAAC,GAAG,OAAzB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAaH,SAdA,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH,CAlDD;;GAAMV,e;UAC2BD,S;;;KAD3BC,e;AAoDN,eAAeA,eAAf","sourcesContent":["import React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// hooks\nimport { useToggle } from '../../hooks/';\n\n// types\nimport { ProfileMenu } from '../../layouts/types';\n\ntype ProfileDropdownProps = {\n    userImage: string;\n    username: string;\n    menuItems: ProfileMenu[];\n};\n\nconst ProfileDropdown = ({ userImage, username, menuItems }: ProfileDropdownProps) => {\n    const [isOpen, show, hide] = useToggle();\n\n    /*\n     * toggle apps-dropdown\n     */\n    const toggleDropdown = () => {\n        isOpen ? hide() : show();\n    };\n\n    return (\n        <Dropdown show={isOpen} onToggle={toggleDropdown}>\n            <Dropdown.Toggle\n                as=\"a\"\n                variant=\"\"\n                className=\"nav-link nav-user me-0 waves-effect waves-light\"\n                id=\"page-header-user-dropdown\"\n                onClick={toggleDropdown}\n            >\n                <img src={userImage} alt=\"user\" className=\"rounded-circle\" />\n                <span className=\"pro-user-name ms-1\">\n                    {username} <i className=\"mdi mdi-chevron-down\"></i>\n                </span>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu align=\"end\" className=\"profile-dropdown\">\n                <div onClick={toggleDropdown}>\n                    <Dropdown.Header className=\"noti-title\">\n                        <h6 className=\"text-overflow m-0\">Welcome !</h6>\n                    </Dropdown.Header>\n\n                    {(menuItems || []).map((menu, i) => {\n                        return (\n                            <React.Fragment key={i + '-menu'}>\n                                {i === menuItems.length - 1 && <Dropdown.Divider as=\"div\" />}\n                                <Link\n                                    to={menu.redirectTo}\n                                    className=\"dropdown-item notify-item\"\n                                    key={i + '-profile-menu'}\n                                >\n                                    <i className={classNames(menu.icon, 'me-1')}></i>\n                                    <span>{menu.label}</span>\n                                </Link>\n                            </React.Fragment>\n                        );\n                    })}\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default ProfileDropdown;\n"]},"metadata":{},"sourceType":"module"}