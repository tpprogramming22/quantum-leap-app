{"ast":null,"code":"import React,{forwardRef}from'react';import DatePicker from'react-datepicker';import classNames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";/* Datepicker with Input */var DatepickerInput=/*#__PURE__*/forwardRef(function(props,ref){var onDateValueChange=function onDateValueChange(){console.log('date value changed');};return/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:classNames('form-control',props.inputClass),onClick:props.onClick,value:props.value,onChange:onDateValueChange,ref:ref});});/* Datepicker with Addon Input */var DatepickerInputWithAddon=/*#__PURE__*/forwardRef(function(props,ref){return/*#__PURE__*/_jsxs(\"div\",{className:\"input-group position-relative\",ref:ref,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:classNames('form-control',props.inputClass),onClick:props.onClick,value:props.value,readOnly:true}),/*#__PURE__*/_jsx(\"span\",{className:\"input-group-text\",children:/*#__PURE__*/_jsx(\"i\",{className:\"ri-calendar-event-fill\"})})]});});var AdmintoDatepicker=function AdmintoDatepicker(props){// handle custom input\nvar input=(props.hideAddon||false)===true?/*#__PURE__*/_jsx(DatepickerInput,{inputClass:props.inputClass}):/*#__PURE__*/_jsx(DatepickerInputWithAddon,{inputClass:props.inputClass});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(DatePicker,{calendarClassName:props.calendarClassName||'shadow',selectsRange:props.selectsRange,startDate:props.startDate,endDate:props.endDate,selected:props.value,onChange:function onChange(date){return props.onChange(date);},customInput:input,timeIntervals:props.tI,showTimeSelect:props.showTimeSelect,timeFormat:props.timeFormat||'hh:mm a',timeCaption:props.timeCaption,dateFormat:props.dateFormat||'MM/dd/yyyy',minDate:props.minDate,maxDate:props.maxDate,monthsShown:props.monthsShown,showTimeSelectOnly:props.showTimeSelectOnly,inline:props.inline,autoComplete:\"off\"})});};export default AdmintoDatepicker;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/Datepicker.tsx"],"names":["React","forwardRef","DatePicker","classNames","DatepickerInput","props","ref","onDateValueChange","console","log","inputClass","onClick","value","DatepickerInputWithAddon","AdmintoDatepicker","input","hideAddon","calendarClassName","selectsRange","startDate","endDate","date","onChange","tI","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,C,6IASA,2BACA,GAAMC,CAAAA,eAAe,cAAGH,UAAU,CAAyC,SAACI,KAAD,CAAQC,GAAR,CAAgB,CACvF,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5BC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACH,CAFD,CAGA,mBACI,cACI,IAAI,CAAC,MADT,CAEI,SAAS,CAAEN,UAAU,CAAC,cAAD,CAAiBE,KAAK,CAACK,UAAvB,CAFzB,CAGI,OAAO,CAAEL,KAAK,CAACM,OAHnB,CAII,KAAK,CAAEN,KAAK,CAACO,KAJjB,CAKI,QAAQ,CAAEL,iBALd,CAMI,GAAG,CAAED,GANT,EADJ,CAUH,CAdiC,CAAlC,CAgBA,iCACA,GAAMO,CAAAA,wBAAwB,cAAGZ,UAAU,CAAyC,SAACI,KAAD,CAAQC,GAAR,qBAChF,aAAK,SAAS,CAAC,+BAAf,CAA+C,GAAG,CAAEA,GAApD,wBACI,cACI,IAAI,CAAC,MADT,CAEI,SAAS,CAAEH,UAAU,CAAC,cAAD,CAAiBE,KAAK,CAACK,UAAvB,CAFzB,CAGI,OAAO,CAAEL,KAAK,CAACM,OAHnB,CAII,KAAK,CAAEN,KAAK,CAACO,KAJjB,CAKI,QAAQ,KALZ,EADJ,cAQI,aAAM,SAAS,CAAC,kBAAhB,uBACI,UAAG,SAAS,CAAC,wBAAb,EADJ,EARJ,GADgF,EAAzC,CAA3C,CAoCA,GAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACT,KAAD,CAAmC,CACzD;AACA,GAAMU,CAAAA,KAAK,CACP,CAACV,KAAK,CAACW,SAAN,EAAmB,KAApB,IAA+B,IAA/B,cACI,KAAC,eAAD,EAAiB,UAAU,CAAEX,KAAK,CAACK,UAAnC,EADJ,cAGI,KAAC,wBAAD,EAA0B,UAAU,CAAEL,KAAK,CAACK,UAA5C,EAJR,CAOA,mBACI,sCAEI,KAAC,UAAD,EACI,iBAAiB,CAAEL,KAAK,CAACY,iBAAN,EAA2B,QADlD,CAEI,YAAY,CAAEZ,KAAK,CAACa,YAFxB,CAGI,SAAS,CAAEb,KAAK,CAACc,SAHrB,CAII,OAAO,CAAEd,KAAK,CAACe,OAJnB,CAKI,QAAQ,CAAEf,KAAK,CAACO,KALpB,CAMI,QAAQ,CAAE,kBAACS,IAAD,QAAUhB,CAAAA,KAAK,CAACiB,QAAN,CAAeD,IAAf,CAAV,EANd,CAOI,WAAW,CAAEN,KAPjB,CAQI,aAAa,CAAEV,KAAK,CAACkB,EARzB,CASI,cAAc,CAAElB,KAAK,CAACmB,cAT1B,CAUI,UAAU,CAAEnB,KAAK,CAACoB,UAAN,EAAoB,SAVpC,CAWI,WAAW,CAAEpB,KAAK,CAACqB,WAXvB,CAYI,UAAU,CAAErB,KAAK,CAACsB,UAAN,EAAoB,YAZpC,CAaI,OAAO,CAAEtB,KAAK,CAACuB,OAbnB,CAcI,OAAO,CAAEvB,KAAK,CAACwB,OAdnB,CAeI,WAAW,CAAExB,KAAK,CAACyB,WAfvB,CAgBI,kBAAkB,CAAEzB,KAAK,CAAC0B,kBAhB9B,CAiBI,MAAM,CAAE1B,KAAK,CAAC2B,MAjBlB,CAkBI,YAAY,CAAC,KAlBjB,EAFJ,EADJ,CAyBH,CAlCD,CAoCA,cAAelB,CAAAA,iBAAf","sourcesContent":["import React, { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\n\ntype DatepickerInputProps = {\n    onClick?: () => void;\n    value?: string;\n    inputClass: string;\n    children?: React.ReactNode;\n};\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>((props, ref) => {\n    const onDateValueChange = () => {\n        console.log('date value changed');\n    };\n    return (\n        <input\n            type=\"text\"\n            className={classNames('form-control', props.inputClass)}\n            onClick={props.onClick}\n            value={props.value}\n            onChange={onDateValueChange}\n            ref={ref}\n        />\n    );\n});\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<HTMLInputElement, DatepickerInputProps>((props, ref) => (\n    <div className=\"input-group position-relative\" ref={ref}>\n        <input\n            type=\"text\"\n            className={classNames('form-control', props.inputClass)}\n            onClick={props.onClick}\n            value={props.value}\n            readOnly\n        />\n        <span className=\"input-group-text\">\n            <i className=\"ri-calendar-event-fill\"></i>\n        </span>\n    </div>\n));\n\ntype AdmintoDatepickerProps = {\n    value?: Date;\n    selectsRange?: boolean;\n    startDate?: Date;\n    endDate?: Date;\n    calendarClassName?: string;\n    onChange: (date: any) => void;\n    hideAddon?: boolean;\n    inputClass?: string;\n    dateFormat?: string;\n    minDate?: Date;\n    maxDate?: Date;\n    showTimeSelect?: boolean;\n    tI?: number;\n    timeCaption?: string;\n    timeFormat?: string;\n    showTimeSelectOnly?: boolean;\n    monthsShown?: number;\n    inline?: boolean;\n};\n\nconst AdmintoDatepicker = (props: AdmintoDatepickerProps) => {\n    // handle custom input\n    const input =\n        (props.hideAddon || false) === true ? (\n            <DatepickerInput inputClass={props.inputClass!} />\n        ) : (\n            <DatepickerInputWithAddon inputClass={props.inputClass!} />\n        );\n\n    return (\n        <>\n            {/* date picker control */}\n            <DatePicker\n                calendarClassName={props.calendarClassName || 'shadow'}\n                selectsRange={props.selectsRange}\n                startDate={props.startDate}\n                endDate={props.endDate}\n                selected={props.value}\n                onChange={(date) => props.onChange(date)}\n                customInput={input}\n                timeIntervals={props.tI}\n                showTimeSelect={props.showTimeSelect}\n                timeFormat={props.timeFormat || 'hh:mm a'}\n                timeCaption={props.timeCaption}\n                dateFormat={props.dateFormat || 'MM/dd/yyyy'}\n                minDate={props.minDate}\n                maxDate={props.maxDate}\n                monthsShown={props.monthsShown}\n                showTimeSelectOnly={props.showTimeSelectOnly}\n                inline={props.inline}\n                autoComplete=\"off\"\n            />\n        </>\n    );\n};\n\nexport default AdmintoDatepicker;\n"]},"metadata":{},"sourceType":"module"}