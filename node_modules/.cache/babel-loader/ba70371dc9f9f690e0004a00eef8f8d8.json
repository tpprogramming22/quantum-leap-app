{"ast":null,"code":"import _toConsumableArray from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import classNames from'classnames';import{useState}from'react';import{Card,Alert}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CustomDismissibleAlerts=function CustomDismissibleAlerts(){var _useState=useState(['primary','secondary','success','danger','warning','info','light','dark']),_useState2=_slicedToArray(_useState,2),colors=_useState2[0],setColors=_useState2[1];/*\n     * handle close\n     */var handleClose=function handleClose(index){var list=_toConsumableArray(colors);list.splice(index,1);setColors(list);};return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"header-title\",children:\"Dismissing Custom Background Alert\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"sub-header\",children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\".bg-*\"}),\",\",/*#__PURE__*/_jsx(\"code\",{children:\".border-0\"}),\" classes.\"]}),colors.map(function(color,index){return/*#__PURE__*/_jsxs(Alert,{variant:color,className:classNames('bg-'+color,color==='light'?'text-dark':'text-white',color==='dark'?'text-light':'text-white'),onClose:function onClose(){return handleClose(index);},dismissible:true,children:[/*#__PURE__*/_jsxs(\"strong\",{children:[color,\" - \"]}),\" A simple \",color,\" alert\\u2014check it out!\"]},index.toString());})]})});};export default CustomDismissibleAlerts;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Notifications/CustomDismissibleAlerts.tsx"],"names":["classNames","useState","Card","Alert","CustomDismissibleAlerts","colors","setColors","handleClose","index","list","splice","map","color","toString"],"mappings":"8RAAA,MAAOA,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,IAAT,CAAeC,KAAf,KAA4B,iBAA5B,C,wFAEA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,EAAM,CAClC,cAA4BH,QAAQ,CAAW,CAC3C,SAD2C,CAE3C,WAF2C,CAG3C,SAH2C,CAI3C,QAJ2C,CAK3C,SAL2C,CAM3C,MAN2C,CAO3C,OAP2C,CAQ3C,MAR2C,CAAX,CAApC,wCAAOI,MAAP,eAAeC,SAAf,eAWA;AACJ;AACA,OACI,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAmB,CACnC,GAAMC,CAAAA,IAAI,oBAAOJ,MAAP,CAAV,CACAI,IAAI,CAACC,MAAL,CAAYF,KAAZ,CAAmB,CAAnB,EACAF,SAAS,CAACG,IAAD,CAAT,CACH,CAJD,CAMA,mBACI,KAAC,IAAD,wBACI,MAAC,IAAD,CAAM,IAAN,yBACI,WAAI,SAAS,CAAC,cAAd,gDADJ,cAEI,WAAG,SAAS,CAAC,YAAb,+BACQ,+BADR,kBAC2B,mCAD3B,eAFJ,CAMKJ,MAAM,CAACM,GAAP,CAAW,SAACC,KAAD,CAAQJ,KAAR,CAAkB,CAC1B,mBACI,MAAC,KAAD,EACI,OAAO,CAAEI,KADb,CAEI,SAAS,CAAEZ,UAAU,CACjB,MAAQY,KADS,CAEjBA,KAAK,GAAK,OAAV,CAAoB,WAApB,CAAkC,YAFjB,CAGjBA,KAAK,GAAK,MAAV,CAAmB,YAAnB,CAAkC,YAHjB,CAFzB,CAQI,OAAO,CAAE,yBAAML,CAAAA,WAAW,CAACC,KAAD,CAAjB,EARb,CASI,WAAW,KATf,wBAWI,0BAASI,KAAT,SAXJ,cAW0CA,KAX1C,+BAOSJ,KAAK,CAACK,QAAN,EAPT,CADJ,CAeH,CAhBA,CANL,GADJ,EADJ,CA4BH,CAjDD,CAmDA,cAAeT,CAAAA,uBAAf","sourcesContent":["import classNames from 'classnames';\nimport { useState } from 'react';\nimport { Card, Alert } from 'react-bootstrap';\n\nconst CustomDismissibleAlerts = () => {\n    const [colors, setColors] = useState<string[]>([\n        'primary',\n        'secondary',\n        'success',\n        'danger',\n        'warning',\n        'info',\n        'light',\n        'dark',\n    ]);\n\n    /*\n     * handle close\n     */\n    const handleClose = (index: number) => {\n        const list = [...colors];\n        list.splice(index, 1);\n        setColors(list);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Dismissing Custom Background Alert</h4>\n                <p className=\"sub-header\">\n                    Use <code>.bg-*</code>,<code>.border-0</code> classes.\n                </p>\n\n                {colors.map((color, index) => {\n                    return (\n                        <Alert\n                            variant={color}\n                            className={classNames(\n                                'bg-' + color,\n                                color === 'light' ? 'text-dark' : 'text-white',\n                                color === 'dark' ? 'text-light' : 'text-white'\n                            )}\n                            key={index.toString()}\n                            onClose={() => handleClose(index)}\n                            dismissible\n                        >\n                            <strong>{color} - </strong> A simple {color} alertâ€”check it out!\n                        </Alert>\n                    );\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CustomDismissibleAlerts;\n"]},"metadata":{},"sourceType":"module"}