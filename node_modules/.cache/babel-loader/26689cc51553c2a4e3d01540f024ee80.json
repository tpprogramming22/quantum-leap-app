{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Spinners/ButtonSpinners.tsx\";\nimport { Button, Card, Col, Row } from 'react-bootstrap'; // component\n\nimport Spinner from '../../../components/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ButtonSpinners = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-0 header-title\",\n        children: \"Buttons spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted mb-4\",\n        children: \"Use spinners within buttons to indicate an action is currently processing or taking place. You may also swap the text out of the spinner element and utilize button text as needed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-list mb-1 mb-sm-0\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              disabled: true,\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                className: \"spinner-border-sm\",\n                tag: \"span\",\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"visually-hidden\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              disabled: true,\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                className: \"spinner-border-sm me-1\",\n                tag: \"span\",\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 33\n              }, this), \"Loading...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-list\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              disabled: true,\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                className: \"spinner-grow-sm\",\n                tag: \"span\",\n                color: \"white\",\n                type: \"grow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"visually-hidden\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              disabled: true,\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                className: \"spinner-grow-sm me-1\",\n                tag: \"span\",\n                color: \"white\",\n                type: \"grow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this), \"Loading...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ButtonSpinners;\nexport default ButtonSpinners;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonSpinners\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Spinners/ButtonSpinners.tsx"],"names":["Button","Card","Col","Row","Spinner","ButtonSpinners"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI,QAAC,GAAD;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,QAAQ,MAAhC;AAAA,sCACI,QAAC,OAAD;AAAS,gBAAA,SAAS,EAAC,mBAAnB;AAAuC,gBAAA,GAAG,EAAC,MAA3C;AAAkD,gBAAA,KAAK,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAM,gBAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,QAAQ,MAAhC;AAAA,sCACI,QAAC,OAAD;AAAS,gBAAA,SAAS,EAAC,wBAAnB;AAA4C,gBAAA,GAAG,EAAC,MAAhD;AAAuD,gBAAA,KAAK,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,QAAQ,MAAhC;AAAA,sCACI,QAAC,OAAD;AAAS,gBAAA,SAAS,EAAC,iBAAnB;AAAqC,gBAAA,GAAG,EAAC,MAAzC;AAAgD,gBAAA,KAAK,EAAC,OAAtD;AAA8D,gBAAA,IAAI,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAM,gBAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,QAAQ,MAAhC;AAAA,sCACI,QAAC,OAAD;AAAS,gBAAA,SAAS,EAAC,sBAAnB;AAA0C,gBAAA,GAAG,EAAC,MAA9C;AAAqD,gBAAA,KAAK,EAAC,OAA3D;AAAmE,gBAAA,IAAI,EAAC;AAAxE;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH,CAxCD;;KAAMA,c;AA0CN,eAAeA,cAAf","sourcesContent":["import { Button, Card, Col, Row } from 'react-bootstrap';\n\n// component\nimport Spinner from '../../../components/Spinner';\n\nconst ButtonSpinners = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mt-0 header-title\">Buttons spinner</h4>\n                <p className=\"text-muted mb-4\">\n                    Use spinners within buttons to indicate an action is currently processing or taking place. You may\n                    also swap the text out of the spinner element and utilize button text as needed.\n                </p>\n                <Row>\n                    <Col md={6}>\n                        <div className=\"button-list mb-1 mb-sm-0\">\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-border-sm\" tag=\"span\" color=\"white\" />\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Button>\n\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />\n                                Loading...\n                            </Button>\n                        </div>\n                    </Col>\n                    <Col md={6}>\n                        <div className=\"button-list\">\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-grow-sm\" tag=\"span\" color=\"white\" type=\"grow\" />\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Button>\n\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-grow-sm me-1\" tag=\"span\" color=\"white\" type=\"grow\" />\n                                Loading...\n                            </Button>\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ButtonSpinners;\n"]},"metadata":{},"sourceType":"module"}