{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/topbar/TopbarSearch.tsx\";\nimport { Link } from 'react-router-dom';\nimport Select, { components } from 'react-select';\nimport classNames from 'classnames'; // utils\n\nimport { groupByFields } from '../../utils'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*\n * get options\n */\nconst optionGetter = option => {\n  switch (option.type) {\n    case 'report':\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: classNames('dropdown-item', 'notify-item', 'p-0'),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: classNames(option.icon, 'me-1')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n\n    case 'help':\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: classNames('dropdown-item', 'notify-item', 'p-0'),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: classNames(option.icon, 'me-1')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n\n    case 'settings':\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: classNames('dropdown-item', 'notify-item', 'p-0'),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: classNames(option.icon, 'me-1')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n\n    case 'title':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-header noti-title p-0\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"text-overflow mb-2 text-uppercase\",\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n\n    case 'users':\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: \"dropdown-item notify-item px-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: option.userDetails.avatar,\n            alt: \"\",\n            className: \"d-flex me-2 rounded-circle\",\n            height: \"32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"drop-username m-0 font-14\",\n              children: [option.userDetails.firstname, \" \", option.userDetails.lastname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-subinfo font-12 mb-0\",\n              children: option.userDetails.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n\n    default:\n      return;\n  }\n};\n/*\n * filter options\n */\n\n\nconst formateOptions = options => {\n  const grouppedData = groupByFields(options, item => {\n    return [item.type];\n  });\n  let formattedOptions = [];\n  let count = 0;\n\n  for (let i = 0; i < grouppedData.length; i++) {\n    for (let j = 0; j < grouppedData[i].length; j++) {\n      if (grouppedData[i][j].type === 'users' && count === 0) {\n        grouppedData[i].splice(j, 0, {\n          label: 'Users',\n          value: 'title',\n          type: 'title'\n        });\n        count = 1;\n      }\n\n      formattedOptions.push(grouppedData[i][j]);\n    }\n  }\n\n  return formattedOptions;\n};\n/* custon indicator */\n\n\nconst IndicatorsContainer = props => {\n  const {\n    handleClick\n  } = props.selectProps;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    children: /*#__PURE__*/_jsxDEV(components.IndicatorsContainer, { ...props,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onMouseDown: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fe-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n/* custom menu list */\n\n\n_c = IndicatorsContainer;\n\nconst MenuList = props => {\n  const {\n    options\n  } = props.selectProps;\n  return /*#__PURE__*/_jsxDEV(components.MenuList, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-header noti-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"text-overflow mb-2\",\n        children: [\"Found \", options.length < 10 ? ('0' + options.length).slice(-2) : options.length, \" results\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n/* fomates the option label */\n\n\n_c2 = MenuList;\n\nconst handleFormatOptionLabel = option => {\n  const formattedOption = optionGetter(option);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: formattedOption\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 12\n  }, this);\n};\n\nconst TopbarSearch = _ref => {\n  let {\n    options\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Select, {\n    components: {\n      IndicatorsContainer,\n      MenuList\n    },\n    placeholder: 'Search...',\n    options: formateOptions(options),\n    formatOptionLabel: handleFormatOptionLabel,\n    isOptionDisabled: option => option.type === 'title',\n    maxMenuHeight: 350,\n    isSearchable: true,\n    isClearable: true,\n    name: \"search-app\",\n    className: \"app-search\",\n    classNamePrefix: \"react-select\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = TopbarSearch;\nexport default TopbarSearch;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IndicatorsContainer\");\n$RefreshReg$(_c2, \"MenuList\");\n$RefreshReg$(_c3, \"TopbarSearch\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/topbar/TopbarSearch.tsx"],"names":["Link","Select","components","classNames","groupByFields","optionGetter","option","type","icon","label","userDetails","avatar","firstname","lastname","position","formateOptions","options","grouppedData","item","formattedOptions","count","i","length","j","splice","value","push","IndicatorsContainer","props","handleClick","selectProps","MenuList","slice","children","handleFormatOptionLabel","formattedOption","TopbarSearch"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom';\nimport Select, { components } from 'react-select';\nimport classNames from 'classnames';\n\n// utils\nimport { groupByFields } from '../../utils';\n\n// types\nimport { SearchOptions } from '../../layouts/types';\n\ntype TopbarSearchProps = {\n    options: SearchOptions[];\n};\n\n/*\n * get options\n */\nconst optionGetter = (option: SearchOptions) => {\n    switch (option.type) {\n        case 'report':\n            return (\n                <Link to=\"#\" className={classNames('dropdown-item', 'notify-item', 'p-0')}>\n                    <i className={classNames(option.icon, 'me-1')}></i>\n                    <span>{option.label}</span>\n                </Link>\n            );\n        case 'help':\n            return (\n                <Link to=\"#\" className={classNames('dropdown-item', 'notify-item', 'p-0')}>\n                    <i className={classNames(option.icon, 'me-1')}></i>\n                    <span>{option.label}</span>\n                </Link>\n            );\n        case 'settings':\n            return (\n                <Link to=\"#\" className={classNames('dropdown-item', 'notify-item', 'p-0')}>\n                    <i className={classNames(option.icon, 'me-1')}></i>\n                    <span>{option.label}</span>\n                </Link>\n            );\n        case 'title':\n            return (\n                <div className=\"dropdown-header noti-title p-0\">\n                    <h6 className=\"text-overflow mb-2 text-uppercase\">Users</h6>\n                </div>\n            );\n        case 'users':\n            return (\n                <Link to=\"#\" className=\"dropdown-item notify-item px-0\">\n                    <div className=\"d-flex\">\n                        <img\n                            src={option.userDetails!.avatar}\n                            alt=\"\"\n                            className=\"d-flex me-2 rounded-circle\"\n                            height=\"32\"\n                        />\n                        <div>\n                            <h5 className=\"drop-username m-0 font-14\">\n                                {option.userDetails!.firstname} {option.userDetails!.lastname}\n                            </h5>\n                            <span className=\"user-subinfo font-12 mb-0\">{option.userDetails!.position}</span>\n                        </div>\n                    </div>\n                </Link>\n            );\n\n        default:\n            return;\n    }\n};\n\n/*\n * filter options\n */\nconst formateOptions = (options: SearchOptions[]) => {\n    const grouppedData = groupByFields(options, (item: SearchOptions) => {\n        return [item.type];\n    });\n\n    let formattedOptions = [];\n    let count = 0;\n\n    for (let i = 0; i < grouppedData.length; i++) {\n        for (let j = 0; j < grouppedData[i].length; j++) {\n            if (grouppedData[i][j].type === 'users' && count === 0) {\n                grouppedData[i].splice(j, 0, {\n                    label: 'Users',\n                    value: 'title',\n                    type: 'title',\n                });\n                count = 1;\n            }\n            formattedOptions.push(grouppedData[i][j]);\n        }\n    }\n    return formattedOptions;\n};\n\n/* custon indicator */\nconst IndicatorsContainer = (props: any) => {\n    const { handleClick } = props.selectProps;\n    return (\n        <div style={{}}>\n            <components.IndicatorsContainer {...props}>\n                <button className=\"btn\" onMouseDown={handleClick}>\n                    <i className=\"fe-search\"></i>\n                </button>\n            </components.IndicatorsContainer>\n        </div>\n    );\n};\n\n/* custom menu list */\nconst MenuList = (props: any) => {\n    const { options } = props.selectProps;\n\n    return (\n        <components.MenuList {...props}>\n            {/* menu header */}\n            <div className=\"dropdown-header noti-title\">\n                <h5 className=\"text-overflow mb-2\">\n                    Found {options.length < 10 ? ('0' + options.length).slice(-2) : options.length} results\n                </h5>\n            </div>\n            {props.children}\n        </components.MenuList>\n    );\n};\n\n/* fomates the option label */\nconst handleFormatOptionLabel = (option: SearchOptions) => {\n    const formattedOption = optionGetter(option);\n    return <div>{formattedOption}</div>;\n};\n\nconst TopbarSearch = ({ options }: TopbarSearchProps) => {\n    return (\n        <Select\n            components={{ IndicatorsContainer, MenuList }}\n            placeholder={'Search...'}\n            options={formateOptions(options)}\n            formatOptionLabel={handleFormatOptionLabel}\n            isOptionDisabled={(option) => option.type === 'title'}\n            maxMenuHeight={350}\n            isSearchable\n            isClearable\n            name=\"search-app\"\n            className=\"app-search\"\n            classNamePrefix=\"react-select\"\n        />\n    );\n};\n\nexport default TopbarSearch;\n"]},"metadata":{},"sourceType":"module"}