{"ast":null,"code":"import React, { useEffect, useRef } from 'react';\nimport { useTypeaheadContext } from '../../core/Context'; // IE doesn't seem to get the composite computed value (eg: 'padding',\n// 'borderStyle', etc.), so generate these from the individual values.\n\nfunction interpolateStyle(styles, attr) {\n  var subattr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ''; // Title-case the sub-attribute.\n\n  if (subattr) {\n    /* eslint-disable-next-line no-param-reassign */\n    subattr = subattr.replace(subattr[0], subattr[0].toUpperCase());\n  }\n\n  return ['Top', 'Right', 'Bottom', 'Left'].map(function (dir) {\n    return styles[\"\".concat(attr).concat(dir).concat(subattr)];\n  }).join(' ');\n}\n\nfunction copyStyles(inputNode, hintNode) {\n  var inputStyle = window.getComputedStyle(inputNode);\n  /* eslint-disable no-param-reassign */\n\n  hintNode.style.borderStyle = interpolateStyle(inputStyle, 'border', 'style');\n  hintNode.style.borderWidth = interpolateStyle(inputStyle, 'border', 'width');\n  hintNode.style.fontSize = inputStyle.fontSize;\n  hintNode.style.height = inputStyle.height;\n  hintNode.style.lineHeight = inputStyle.lineHeight;\n  hintNode.style.margin = interpolateStyle(inputStyle, 'margin');\n  hintNode.style.padding = interpolateStyle(inputStyle, 'padding');\n  /* eslint-enable no-param-reassign */\n}\n\nexport var useHint = function useHint() {\n  var _useTypeaheadContext = useTypeaheadContext(),\n      hintText = _useTypeaheadContext.hintText,\n      inputNode = _useTypeaheadContext.inputNode;\n\n  var hintRef = useRef(null);\n  useEffect(function () {\n    if (inputNode && hintRef.current) {\n      copyStyles(inputNode, hintRef.current);\n    }\n  });\n  return {\n    hintRef: hintRef,\n    hintText: hintText\n  };\n};\n\nvar Hint = function Hint(_ref) {\n  var children = _ref.children,\n      className = _ref.className;\n\n  var _useHint = useHint(),\n      hintRef = _useHint.hintRef,\n      hintText = _useHint.hintText;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: {\n      display: 'flex',\n      flex: 1,\n      height: '100%',\n      position: 'relative'\n    }\n  }, children, /*#__PURE__*/React.createElement(\"input\", {\n    \"aria-hidden\": true,\n    className: \"rbt-input-hint\",\n    ref: hintRef,\n    readOnly: true,\n    style: {\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      boxShadow: 'none',\n      color: 'rgba(0, 0, 0, 0.54)',\n      left: 0,\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      width: '100%'\n    },\n    tabIndex: -1,\n    value: hintText\n  }));\n};\n\nexport default Hint;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/react-bootstrap-typeahead/es/components/Hint/Hint.js"],"names":["React","useEffect","useRef","useTypeaheadContext","interpolateStyle","styles","attr","subattr","arguments","length","undefined","replace","toUpperCase","map","dir","concat","join","copyStyles","inputNode","hintNode","inputStyle","window","getComputedStyle","style","borderStyle","borderWidth","fontSize","height","lineHeight","margin","padding","useHint","_useTypeaheadContext","hintText","hintRef","current","Hint","_ref","children","className","_useHint","createElement","display","flex","position","ref","readOnly","backgroundColor","borderColor","boxShadow","color","left","pointerEvents","top","width","tabIndex","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useTypeaheadContext } from '../../core/Context'; // IE doesn't seem to get the composite computed value (eg: 'padding',\n// 'borderStyle', etc.), so generate these from the individual values.\n\nfunction interpolateStyle(styles, attr) {\n  var subattr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  // Title-case the sub-attribute.\n  if (subattr) {\n    /* eslint-disable-next-line no-param-reassign */\n    subattr = subattr.replace(subattr[0], subattr[0].toUpperCase());\n  }\n\n  return ['Top', 'Right', 'Bottom', 'Left'].map(function (dir) {\n    return styles[\"\".concat(attr).concat(dir).concat(subattr)];\n  }).join(' ');\n}\n\nfunction copyStyles(inputNode, hintNode) {\n  var inputStyle = window.getComputedStyle(inputNode);\n  /* eslint-disable no-param-reassign */\n\n  hintNode.style.borderStyle = interpolateStyle(inputStyle, 'border', 'style');\n  hintNode.style.borderWidth = interpolateStyle(inputStyle, 'border', 'width');\n  hintNode.style.fontSize = inputStyle.fontSize;\n  hintNode.style.height = inputStyle.height;\n  hintNode.style.lineHeight = inputStyle.lineHeight;\n  hintNode.style.margin = interpolateStyle(inputStyle, 'margin');\n  hintNode.style.padding = interpolateStyle(inputStyle, 'padding');\n  /* eslint-enable no-param-reassign */\n}\n\nexport var useHint = function useHint() {\n  var _useTypeaheadContext = useTypeaheadContext(),\n      hintText = _useTypeaheadContext.hintText,\n      inputNode = _useTypeaheadContext.inputNode;\n\n  var hintRef = useRef(null);\n  useEffect(function () {\n    if (inputNode && hintRef.current) {\n      copyStyles(inputNode, hintRef.current);\n    }\n  });\n  return {\n    hintRef: hintRef,\n    hintText: hintText\n  };\n};\n\nvar Hint = function Hint(_ref) {\n  var children = _ref.children,\n      className = _ref.className;\n\n  var _useHint = useHint(),\n      hintRef = _useHint.hintRef,\n      hintText = _useHint.hintText;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: {\n      display: 'flex',\n      flex: 1,\n      height: '100%',\n      position: 'relative'\n    }\n  }, children, /*#__PURE__*/React.createElement(\"input\", {\n    \"aria-hidden\": true,\n    className: \"rbt-input-hint\",\n    ref: hintRef,\n    readOnly: true,\n    style: {\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      boxShadow: 'none',\n      color: 'rgba(0, 0, 0, 0.54)',\n      left: 0,\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      width: '100%'\n    },\n    tabIndex: -1,\n    value: hintText\n  }));\n};\n\nexport default Hint;"]},"metadata":{},"sourceType":"module"}