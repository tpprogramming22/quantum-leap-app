{"ast":null,"code":"// app constants\nimport { LayoutTypes, LayoutColor, LayoutWidth, MenuPositions, SideBarTheme, SideBarTypes, TopbarTheme } from '../../constants/layout'; // utils\n\nimport { getLayoutConfigs } from '../../utils'; // actions\n\n// action constants\nimport { LayoutActionTypes } from './constants';\nconst INIT_STATE = {\n  layoutColor: LayoutColor.LAYOUT_COLOR_LIGHT,\n  layoutType: LayoutTypes.LAYOUT_VERTICAL,\n  layoutWidth: LayoutWidth.LAYOUT_WIDTH_FLUID,\n  menuPosition: MenuPositions.MENU_POSITION_FIXED,\n  leftSideBarTheme: SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT,\n  leftSideBarType: SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT,\n  showSidebarUserInfo: true,\n  topbarTheme: TopbarTheme.TOPBAR_THEME_LIGHT,\n  isOpenRightSideBar: false\n};\n\nconst Layout = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LayoutActionTypes.CHANGE_LAYOUT:\n      return { ...state,\n        layoutType: action.payload\n      };\n\n    case LayoutActionTypes.CHANGE_LAYOUT_COLOR:\n      return { ...state,\n        layoutColor: action.payload,\n        ...getLayoutConfigs(action.type, action.payload)\n      };\n\n    case LayoutActionTypes.CHANGE_LAYOUT_WIDTH:\n      return { ...state,\n        layoutWidth: action.payload,\n        ...getLayoutConfigs(action.type, action.payload)\n      };\n\n    case LayoutActionTypes.CHANGE_MENU_POSITIONS:\n      return { ...state,\n        menuPosition: action.payload\n      };\n\n    case LayoutActionTypes.CHANGE_SIDEBAR_THEME:\n      return { ...state,\n        leftSideBarTheme: action.payload\n      };\n\n    case LayoutActionTypes.CHANGE_SIDEBAR_TYPE:\n      return { ...state,\n        leftSideBarType: action.payload\n      };\n\n    case LayoutActionTypes.TOGGLE_SIDEBAR_USER_INFO:\n      return { ...state,\n        showSidebarUserInfo: action.payload\n      };\n\n    case LayoutActionTypes.CHANGE_TOPBAR_THEME:\n      return { ...state,\n        topbarTheme: action.payload\n      };\n\n    case LayoutActionTypes.SHOW_RIGHT_SIDEBAR:\n      return { ...state,\n        isOpenRightSideBar: true\n      };\n\n    case LayoutActionTypes.HIDE_RIGHT_SIDEBAR:\n      return { ...state,\n        isOpenRightSideBar: false\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/redux/layout/reducers.ts"],"names":["LayoutTypes","LayoutColor","LayoutWidth","MenuPositions","SideBarTheme","SideBarTypes","TopbarTheme","getLayoutConfigs","LayoutActionTypes","INIT_STATE","layoutColor","LAYOUT_COLOR_LIGHT","layoutType","LAYOUT_VERTICAL","layoutWidth","LAYOUT_WIDTH_FLUID","menuPosition","MENU_POSITION_FIXED","leftSideBarTheme","LEFT_SIDEBAR_THEME_LIGHT","leftSideBarType","LEFT_SIDEBAR_TYPE_DEFAULT","showSidebarUserInfo","topbarTheme","TOPBAR_THEME_LIGHT","isOpenRightSideBar","Layout","state","action","type","CHANGE_LAYOUT","payload","CHANGE_LAYOUT_COLOR","CHANGE_LAYOUT_WIDTH","CHANGE_MENU_POSITIONS","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_SIDEBAR_USER_INFO","CHANGE_TOPBAR_THEME","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR"],"mappings":"AAAA;AACA,SACIA,WADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,YALJ,EAMIC,YANJ,EAOIC,WAPJ,QAQO,wBARP,C,CAUA;;AACA,SAASC,gBAAT,QAAiC,aAAjC,C,CAEA;;AAGA;AACA,SAASC,iBAAT,QAAoD,aAApD;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,WAAW,EAAET,WAAW,CAACU,kBADV;AAEfC,EAAAA,UAAU,EAAEZ,WAAW,CAACa,eAFT;AAGfC,EAAAA,WAAW,EAAEZ,WAAW,CAACa,kBAHV;AAIfC,EAAAA,YAAY,EAAEb,aAAa,CAACc,mBAJb;AAKfC,EAAAA,gBAAgB,EAAEd,YAAY,CAACe,wBALhB;AAMfC,EAAAA,eAAe,EAAEf,YAAY,CAACgB,yBANf;AAOfC,EAAAA,mBAAmB,EAAE,IAPN;AAQfC,EAAAA,WAAW,EAAEjB,WAAW,CAACkB,kBARV;AASfC,EAAAA,kBAAkB,EAAE;AATL,CAAnB;;AAYA,MAAMC,MAAM,GAAG,YAA6F;AAAA,MAA5FC,KAA4F,uEAAlElB,UAAkE;AAAA,MAAtDmB,MAAsD;;AACxG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKrB,iBAAiB,CAACsB,aAAvB;AACI,aAAO,EACH,GAAGH,KADA;AAEHf,QAAAA,UAAU,EAAEgB,MAAM,CAACG;AAFhB,OAAP;;AAIJ,SAAKvB,iBAAiB,CAACwB,mBAAvB;AACI,aAAO,EACH,GAAGL,KADA;AAEHjB,QAAAA,WAAW,EAAEkB,MAAM,CAACG,OAFjB;AAGH,WAAGxB,gBAAgB,CAACqB,MAAM,CAACC,IAAR,EAAcD,MAAM,CAACG,OAArB;AAHhB,OAAP;;AAKJ,SAAKvB,iBAAiB,CAACyB,mBAAvB;AACI,aAAO,EACH,GAAGN,KADA;AAEHb,QAAAA,WAAW,EAAEc,MAAM,CAACG,OAFjB;AAGH,WAAGxB,gBAAgB,CAACqB,MAAM,CAACC,IAAR,EAAcD,MAAM,CAACG,OAArB;AAHhB,OAAP;;AAKJ,SAAKvB,iBAAiB,CAAC0B,qBAAvB;AACI,aAAO,EACH,GAAGP,KADA;AAEHX,QAAAA,YAAY,EAAEY,MAAM,CAACG;AAFlB,OAAP;;AAIJ,SAAKvB,iBAAiB,CAAC2B,oBAAvB;AACI,aAAO,EACH,GAAGR,KADA;AAEHT,QAAAA,gBAAgB,EAAEU,MAAM,CAACG;AAFtB,OAAP;;AAIJ,SAAKvB,iBAAiB,CAAC4B,mBAAvB;AACI,aAAO,EACH,GAAGT,KADA;AAEHP,QAAAA,eAAe,EAAEQ,MAAM,CAACG;AAFrB,OAAP;;AAIJ,SAAKvB,iBAAiB,CAAC6B,wBAAvB;AACI,aAAO,EACH,GAAGV,KADA;AAEHL,QAAAA,mBAAmB,EAAEM,MAAM,CAACG;AAFzB,OAAP;;AAIJ,SAAKvB,iBAAiB,CAAC8B,mBAAvB;AACI,aAAO,EACH,GAAGX,KADA;AAEHJ,QAAAA,WAAW,EAAEK,MAAM,CAACG;AAFjB,OAAP;;AAIJ,SAAKvB,iBAAiB,CAAC+B,kBAAvB;AACI,aAAO,EACH,GAAGZ,KADA;AAEHF,QAAAA,kBAAkB,EAAE;AAFjB,OAAP;;AAIJ,SAAKjB,iBAAiB,CAACgC,kBAAvB;AACI,aAAO,EACH,GAAGb,KADA;AAEHF,QAAAA,kBAAkB,EAAE;AAFjB,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAtDR;AAwDH,CAzDD;;KAAMD,M;AA2DN,eAAeA,MAAf","sourcesContent":["// app constants\nimport {\n    LayoutTypes,\n    LayoutColor,\n    LayoutWidth,\n    MenuPositions,\n    SideBarTheme,\n    SideBarTypes,\n    TopbarTheme,\n} from '../../constants/layout';\n\n// utils\nimport { getLayoutConfigs } from '../../utils';\n\n// actions\nimport { LayoutActionType } from './actions';\n\n// action constants\nimport { LayoutActionTypes, LayoutStateTypes } from './constants';\n\nconst INIT_STATE = {\n    layoutColor: LayoutColor.LAYOUT_COLOR_LIGHT,\n    layoutType: LayoutTypes.LAYOUT_VERTICAL,\n    layoutWidth: LayoutWidth.LAYOUT_WIDTH_FLUID,\n    menuPosition: MenuPositions.MENU_POSITION_FIXED,\n    leftSideBarTheme: SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT,\n    leftSideBarType: SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT,\n    showSidebarUserInfo: true,\n    topbarTheme: TopbarTheme.TOPBAR_THEME_LIGHT,\n    isOpenRightSideBar: false,\n};\n\nconst Layout = (state: LayoutStateTypes = INIT_STATE, action: LayoutActionType<string | boolean | null>) => {\n    switch (action.type) {\n        case LayoutActionTypes.CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_LAYOUT_COLOR:\n            return {\n                ...state,\n                layoutColor: action.payload,\n                ...getLayoutConfigs(action.type, action.payload!),\n            };\n        case LayoutActionTypes.CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n                ...getLayoutConfigs(action.type, action.payload!),\n            };\n        case LayoutActionTypes.CHANGE_MENU_POSITIONS:\n            return {\n                ...state,\n                menuPosition: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case LayoutActionTypes.TOGGLE_SIDEBAR_USER_INFO:\n            return {\n                ...state,\n                showSidebarUserInfo: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_TOPBAR_THEME:\n            return {\n                ...state,\n                topbarTheme: action.payload,\n            };\n        case LayoutActionTypes.SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                isOpenRightSideBar: true,\n            };\n        case LayoutActionTypes.HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                isOpenRightSideBar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}