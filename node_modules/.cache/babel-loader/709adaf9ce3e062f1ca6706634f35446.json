{"ast":null,"code":"import _toConsumableArray from \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n\n/**\n * React Router DOM v6.9.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_detectErrorBoundary, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { createRouter, createBrowserHistory, createHashHistory, ErrorResponse, stripBasename, UNSAFE_warning, UNSAFE_invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\n\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  var searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    var _iterator = _createForOfIteratorHelper(defaultSearchParams.keys()),\n        _step;\n\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n\n        if (!searchParams.has(key)) {\n          defaultSearchParams.getAll(key).forEach(function (value) {\n            searchParams.append(key, value);\n          });\n        }\n      };\n\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return searchParams;\n}\n\nfunction getFormSubmissionInfo(target, defaultAction, options) {\n  var method;\n  var action;\n  var encType;\n  var formData;\n\n  if (isFormElement(target)) {\n    var submissionTrigger = options.submissionTrigger;\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    var form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        var _iterator2 = _createForOfIteratorHelper(target),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n                name = _step2$value[0],\n                value = _step2$value[1];\n\n            formData.append(name, value);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else if (target != null) {\n        for (var _i = 0, _Object$keys = Object.keys(target); _i < _Object$keys.length; _i++) {\n          var _name = _Object$keys[_i];\n          formData.append(_name, target[_name]);\n        }\n      }\n    }\n  }\n\n  var _window$location = window.location,\n      protocol = _window$location.protocol,\n      host = _window$location.host;\n  var url = new URL(action, protocol + \"//\" + host);\n  return {\n    url: url,\n    method: method.toLowerCase(),\n    encType: encType,\n    formData: formData\n  };\n}\n\nvar _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n    _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n    _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\", \"preventScrollReset\"]; //#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: routes,\n    detectErrorBoundary: UNSAFE_detectErrorBoundary\n  }).initialize();\n}\n\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: routes,\n    detectErrorBoundary: UNSAFE_detectErrorBoundary\n  }).initialize();\n}\n\nfunction parseHydrationData() {\n  var _window;\n\n  var state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n\n  return state;\n}\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  var entries = Object.entries(errors);\n  var serialized = {};\n\n  for (var _i2 = 0, _entries = entries; _i2 < _entries.length; _i2++) {\n    var _entries$_i = _slicedToArray(_entries[_i2], 2),\n        key = _entries$_i[0],\n        val = _entries$_i[1];\n\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      var error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref) {\n  var basename = _ref.basename,\n      children = _ref.children,\n      window = _ref.window;\n  var historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\n\nfunction HashRouter(_ref2) {\n  var basename = _ref2.basename,\n      children = _ref2.children,\n      window = _ref2.window;\n  var historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState3 = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\n\nfunction HistoryRouter(_ref3) {\n  var basename = _ref3.basename,\n      children = _ref3.children,\n      history = _ref3.history;\n\n  var _React$useState5 = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      state = _React$useState6[0],\n      setState = _React$useState6[1];\n\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  var onClick = _ref4.onClick,\n      relative = _ref4.relative,\n      reloadDocument = _ref4.reloadDocument,\n      replace = _ref4.replace,\n      state = _ref4.state,\n      target = _ref4.target,\n      to = _ref4.to,\n      preventScrollReset = _ref4.preventScrollReset,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  var _React$useContext = React.useContext(UNSAFE_NavigationContext),\n      basename = _React$useContext.basename; // Rendered into <a href> for absolute URLs\n\n\n  var absoluteHref;\n  var isExternal = false;\n\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to; // Only check for external origins client-side\n\n    if (isBrowser) {\n      var currentUrl = new URL(window.location.href);\n      var targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n      var path = stripBasename(targetUrl.pathname, basename);\n\n      if (targetUrl.origin === currentUrl.origin && path != null) {\n        // Strip the protocol/origin/basename for same-origin absolute URLs\n        to = path + targetUrl.search + targetUrl.hash;\n      } else {\n        isExternal = true;\n      }\n    }\n  } // Rendered into <a href> for relative URLs\n\n\n  var href = useHref(to, {\n    relative: relative\n  });\n  var internalOnClick = useLinkClickHandler(to, {\n    replace: replace,\n    state: state,\n    target: target,\n    preventScrollReset: preventScrollReset,\n    relative: relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nvar NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  var _ref5$ariaCurrent = _ref5[\"aria-current\"],\n      ariaCurrentProp = _ref5$ariaCurrent === void 0 ? \"page\" : _ref5$ariaCurrent,\n      _ref5$caseSensitive = _ref5.caseSensitive,\n      caseSensitive = _ref5$caseSensitive === void 0 ? false : _ref5$caseSensitive,\n      _ref5$className = _ref5.className,\n      classNameProp = _ref5$className === void 0 ? \"\" : _ref5$className,\n      _ref5$end = _ref5.end,\n      end = _ref5$end === void 0 ? false : _ref5$end,\n      styleProp = _ref5.style,\n      to = _ref5.to,\n      children = _ref5.children,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  var path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  var location = useLocation();\n  var routerState = React.useContext(UNSAFE_DataRouterStateContext);\n\n  var _React$useContext2 = React.useContext(UNSAFE_NavigationContext),\n      navigator = _React$useContext2.navigator;\n\n  var toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  var locationPathname = location.pathname;\n  var nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  var isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  var className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive: isActive,\n      isPending: isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  var style = typeof styleProp === \"function\" ? styleProp({\n    isActive: isActive,\n    isPending: isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive: isActive,\n    isPending: isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nvar Form = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nvar FormImpl = /*#__PURE__*/React.forwardRef(function (_ref6, forwardedRef) {\n  var reloadDocument = _ref6.reloadDocument,\n      replace = _ref6.replace,\n      _ref6$method = _ref6.method,\n      method = _ref6$method === void 0 ? defaultMethod : _ref6$method,\n      action = _ref6.action,\n      onSubmit = _ref6.onSubmit,\n      fetcherKey = _ref6.fetcherKey,\n      routeId = _ref6.routeId,\n      relative = _ref6.relative,\n      preventScrollReset = _ref6.preventScrollReset,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  var submit = useSubmitImpl(fetcherKey, routeId);\n  var formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  var formAction = useFormAction(action, {\n    relative: relative\n  });\n\n  var submitHandler = function submitHandler(event) {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    var submitter = event.nativeEvent.submitter;\n    var submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace: replace,\n      relative: relative,\n      preventScrollReset: preventScrollReset\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  var getKey = _ref7.getKey,\n      storageKey = _ref7.storageKey;\n  useScrollRestoration({\n    getKey: getKey,\n    storageKey: storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmitImpl\"] = \"useSubmitImpl\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  var ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  var state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  var _ref9 = _temp === void 0 ? {} : _temp,\n      target = _ref9.target,\n      replaceProp = _ref9.replace,\n      state = _ref9.state,\n      preventScrollReset = _ref9.preventScrollReset,\n      relative = _ref9.relative;\n\n  var navigate = useNavigate();\n  var location = useLocation();\n  var path = useResolvedPath(to, {\n    relative: relative\n  });\n  return React.useCallback(function (event) {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      var replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace: replace,\n        state: state,\n        preventScrollReset: preventScrollReset,\n        relative: relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  var defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  var hasSetSearchParamsRef = React.useRef(false);\n  var location = useLocation();\n  var searchParams = React.useMemo(function () {\n    return (// Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current)\n    );\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = React.useCallback(function (nextInit, navigateOptions) {\n    var newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey, routeId) {\n  var _useDataRouterContext = useDataRouterContext(DataRouterHook.UseSubmitImpl),\n      router = _useDataRouterContext.router;\n\n  var defaultAction = useFormAction();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    var _getFormSubmissionInf = getFormSubmissionInfo(target, defaultAction, options),\n        method = _getFormSubmissionInf.method,\n        encType = _getFormSubmissionInf.encType,\n        formData = _getFormSubmissionInf.formData,\n        url = _getFormSubmissionInf.url;\n\n    var href = url.pathname + url.search;\n    var opts = {\n      replace: options.replace,\n      preventScrollReset: options.preventScrollReset,\n      formData: formData,\n      formMethod: method,\n      formEncType: encType\n    };\n\n    if (fetcherKey) {\n      !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href, opts);\n    } else {\n      router.navigate(href, opts);\n    }\n  }, [defaultAction, router, fetcherKey, routeId]);\n}\n\nfunction useFormAction(action, _temp2) {\n  var _ref10 = _temp2 === void 0 ? {} : _temp2,\n      relative = _ref10.relative;\n\n  var _React$useContext3 = React.useContext(UNSAFE_NavigationContext),\n      basename = _React$useContext3.basename;\n\n  var routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n\n  var _routeContext$matches = routeContext.matches.slice(-1),\n      _routeContext$matches2 = _slicedToArray(_routeContext$matches, 1),\n      match = _routeContext$matches2[0]; // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n\n  var path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative: relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n\n  var location = useLocation();\n\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      var params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  var FetcherForm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nvar fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  var _useDataRouterContext2 = useDataRouterContext(DataRouterHook.UseFetcher),\n      router = _useDataRouterContext2.router;\n\n  var route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  var routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n\n  var _React$useState7 = React.useState(function () {\n    return String(++fetcherId);\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 1),\n      fetcherKey = _React$useState8[0];\n\n  var _React$useState9 = React.useState(function () {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 1),\n      Form = _React$useState10[0];\n\n  var _React$useState11 = React.useState(function () {\n    return function (href) {\n      !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n      !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href);\n    };\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 1),\n      load = _React$useState12[0];\n\n  var submit = useSubmitImpl(fetcherKey, routeId);\n  var fetcher = router.getFetcher(fetcherKey);\n  var fetcherWithComponents = React.useMemo(function () {\n    return _extends({\n      Form: Form,\n      submit: submit,\n      load: load\n    }, fetcher);\n  }, [fetcher, Form, submit, load]);\n  React.useEffect(function () {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return function () {\n      if (!router) {\n        console.warn(\"No fetcher available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\n\nfunction useFetchers() {\n  var state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return _toConsumableArray(state.fetchers.values());\n}\n\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  var _ref11 = _temp3 === void 0 ? {} : _temp3,\n      getKey = _ref11.getKey,\n      storageKey = _ref11.storageKey;\n\n  var _useDataRouterContext3 = useDataRouterContext(DataRouterHook.UseScrollRestoration),\n      router = _useDataRouterContext3.router;\n\n  var _useDataRouterState = useDataRouterState(DataRouterStateHook.UseScrollRestoration),\n      restoreScrollPosition = _useDataRouterState.restoreScrollPosition,\n      preventScrollReset = _useDataRouterState.preventScrollReset;\n\n  var location = useLocation();\n  var matches = useMatches();\n  var navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(function () {\n    window.history.scrollRestoration = \"manual\";\n    return function () {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(function () {\n    if (navigation.state === \"idle\") {\n      var key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(function () {\n      try {\n        var sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(function () {\n      var disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, function () {\n        return window.scrollY;\n      }, getKey);\n      return function () {\n        return disableScrollRestoration && disableScrollRestoration();\n      };\n    }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(function () {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        var el = document.getElementById(location.hash.slice(1));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction useBeforeUnload(callback, options) {\n  var _ref12 = options || {},\n      capture = _ref12.capture;\n\n  React.useEffect(function () {\n    var opts = capture != null ? {\n      capture: capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return function () {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction usePageHide(callback, options) {\n  var _ref13 = options || {},\n      capture = _ref13.capture;\n\n  React.useEffect(function () {\n    var opts = capture != null ? {\n      capture: capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return function () {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n\n\nfunction usePrompt(_ref8) {\n  var when = _ref8.when,\n      message = _ref8.message;\n  var blocker = unstable_useBlocker(when);\n  React.useEffect(function () {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n  React.useEffect(function () {\n    if (blocker.state === \"blocked\") {\n      var proceed = window.confirm(message);\n\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n} //#endregion\n\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/react-router-dom/dom.ts","/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/react-router-dom/index.tsx"],"names":["defaultMethod","defaultEncType","object","isHtmlElement","event","target","isModifiedEvent","init","Array","value","memo","v","searchParams","createSearchParams","defaultSearchParams","getFormSubmissionInfo","defaultAction","options","isFormElement","submissionTrigger","method","action","encType","formData","isButtonElement","isInputElement","form","name","Object","host","window","url","protocol","basename","opts","history","createBrowserHistory","hydrationData","parseHydrationData","routes","detectErrorBoundary","createHashHistory","state","errors","deserializeErrors","entries","serialized","val","error","historyRef","React","v5Compat","location","children","navigationType","navigator","HistoryRouter","isBrowser","ABSOLUTE_URL_REGEX","Link","preventScrollReset","rest","ref","isExternal","absoluteHref","currentUrl","targetUrl","to","path","stripBasename","href","useHref","relative","internalOnClick","useLinkClickHandler","replace","onClick","NavLink","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","useResolvedPath","useLocation","routerState","toPathname","locationPathname","nextLocationPathname","isActive","isPending","ariaCurrent","styleProp","Form","FormImpl","props","submit","useSubmitImpl","formMethod","formAction","useFormAction","submitHandler","onSubmit","submitter","submitMethod","reloadDocument","ScrollRestoration","storageKey","useScrollRestoration","getKey","DataRouterHook","DataRouterStateHook","hookName","ctx","getDataRouterConsoleError","navigate","useNavigate","shouldProcessLinkClick","replaceProp","createPath","defaultSearchParamsRef","hasSetSearchParamsRef","getSearchParamsForLocation","setSearchParams","newSearchParams","nextInit","useSubmit","router","useDataRouterContext","formEncType","routeId","routeContext","match","params","joinPaths","FetcherForm","fetcherKey","fetcherId","useFetcher","route","String","createFetcherForm","fetcher","fetcherWithComponents","load","console","useFetchers","useDataRouterState","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","matches","useMatches","navigation","useNavigation","usePageHide","key","sessionStorage","JSON","sessionPositions","disableScrollRestoration","restoreScrollPosition","el","document","capture","message","blocker","useBlocker","proceed","setTimeout"],"mappings":"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","sourcesContent":["import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method: method.toLowerCase(), encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_detectErrorBoundary as detectErrorBoundary,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    detectErrorBoundary,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    detectErrorBoundary,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + to)\n          : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as FormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace/preventScrollReset because they are not\n    // navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"preventScrollReset\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n"]},"metadata":{},"sourceType":"module"}