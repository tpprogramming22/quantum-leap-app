{"ast":null,"code":"import _toConsumableArray from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _slicedToArray from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"indeterminate\"];import{useRef,useEffect,forwardRef,useState}from'react';import{useTable,useSortBy,usePagination,useRowSelect,useGlobalFilter,useAsyncDebounce,useExpanded}from'react-table';import classNames from'classnames';// components\nimport Pagination from'./Pagination';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";// Define a default UI for filtering\nvar GlobalFilter=function GlobalFilter(_ref){var preGlobalFilteredRows=_ref.preGlobalFilteredRows,globalFilter=_ref.globalFilter,setGlobalFilter=_ref.setGlobalFilter,searchBoxClass=_ref.searchBoxClass;var count=preGlobalFilteredRows.length;var _useState=useState(globalFilter),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _onChange=useAsyncDebounce(function(value){setGlobalFilter(value||undefined);},200);return/*#__PURE__*/_jsx(\"div\",{className:classNames(searchBoxClass),children:/*#__PURE__*/_jsxs(\"span\",{className:\"d-flex align-items-center\",children:[\"Search :\",' ',/*#__PURE__*/_jsx(\"input\",{type:\"search\",value:value||'',onChange:function onChange(e){setValue(e.target.value);_onChange(e.target.value);},placeholder:\"\".concat(count,\" records...\"),className:\"form-control w-auto ms-1\"})]})});};var IndeterminateCheckbox=/*#__PURE__*/forwardRef(function(_ref2,ref){var indeterminate=_ref2.indeterminate,rest=_objectWithoutProperties(_ref2,_excluded);var defaultRef=useRef();var resolvedRef=ref||defaultRef;useEffect(function(){resolvedRef.current.indeterminate=indeterminate;},[resolvedRef,indeterminate]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-check\",children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({type:\"checkbox\",className:\"form-check-input\",ref:resolvedRef},rest)),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"form-check-input\",className:\"form-check-label\"})]})});});var Table=function Table(props){var isSearchable=props['isSearchable']||false;var isSortable=props['isSortable']||false;var pagination=props['pagination']||false;var isSelectable=props['isSelectable']||false;var isExpandable=props['isExpandable']||false;var sizePerPageList=props['sizePerPageList']||[];var otherProps={};if(isSearchable){otherProps['useGlobalFilter']=useGlobalFilter;}if(isSortable){otherProps['useSortBy']=useSortBy;}if(isExpandable){otherProps['useExpanded']=useExpanded;}if(pagination){otherProps['usePagination']=usePagination;}if(isSelectable){otherProps['useRowSelect']=useRowSelect;}var dataTable=useTable({columns:props['columns'],data:props['data'],initialState:{pageSize:props['pageSize']||10}},otherProps.hasOwnProperty('useGlobalFilter')&&otherProps['useGlobalFilter'],otherProps.hasOwnProperty('useSortBy')&&otherProps['useSortBy'],otherProps.hasOwnProperty('useExpanded')&&otherProps['useExpanded'],otherProps.hasOwnProperty('usePagination')&&otherProps['usePagination'],otherProps.hasOwnProperty('useRowSelect')&&otherProps['useRowSelect'],function(hooks){isSelectable&&hooks.visibleColumns.push(function(columns){return[// Let's make a column for selection\n{id:'selection',// The header can use the table's getToggleAllRowsSelectedProps method\n// to render a checkbox\nHeader:function Header(_ref3){var getToggleAllPageRowsSelectedProps=_ref3.getToggleAllPageRowsSelectedProps;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(IndeterminateCheckbox,_objectSpread({},getToggleAllPageRowsSelectedProps()))});},// The cell can use the individual row's getToggleRowSelectedProps method\n// to the render a checkbox\nCell:function Cell(_ref4){var row=_ref4.row;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(IndeterminateCheckbox,_objectSpread({},row.getToggleRowSelectedProps()))});}}].concat(_toConsumableArray(columns));});isExpandable&&hooks.visibleColumns.push(function(columns){return[// Let's make a column for selection\n{// Build our expander column\nid:'expander',// Make sure it has an ID\nHeader:function Header(_ref5){var getToggleAllRowsExpandedProps=_ref5.getToggleAllRowsExpandedProps,isAllRowsExpanded=_ref5.isAllRowsExpanded;return/*#__PURE__*/_jsx(\"span\",_objectSpread(_objectSpread({},getToggleAllRowsExpandedProps()),{},{children:isAllRowsExpanded?'-':'+'}));},Cell:function Cell(_ref6){var row=_ref6.row;return(// Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n// to build the toggle for expanding a row\nrow.canExpand?/*#__PURE__*/_jsx(\"span\",_objectSpread(_objectSpread({},row.getToggleRowExpandedProps({style:{// We can even use the row.depth property\n// and paddingLeft to indicate the depth\n// of the row\npaddingLeft:\"\".concat(row.depth*2,\"rem\")}})),{},{children:row.isExpanded?'-':'+'})):null);}}].concat(_toConsumableArray(columns));});});var rows=pagination?dataTable.page:dataTable.rows;return/*#__PURE__*/_jsxs(_Fragment,{children:[isSearchable&&/*#__PURE__*/_jsx(GlobalFilter,{preGlobalFilteredRows:dataTable.preGlobalFilteredRows,globalFilter:dataTable.state.globalFilter,setGlobalFilter:dataTable.setGlobalFilter,searchBoxClass:props['searchBoxClass']}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(\"table\",_objectSpread(_objectSpread({},dataTable.getTableProps()),{},{className:classNames('table table-centered react-table',props['tableClass']),children:[/*#__PURE__*/_jsx(\"thead\",{className:props['theadClass'],children:(dataTable.headerGroups||[]).map(function(headerGroup){return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},headerGroup.getHeaderGroupProps()),{},{children:(headerGroup.headers||[]).map(function(column){return/*#__PURE__*/_jsx(\"th\",_objectSpread(_objectSpread({},column.getHeaderProps(column.sort&&column.getSortByToggleProps())),{},{className:classNames({sorting_desc:column.isSortedDesc===true,sorting_asc:column.isSortedDesc===false,sortable:column.sort===true}),children:column.render('Header')}));})}));})}),/*#__PURE__*/_jsx(\"tbody\",_objectSpread(_objectSpread({},dataTable.getTableBodyProps()),{},{children:(rows||[]).map(function(row,i){dataTable.prepareRow(row);return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},row.getRowProps()),{},{children:(row.cells||[]).map(function(cell){return/*#__PURE__*/_jsx(\"td\",_objectSpread(_objectSpread({},cell.getCellProps([{className:cell.column.className}])),{},{children:cell.render('Cell')}));})}));})}))]}))}),pagination&&/*#__PURE__*/_jsx(Pagination,{tableProps:dataTable,sizePerPageList:sizePerPageList})]});};export default Table;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/Table.tsx"],"names":["useRef","useEffect","forwardRef","useState","useTable","useSortBy","usePagination","useRowSelect","useGlobalFilter","useAsyncDebounce","useExpanded","classNames","Pagination","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","searchBoxClass","count","length","value","setValue","onChange","undefined","e","target","IndeterminateCheckbox","ref","indeterminate","rest","defaultRef","resolvedRef","current","Table","props","isSearchable","isSortable","pagination","isSelectable","isExpandable","sizePerPageList","otherProps","dataTable","columns","data","initialState","pageSize","hasOwnProperty","hooks","visibleColumns","push","id","Header","getToggleAllPageRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getToggleAllRowsExpandedProps","isAllRowsExpanded","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","isExpanded","rows","page","state","getTableProps","headerGroups","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","sort","getSortByToggleProps","sorting_desc","isSortedDesc","sorting_asc","sortable","render","getTableBodyProps","i","prepareRow","getRowProps","cells","cell","getCellProps","className"],"mappings":"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","sourcesContent":["import { useRef, useEffect, forwardRef, useState } from 'react';\nimport {\n    useTable,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    useGlobalFilter,\n    useAsyncDebounce,\n    useExpanded,\n} from 'react-table';\nimport classNames from 'classnames';\n\n// components\nimport Pagination from './Pagination';\n\ntype GlobalFilterProps = {\n    preGlobalFilteredRows: any;\n    globalFilter: any;\n    setGlobalFilter: any;\n    searchBoxClass: any;\n};\n\n// Define a default UI for filtering\nconst GlobalFilter = ({ preGlobalFilteredRows, globalFilter, setGlobalFilter, searchBoxClass }: GlobalFilterProps) => {\n    const count = preGlobalFilteredRows.length;\n    const [value, setValue] = useState<any>(globalFilter);\n    const onChange = useAsyncDebounce((value) => {\n        setGlobalFilter(value || undefined);\n    }, 200);\n\n    return (\n        <div className={classNames(searchBoxClass)}>\n            <span className=\"d-flex align-items-center\">\n                Search :{' '}\n                <input\n                    type=\"search\"\n                    value={value || ''}\n                    onChange={(e: any) => {\n                        setValue(e.target.value);\n                        onChange(e.target.value);\n                    }}\n                    placeholder={`${count} records...`}\n                    className=\"form-control w-auto ms-1\"\n                />\n            </span>\n        </div>\n    );\n};\n\ntype IndeterminateCheckboxProps = {\n    indeterminate: any;\n    children?: React.ReactNode;\n};\n\nconst IndeterminateCheckbox = forwardRef<HTMLInputElement, IndeterminateCheckboxProps>(\n    ({ indeterminate, ...rest }, ref) => {\n        const defaultRef = useRef();\n        const resolvedRef: any = ref || defaultRef;\n\n        useEffect(() => {\n            resolvedRef.current.indeterminate = indeterminate;\n        }, [resolvedRef, indeterminate]);\n\n        return (\n            <>\n                <div className=\"form-check\">\n                    <input type=\"checkbox\" className=\"form-check-input\" ref={resolvedRef} {...rest} />\n                    <label htmlFor=\"form-check-input\" className=\"form-check-label\"></label>\n                </div>\n            </>\n        );\n    }\n);\n\ntype TableProps = {\n    isSearchable?: boolean;\n    isSortable?: boolean;\n    pagination?: boolean;\n    isSelectable?: boolean;\n    isExpandable?: boolean;\n    sizePerPageList?: {\n        text: string;\n        value: number;\n    }[];\n    columns: {\n        Header: string;\n        accessor: string;\n        sort?: boolean;\n        Cell?: any;\n        className?: string;\n    }[];\n    data: any[];\n    pageSize?: number;\n    searchBoxClass?: string;\n    tableClass?: string;\n    theadClass?: string;\n};\n\nconst Table = (props: TableProps) => {\n    const isSearchable = props['isSearchable'] || false;\n    const isSortable = props['isSortable'] || false;\n    const pagination = props['pagination'] || false;\n    const isSelectable = props['isSelectable'] || false;\n    const isExpandable = props['isExpandable'] || false;\n    const sizePerPageList = props['sizePerPageList'] || [];\n\n    let otherProps: any = {};\n\n    if (isSearchable) {\n        otherProps['useGlobalFilter'] = useGlobalFilter;\n    }\n    if (isSortable) {\n        otherProps['useSortBy'] = useSortBy;\n    }\n    if (isExpandable) {\n        otherProps['useExpanded'] = useExpanded;\n    }\n    if (pagination) {\n        otherProps['usePagination'] = usePagination;\n    }\n    if (isSelectable) {\n        otherProps['useRowSelect'] = useRowSelect;\n    }\n\n    const dataTable = useTable(\n        {\n            columns: props['columns'],\n            data: props['data'],\n            initialState: { pageSize: props['pageSize'] || 10 },\n        },\n        otherProps.hasOwnProperty('useGlobalFilter') && otherProps['useGlobalFilter'],\n        otherProps.hasOwnProperty('useSortBy') && otherProps['useSortBy'],\n        otherProps.hasOwnProperty('useExpanded') && otherProps['useExpanded'],\n        otherProps.hasOwnProperty('usePagination') && otherProps['usePagination'],\n        otherProps.hasOwnProperty('useRowSelect') && otherProps['useRowSelect'],\n        (hooks) => {\n            isSelectable &&\n                hooks.visibleColumns.push((columns: any) => [\n                    // Let's make a column for selection\n                    {\n                        id: 'selection',\n                        // The header can use the table's getToggleAllRowsSelectedProps method\n                        // to render a checkbox\n                        Header: ({ getToggleAllPageRowsSelectedProps }: any) => (\n                            <div>\n                                <IndeterminateCheckbox {...getToggleAllPageRowsSelectedProps()} />\n                            </div>\n                        ),\n                        // The cell can use the individual row's getToggleRowSelectedProps method\n                        // to the render a checkbox\n                        Cell: ({ row }: any) => (\n                            <div>\n                                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                            </div>\n                        ),\n                    },\n                    ...columns,\n                ]);\n\n            isExpandable &&\n                hooks.visibleColumns.push((columns: any) => [\n                    // Let's make a column for selection\n                    {\n                        // Build our expander column\n                        id: 'expander', // Make sure it has an ID\n                        Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }: any) => (\n                            <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? '-' : '+'}</span>\n                        ),\n                        Cell: ({ row }) =>\n                            // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n                            // to build the toggle for expanding a row\n                            row.canExpand ? (\n                                <span\n                                    {...row.getToggleRowExpandedProps({\n                                        style: {\n                                            // We can even use the row.depth property\n                                            // and paddingLeft to indicate the depth\n                                            // of the row\n                                            paddingLeft: `${row.depth * 2}rem`,\n                                        },\n                                    })}\n                                >\n                                    {row.isExpanded ? '-' : '+'}\n                                </span>\n                            ) : null,\n                    },\n                    ...columns,\n                ]);\n        }\n    );\n\n    let rows = pagination ? dataTable.page : dataTable.rows;\n\n    return (\n        <>\n            {isSearchable && (\n                <GlobalFilter\n                    preGlobalFilteredRows={dataTable.preGlobalFilteredRows}\n                    globalFilter={dataTable.state.globalFilter}\n                    setGlobalFilter={dataTable.setGlobalFilter}\n                    searchBoxClass={props['searchBoxClass']}\n                />\n            )}\n\n            <div className=\"table-responsive\">\n                <table\n                    {...dataTable.getTableProps()}\n                    className={classNames('table table-centered react-table', props['tableClass'])}\n                >\n                    <thead className={props['theadClass']}>\n                        {(dataTable.headerGroups || []).map((headerGroup: any) => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {(headerGroup.headers || []).map((column: any) => (\n                                    <th\n                                        {...column.getHeaderProps(column.sort && column.getSortByToggleProps())}\n                                        className={classNames({\n                                            sorting_desc: column.isSortedDesc === true,\n                                            sorting_asc: column.isSortedDesc === false,\n                                            sortable: column.sort === true,\n                                        })}\n                                    >\n                                        {column.render('Header')}\n                                    </th>\n                                ))}\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...dataTable.getTableBodyProps()}>\n                        {(rows || []).map((row: any, i: number) => {\n                            dataTable.prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {(row.cells || []).map((cell: any) => {\n                                        return (\n                                            <td\n                                                {...cell.getCellProps([\n                                                    {\n                                                        className: cell.column.className,\n                                                    },\n                                                ])}\n                                            >\n                                                {cell.render('Cell')}\n                                            </td>\n                                        );\n                                    })}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            {pagination && <Pagination tableProps={dataTable} sizePerPageList={sizePerPageList} />}\n        </>\n    );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}