{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Widgets/StatisticsWidget.tsx\";\nimport { Card, Col, Row } from 'react-bootstrap';\nimport CountUp from 'react-countup';\nimport classNames from 'classnames'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StatisticsWidget = _ref => {\n  let {\n    statisticsWidgets\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: (statisticsWidgets || []).map((statistic, index) => {\n      return /*#__PURE__*/_jsxDEV(Col, {\n        xl: 3,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: classNames('fw-normal', 'text-' + statistic.variant),\n                children: /*#__PURE__*/_jsxDEV(CountUp, {\n                  duration: 3,\n                  start: statistic.stats - 1000 > 0 ? statistic.stats - 1000 : 0,\n                  end: statistic.stats\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 22,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: statistic.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this)\n      }, index.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = StatisticsWidget;\nexport default StatisticsWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatisticsWidget\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Widgets/StatisticsWidget.tsx"],"names":["Card","Col","Row","CountUp","classNames","StatisticsWidget","statisticsWidgets","map","statistic","index","variant","stats","title","toString"],"mappings":";AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;;;AAOA,MAAMC,gBAAgB,GAAG,QAAkD;AAAA,MAAjD;AAAEC,IAAAA;AAAF,GAAiD;AACvE,sBACI,QAAC,GAAD;AAAA,cACK,CAACA,iBAAiB,IAAI,EAAtB,EAA0BC,GAA1B,CAA8B,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACjD,0BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA,+BACI,QAAC,IAAD;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACI;AAAI,gBAAA,SAAS,EAAEL,UAAU,CAAC,WAAD,EAAc,UAAUI,SAAS,CAACE,OAAlC,CAAzB;AAAA,uCACI,QAAC,OAAD;AACI,kBAAA,QAAQ,EAAE,CADd;AAEI,kBAAA,KAAK,EAAEF,SAAS,CAACG,KAAV,GAAkB,IAAlB,GAAyB,CAAzB,GAA6BH,SAAS,CAACG,KAAV,GAAkB,IAA/C,GAAsD,CAFjE;AAGI,kBAAA,GAAG,EAAEH,SAAS,CAACG;AAHnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI;AAAA,0BAAKH,SAAS,CAACI;AAAf;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,SAAwBH,KAAK,CAACI,QAAN,EAAxB;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH,KAnBA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAzBD;;KAAMR,gB;AA2BN,eAAeA,gBAAf","sourcesContent":["import { Card, Col, Row } from 'react-bootstrap';\nimport CountUp from 'react-countup';\nimport classNames from 'classnames';\n\n// types\nimport { Statistic } from './types';\n\ntype StatisticsWidgetProps = {\n    statisticsWidgets: Statistic[];\n};\n\nconst StatisticsWidget = ({ statisticsWidgets }: StatisticsWidgetProps) => {\n    return (\n        <Row>\n            {(statisticsWidgets || []).map((statistic, index) => {\n                return (\n                    <Col xl={3} md={6} key={index.toString()}>\n                        <Card>\n                            <Card.Body>\n                                <div className=\"text-center\">\n                                    <h2 className={classNames('fw-normal', 'text-' + statistic.variant)}>\n                                        <CountUp\n                                            duration={3}\n                                            start={statistic.stats - 1000 > 0 ? statistic.stats - 1000 : 0}\n                                            end={statistic.stats}\n                                        />\n                                    </h2>\n                                    <h5>{statistic.title}</h5>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                );\n            })}\n        </Row>\n    );\n};\n\nexport default StatisticsWidget;\n"]},"metadata":{},"sourceType":"module"}