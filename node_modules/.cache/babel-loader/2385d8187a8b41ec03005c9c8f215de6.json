{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Buttons/ButtonsWithLabels.tsx\";\nimport { Button } from 'react-bootstrap'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ButtonWithLabels = _ref => {\n  let {\n    buttonswithLabels\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"header-title\",\n      children: \"Buttons Labels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sub-header\",\n      children: [\"Put \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"<span>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), \" with class \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \".btn-label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 58\n      }, this), \" and any \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 90\n      }, this), \" inside it. If you want to put icon on right side then add class \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \".btn-label-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 67\n      }, this), \" in\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"<span>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-list\",\n      children: (buttonswithLabels || []).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          variant: item.variant,\n          className: \"waves-effect waves-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-label\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: item.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this), item.variant.charAt(0).toUpperCase() + item.variant.slice(1)]\n        }, index.toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-list\",\n      children: (buttonswithLabels || []).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          variant: item.variant,\n          className: \"waves-effect waves-light\",\n          children: [item.variant.charAt(0).toUpperCase() + item.variant.slice(1), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-label-right\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: item.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)]\n        }, index.toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = ButtonWithLabels;\nexport default ButtonWithLabels;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonWithLabels\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Buttons/ButtonsWithLabels.tsx"],"names":["Button","ButtonWithLabels","buttonswithLabels","map","item","index","variant","icon","charAt","toUpperCase","slice","toString"],"mappings":";AAAA,SAASA,MAAT,QAAuB,iBAAvB,C,CAEA;;;;;AAOA,MAAMC,gBAAgB,GAAG,QAAkD;AAAA,MAAjD;AAAEC,IAAAA;AAAF,GAAiD;AACvE,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,sCACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,+BAC6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD7C,4BAC6E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD7E,oFAEsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFtD,SAEuF,GAFvF,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACK,CAACA,iBAAiB,IAAI,EAAtB,EAA0BC,GAA1B,CAA8B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5C,4BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAED,IAAI,CAACE,OAAtB;AAA+B,UAAA,SAAS,EAAC,0BAAzC;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,WAAhB;AAAA,mCACI;AAAG,cAAA,SAAS,EAAEF,IAAI,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,EAIKH,IAAI,CAACE,OAAL,CAAcE,MAAd,CAAqB,CAArB,EAAwBC,WAAxB,KAAwCL,IAAI,CAACE,OAAL,CAAcI,KAAd,CAAoB,CAApB,CAJ7C;AAAA,WAAyEL,KAAK,CAACM,QAAN,EAAzE;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OATA;AADL;AAAA;AAAA;AAAA;AAAA,YARJ,eAoBI;AAAA;AAAA;AAAA;AAAA,YApBJ,eAqBI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACK,CAACT,iBAAiB,IAAI,EAAtB,EAA0BC,GAA1B,CAA8B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5C,4BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAED,IAAI,CAACE,OAAtB;AAA+B,UAAA,SAAS,EAAC,0BAAzC;AAAA,qBACKF,IAAI,CAACE,OAAL,CAAcE,MAAd,CAAqB,CAArB,EAAwBC,WAAxB,KAAwCL,IAAI,CAACE,OAAL,CAAcI,KAAd,CAAoB,CAApB,CAD7C,eAEI;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA,mCACI;AAAG,cAAA,SAAS,EAAEN,IAAI,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAyEF,KAAK,CAACM,QAAN,EAAzE;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OATA;AADL;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA,kBADJ;AAoCH,CArCD;;KAAMV,gB;AAuCN,eAAeA,gBAAf","sourcesContent":["import { Button } from 'react-bootstrap';\n\n// types\nimport { ButtonsWithLabel } from './types';\n\ntype ButtonWithLabelsProps = {\n    buttonswithLabels: ButtonsWithLabel[];\n};\n\nconst ButtonWithLabels = ({ buttonswithLabels }: ButtonWithLabelsProps) => {\n    return (\n        <>\n            <h4 className=\"header-title\">Buttons Labels</h4>\n            <p className=\"sub-header\">\n                Put <code>&lt;span&gt;</code> with class <code>.btn-label</code> and any <code>icon</code> inside it. If\n                you want to put icon on right side then add class <code>.btn-label-right</code> in{' '}\n                <code>&lt;span&gt;</code>\n            </p>\n\n            <div className=\"button-list\">\n                {(buttonswithLabels || []).map((item, index) => {\n                    return (\n                        <Button variant={item.variant} className=\"waves-effect waves-light\" key={index.toString()}>\n                            <span className=\"btn-label\">\n                                <i className={item.icon}></i>\n                            </span>\n                            {item.variant!.charAt(0).toUpperCase() + item.variant!.slice(1)}\n                        </Button>\n                    );\n                })}\n            </div>\n            <br />\n            <div className=\"button-list\">\n                {(buttonswithLabels || []).map((item, index) => {\n                    return (\n                        <Button variant={item.variant} className=\"waves-effect waves-light\" key={index.toString()}>\n                            {item.variant!.charAt(0).toUpperCase() + item.variant!.slice(1)}\n                            <span className=\"btn-label-right\">\n                                <i className={item.icon}></i>\n                            </span>\n                        </Button>\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default ButtonWithLabels;\n"]},"metadata":{},"sourceType":"module"}