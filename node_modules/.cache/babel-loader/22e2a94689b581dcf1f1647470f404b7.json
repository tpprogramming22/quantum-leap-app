{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/dashboards/DashBoard1/StatisticsChart.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, Dropdown, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StatisticsChart = () => {\n  _s();\n\n  const [scanning, setScanning] = useState(false);\n\n  const handleMeasureNowClick = () => {\n    setScanning(true);\n    setTimeout(() => {\n      setScanning(false);\n    }, 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      outline: 'none',\n      borderRadius: '8px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"float-end\",\n        align: \"end\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          as: \"a\",\n          className: \"cursor-pointer card-drop\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-dots-vertical\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"Another Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"Something Else\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"Separated link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleMeasureNowClick,\n          disabled: scanning,\n          style: {\n            backgroundColor: 'red',\n            color: 'white'\n          },\n          children: scanning ? 'Scanning...' : 'Measure Now'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StatisticsChart, \"Vs+8cpIVhYeVCpv3e9Ka9e1QFwM=\");\n\n_c = StatisticsChart;\nexport default StatisticsChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatisticsChart\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/dashboards/DashBoard1/StatisticsChart.tsx"],"names":["React","useState","Card","Dropdown","Button","StatisticsChart","scanning","setScanning","handleMeasureNowClick","setTimeout","outline","borderRadius","display","justifyContent","backgroundColor","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,QAAuC,iBAAvC;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMO,qBAAqB,GAAG,MAAM;AAClCD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,UAAU,CAAC,MAAM;AACfF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALD;;AAOA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,YAAY,EAAE;AAAjC,KAAb;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,WAApB;AAAgC,QAAA,KAAK,EAAC,KAAtC;AAAA,gCACE,QAAC,QAAD,CAAU,MAAV;AAAiB,UAAA,EAAE,EAAC,GAApB;AAAwB,UAAA,SAAS,EAAC,0BAAlC;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,QAAD,CAAU,IAAV;AAAA,kCACE,QAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAZ;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAEL,qBADX;AAEE,UAAA,QAAQ,EAAEF,QAFZ;AAGE,UAAA,KAAK,EAAE;AAAEQ,YAAAA,eAAe,EAAE,KAAnB;AAA0BC,YAAAA,KAAK,EAAE;AAAjC,WAHT;AAAA,oBAKGT,QAAQ,GAAG,aAAH,GAAmB;AAL9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CArCD;;GAAMD,e;;KAAAA,e;AAuCN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Card, Dropdown, Button } from 'react-bootstrap';\n\nconst StatisticsChart = () => {\n  const [scanning, setScanning] = useState(false);\n\n  const handleMeasureNowClick = () => {\n    setScanning(true);\n    setTimeout(() => {\n      setScanning(false);\n    }, 3000);\n  };\n\n  return (\n    <Card style={{ outline: 'none', borderRadius: '8px' }}>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n            <i className=\"mdi mdi-dots-vertical\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Action</Dropdown.Item>\n            <Dropdown.Item>Another Action</Dropdown.Item>\n            <Dropdown.Item>Something Else</Dropdown.Item>\n            <Dropdown.Item>Separated link</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <Button\n            onClick={handleMeasureNowClick}\n            disabled={scanning}\n            style={{ backgroundColor: 'red', color: 'white' }}\n          >\n            {scanning ? 'Scanning...' : 'Measure Now'}\n          </Button>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StatisticsChart;\n"]},"metadata":{},"sourceType":"module"}