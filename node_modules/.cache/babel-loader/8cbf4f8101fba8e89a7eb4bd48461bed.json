{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/PopoversAndTooltips/DefaultPopovers.tsx\";\nimport { Button, Card, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DefaultPopover = () => {\n  const directions = [{\n    placement: 'top'\n  }, {\n    placement: 'bottom'\n  }, {\n    placement: 'right'\n  }, {\n    placement: 'left'\n  }];\n\n  const popover = /*#__PURE__*/_jsxDEV(Popover, {\n    id: \"popover-direction\",\n    children: /*#__PURE__*/_jsxDEV(Popover.Body, {\n      children: \"And here's some amazing content. It's very engaging. Right?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Popovers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: \"Add small overlays of content, like those on the iPad, to any element for housing secondary information.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-list\",\n        children: [(directions || []).map(item => /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n          trigger: \"click\",\n          placement: item.placement,\n          overlay: /*#__PURE__*/_jsxDEV(Popover, {\n            popper: true,\n            id: `popover-positioned-${item.placement}`,\n            children: /*#__PURE__*/_jsxDEV(Popover.Body, {\n              children: \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"light\",\n            className: \"me-1\",\n            children: [\"Popover on \", item.placement]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, item.placement, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n          trigger: \"focus\",\n          placement: \"right\",\n          overlay: popover,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Dismissible popover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DefaultPopover;\nexport default DefaultPopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultPopover\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/PopoversAndTooltips/DefaultPopovers.tsx"],"names":["Button","Card","OverlayTrigger","Popover","DefaultPopover","directions","placement","popover","map","item"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAqCC,cAArC,EAAqDC,OAArD,QAAoE,iBAApE;;;AAMA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,UAAuB,GAAG,CAC5B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAD4B,EAE5B;AAAEA,IAAAA,SAAS,EAAE;AAAb,GAF4B,EAG5B;AAAEA,IAAAA,SAAS,EAAE;AAAb,GAH4B,EAI5B;AAAEA,IAAAA,SAAS,EAAE;AAAb,GAJ4B,CAAhC;;AAOA,QAAMC,OAAO,gBACT,QAAC,OAAD;AAAS,IAAA,EAAE,EAAC,mBAAZ;AAAA,2BACI,QAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AAMA,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,mBACK,CAACF,UAAU,IAAI,EAAf,EAAmBG,GAAnB,CAAwBC,IAAD,iBACpB,QAAC,cAAD;AACI,UAAA,OAAO,EAAC,OADZ;AAGI,UAAA,SAAS,EAAEA,IAAI,CAACH,SAHpB;AAII,UAAA,OAAO,eACH,QAAC,OAAD;AAAS,YAAA,MAAM,MAAf;AAAgB,YAAA,EAAE,EAAG,sBAAqBG,IAAI,CAACH,SAAU,EAAzD;AAAA,mCACI,QAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALR;AAAA,iCAYI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,OAAhB;AAAwB,YAAA,SAAS,EAAC,MAAlC;AAAA,sCACgBG,IAAI,CAACH,SADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAZJ,WAESG,IAAI,CAACH,SAFd;AAAA;AAAA;AAAA;AAAA,gBADH,CADL,eAoBI,QAAC,cAAD;AAAgB,UAAA,OAAO,EAAC,OAAxB;AAAgC,UAAA,SAAS,EAAC,OAA1C;AAAkD,UAAA,OAAO,EAAEC,OAA3D;AAAA,iCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CAjDD;;KAAMH,c;AAmDN,eAAeA,cAAf","sourcesContent":["import { Button, Card, OverlayProps, OverlayTrigger, Popover } from 'react-bootstrap';\n\ntype Direction = {\n    placement: OverlayProps['placement'];\n};\n\nconst DefaultPopover = () => {\n    const directions: Direction[] = [\n        { placement: 'top' },\n        { placement: 'bottom' },\n        { placement: 'right' },\n        { placement: 'left' },\n    ];\n\n    const popover = (\n        <Popover id=\"popover-direction\">\n            <Popover.Body>And here's some amazing content. It's very engaging. Right?</Popover.Body>\n        </Popover>\n    );\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Popovers</h4>\n                <p className=\"sub-header\">\n                    Add small overlays of content, like those on the iPad, to any element for housing secondary\n                    information.\n                </p>\n                <div className=\"button-list\">\n                    {(directions || []).map((item) => (\n                        <OverlayTrigger\n                            trigger=\"click\"\n                            key={item.placement}\n                            placement={item.placement}\n                            overlay={\n                                <Popover popper id={`popover-positioned-${item.placement}`}>\n                                    <Popover.Body>\n                                        Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\n                                    </Popover.Body>\n                                </Popover>\n                            }\n                        >\n                            <Button variant=\"light\" className=\"me-1\">\n                                Popover on {item.placement}\n                            </Button>\n                        </OverlayTrigger>\n                    ))}\n\n                    <OverlayTrigger trigger=\"focus\" placement=\"right\" overlay={popover}>\n                        <Button>Dismissible popover</Button>\n                    </OverlayTrigger>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DefaultPopover;\n"]},"metadata":{},"sourceType":"module"}