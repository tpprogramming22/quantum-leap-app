{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/chart/ApexChart/StackedAreaChart.tsx\";\nimport Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// StackedAreaChart\nconst StackedAreaChart = () => {\n  // default options\n  const apexAreaChart2Opts = {\n    chart: {\n      height: 422,\n      type: 'area',\n      stacked: true,\n      events: {\n        selection: (chart, e) => {\n          console.log(new Date(e.xaxis.min));\n        }\n      }\n    },\n    colors: ['#35b8e0', '#10c469', '#98a6ad'],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      width: 2,\n      curve: 'smooth'\n    },\n    fill: {\n      gradient: {\n        opacityFrom: 0.6,\n        opacityTo: 0.8\n      }\n    },\n    legend: {\n      position: 'top',\n      horizontalAlign: 'left'\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    grid: {\n      row: {\n        colors: ['transparent', 'transparent'],\n        // takes an array which will be repeated on columns\n        opacity: 0.2\n      },\n      borderColor: '#f7f7f7'\n    },\n    responsive: [{\n      breakpoint: 600,\n      options: {\n        chart: {\n          toolbar: {\n            show: false\n          }\n        }\n      }\n    }]\n  };\n  /*\n   * generate day wise time series\n   */\n\n  const generateDayWiseTimeSeries = (baseval, count, yrange) => {\n    var i = 0;\n    var series = [];\n\n    while (i < count) {\n      var x = baseval;\n      var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n      series.push([x, y]);\n      baseval += 86400000;\n      i++;\n    }\n\n    return series;\n  }; // chart data\n\n\n  const apexAreaChart2Data = [{\n    name: 'South',\n    data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  }, {\n    name: 'North',\n    data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n      min: 10,\n      max: 20\n    })\n  }, {\n    name: 'Central',\n    data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n      min: 10,\n      max: 15\n    })\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"float-end\",\n        align: \"end\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          as: \"a\",\n          className: \"cursor-pointer card-drop\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-dots-vertical\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"Anothther Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"Something Else\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"Separated link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mb-3\",\n        children: \"Stacked Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        options: apexAreaChart2Opts,\n        series: apexAreaChart2Data,\n        type: \"area\",\n        className: \"apex-charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n\n_c = StackedAreaChart;\nexport default StackedAreaChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackedAreaChart\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/chart/ApexChart/StackedAreaChart.tsx"],"names":["Chart","Card","Dropdown","StackedAreaChart","apexAreaChart2Opts","chart","height","type","stacked","events","selection","e","console","log","Date","xaxis","min","colors","dataLabels","enabled","stroke","width","curve","fill","gradient","opacityFrom","opacityTo","legend","position","horizontalAlign","grid","row","opacity","borderColor","responsive","breakpoint","options","toolbar","show","generateDayWiseTimeSeries","baseval","count","yrange","i","series","x","y","Math","floor","random","max","push","apexAreaChart2Data","name","data","getTime"],"mappings":"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","sourcesContent":["import Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// StackedAreaChart\nconst StackedAreaChart = () => {\n    // default options\n    const apexAreaChart2Opts: ApexOptions = {\n        chart: {\n            height: 422,\n            type: 'area',\n            stacked: true,\n            events: {\n                selection: (chart, e) => {\n                    console.log(new Date(e.xaxis.min));\n                },\n            },\n        },\n        colors: ['#35b8e0', '#10c469', '#98a6ad'],\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            width: 2,\n            curve: 'smooth',\n        },\n        fill: {\n            gradient: {\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n            },\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f7f7f7',\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                },\n            },\n        ],\n    };\n\n    /*\n     * generate day wise time series\n     */\n    const generateDayWiseTimeSeries = (baseval: number, count: number, yrange: { min: number; max: number }) => {\n        var i = 0;\n        var series = [];\n        while (i < count) {\n            var x = baseval;\n            var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n            series.push([x, y]);\n            baseval += 86400000;\n            i++;\n        }\n        return series;\n    };\n\n    // chart data\n    const apexAreaChart2Data = [\n        {\n            name: 'South',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 60,\n            }),\n        },\n        {\n            name: 'North',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 20,\n            }),\n        },\n\n        {\n            name: 'Central',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 15,\n            }),\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mb-3\">Stacked Area</h4>\n                <Chart options={apexAreaChart2Opts} series={apexAreaChart2Data} type=\"area\" className=\"apex-charts\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StackedAreaChart;\n"]},"metadata":{},"sourceType":"module"}