{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/dashboards/DashBoard1/RevenueChart.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RevenueChart = () => {\n  _s();\n\n  const [series, setSeries] = useState([{\n    name: 'Glucose Levels',\n    type: 'line',\n    data: [5, 6, 7, 8, 9, 10, 11]\n  }]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const randomData = series[0].data.map(() => Math.floor(Math.random() * 7) + 5);\n      setSeries([{ ...series[0],\n        data: randomData\n      }]);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const options = {\n    chart: {\n      height: 350,\n      type: 'line',\n      toolbar: {\n        show: false\n      },\n      stacked: false,\n      zoom: {\n        enabled: false\n      }\n    },\n    stroke: {\n      curve: 'smooth',\n      width: [3]\n    },\n    dataLabels: {\n      enabled: false\n    },\n    legend: {\n      show: false\n    },\n    fill: {\n      type: 'solid',\n      opacity: 1\n    },\n    colors: ['#ff0000'],\n    xaxis: {\n      categories: ['4:00pm', '4:10pm', '4:20pm', '4:30pm', '4:40pm', '4:50pm', '5:00pm'],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        style: {\n          colors: '#adb5bd'\n        }\n      }\n    },\n    yaxis: {\n      tickAmount: 6,\n      min: 5,\n      max: 11,\n      forceNiceScale: true,\n      labels: {\n        style: {\n          colors: '#adb5bd'\n        },\n        formatter: value => {\n          return value.toFixed(0);\n        }\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        top: 0,\n        bottom: 0\n      }\n    },\n    tooltip: {\n      theme: 'dark'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"float-end\",\n        align: \"end\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          as: \"a\",\n          className: \"cursor-pointer card-drop\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-dots-vertical\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"Another Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"Something Else\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: \"Separated link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mt-0\",\n        children: \"Glucose Levels (mmol/L)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dir: \"ltr\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          options: options,\n          series: series,\n          type: \"line\",\n          height: 268,\n          className: \"apex-charts mt-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RevenueChart, \"UmuTqhcB87SshpqpGLi2t7k0tJE=\");\n\n_c = RevenueChart;\nexport default RevenueChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"RevenueChart\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/dashboards/DashBoard1/RevenueChart.tsx"],"names":["React","useEffect","useState","Card","Dropdown","Chart","RevenueChart","series","setSeries","name","type","data","interval","setInterval","randomData","map","Math","floor","random","clearInterval","options","chart","height","toolbar","show","stacked","zoom","enabled","stroke","curve","width","dataLabels","legend","fill","opacity","colors","xaxis","categories","axisBorder","axisTicks","labels","style","yaxis","tickAmount","min","max","forceNiceScale","formatter","value","toFixed","grid","padding","top","bottom","tooltip","theme"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\n\nconst RevenueChart = () => {\n  const [series, setSeries] = useState([\n    {\n      name: 'Glucose Levels',\n      type: 'line',\n      data: [5, 6, 7, 8, 9, 10, 11],\n    },\n  ]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const randomData = series[0].data.map(() =>\n        Math.floor(Math.random() * 7) + 5\n      );\n      setSeries([\n        {\n          ...series[0],\n          data: randomData,\n        },\n      ]);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const options: ApexOptions = {\n    chart: {\n      height: 350,\n      type: 'line',\n      toolbar: {\n        show: false,\n      },\n      stacked: false,\n      zoom: {\n        enabled: false,\n      },\n    },\n    stroke: {\n      curve: 'smooth',\n      width: [3],\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    legend: {\n      show: false,\n    },\n    fill: {\n      type: 'solid',\n      opacity: 1,\n    },\n    colors: ['#ff0000'],\n    xaxis: {\n      categories: ['4:00pm', '4:10pm', '4:20pm', '4:30pm', '4:40pm', '4:50pm', '5:00pm'],\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n      labels: {\n        style: {\n          colors: '#adb5bd',\n        },\n      },\n    },\n    yaxis: {\n      tickAmount: 6,\n      min: 5,\n      max: 11,\n      forceNiceScale: true,\n      labels: {\n        style: {\n          colors: '#adb5bd',\n        },\n        formatter: (value) => {\n          return value.toFixed(0);\n        },\n      },\n    },\n    grid: {\n      show: false,\n      padding: {\n        top: 0,\n        bottom: 0,\n      },\n    },\n    tooltip: {\n      theme: 'dark',\n    },\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n            <i className=\"mdi mdi-dots-vertical\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Action</Dropdown.Item>\n            <Dropdown.Item>Another Action</Dropdown.Item>\n            <Dropdown.Item>Something Else</Dropdown.Item>\n            <Dropdown.Item>Separated link</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h4 className=\"header-title mt-0\">Glucose Levels (mmol/L)</h4>\n\n        <div dir=\"ltr\">\n          <Chart\n            options={options}\n            series={series}\n            type=\"line\"\n            height={268}\n            className=\"apex-charts mt-2\"\n          />\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RevenueChart;\n"]},"metadata":{},"sourceType":"module"}