{"ast":null,"code":"import _slicedToArray from\"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Badge,Dropdown}from'react-bootstrap';import{Link}from'react-router-dom';import classNames from'classnames';// hooks\nimport{useToggle}from'../../hooks';// components\nimport Scrollbar from'../Scrollbar';// dummy data\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NotificationDropdown=function NotificationDropdown(_ref){var notifications=_ref.notifications;var _useToggle=useToggle(),_useToggle2=_slicedToArray(_useToggle,3),isOpen=_useToggle2[0],show=_useToggle2[1],hide=_useToggle2[2];/*\n     * toggle apps-dropdown\n     */var toggleDropdown=function toggleDropdown(){isOpen?hide():show();};return/*#__PURE__*/_jsxs(Dropdown,{show:isOpen,onToggle:toggleDropdown,children:[/*#__PURE__*/_jsxs(Dropdown.Toggle,{variant:\"\",as:\"a\",className:\"nav-link waves-effect waves-light\",onClick:toggleDropdown,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fe-bell noti-icon\"}),/*#__PURE__*/_jsx(Badge,{bg:\"danger\",className:\"rounded-circle noti-icon-badge\",children:\"9\"})]}),/*#__PURE__*/_jsx(Dropdown.Menu,{align:\"end\",className:\"dropdown-lg\",children:/*#__PURE__*/_jsxs(\"div\",{onClick:toggleDropdown,children:[/*#__PURE__*/_jsx(Dropdown.Item,{as:\"div\",className:\"noti-title\",children:/*#__PURE__*/_jsxs(\"h5\",{className:\"m-0\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"float-end\",children:/*#__PURE__*/_jsx(Link,{to:\"#\",className:\"text-dark\",children:/*#__PURE__*/_jsx(\"small\",{children:\"Clear All\"})})}),\"Notification\"]})}),/*#__PURE__*/_jsx(Scrollbar,{className:\"noti-scroll\",children:(notifications||[]).map(function(item,index){return/*#__PURE__*/_jsx(Dropdown.Item,{className:\"notify-item\",children:item.avatar?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"notify-icon\",children:/*#__PURE__*/_jsx(\"img\",{src:item.avatar,alt:\"\",className:\"img-fluid rounded-circle\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"notify-details\",children:item.text}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0 user-msg\",children:/*#__PURE__*/_jsx(\"small\",{children:item.subText})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:classNames('notify-icon','bg-'+item.bgColor),children:/*#__PURE__*/_jsx(\"i\",{className:item.icon})}),/*#__PURE__*/_jsxs(\"p\",{className:\"notify-details\",children:[item.text,\" \",/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:item.subText})]})]})},index.toString());})}),/*#__PURE__*/_jsxs(Dropdown.Item,{className:\"text-center text-primary notify-item notify-all\",children:[\"View All \",/*#__PURE__*/_jsx(\"i\",{className:\"fe-arrow-right\"})]})]})})]});};export default NotificationDropdown;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/topbar/NotificationDropdown.tsx"],"names":["Badge","Dropdown","Link","classNames","useToggle","Scrollbar","NotificationDropdown","notifications","isOpen","show","hide","toggleDropdown","map","item","index","avatar","text","subText","bgColor","icon","toString"],"mappings":"2IAAA,OAASA,KAAT,CAAgBC,QAAhB,KAAgC,iBAAhC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA;AACA,OAASC,SAAT,KAA0B,aAA1B,CAEA;AACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CAEA;6IAOA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,MAAkD,IAA/CC,CAAAA,aAA+C,MAA/CA,aAA+C,CAC3E,eAA6BH,SAAS,EAAtC,0CAAOI,MAAP,gBAAeC,IAAf,gBAAqBC,IAArB,gBAEA;AACJ;AACA,OACI,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzBH,MAAM,CAAGE,IAAI,EAAP,CAAYD,IAAI,EAAtB,CACH,CAFD,CAIA,mBACI,MAAC,QAAD,EAAU,IAAI,CAAED,MAAhB,CAAwB,QAAQ,CAAEG,cAAlC,wBACI,MAAC,QAAD,CAAU,MAAV,EAAiB,OAAO,CAAC,EAAzB,CAA4B,EAAE,CAAC,GAA/B,CAAmC,SAAS,CAAC,mCAA7C,CAAiF,OAAO,CAAEA,cAA1F,wBACI,UAAG,SAAS,CAAC,mBAAb,EADJ,cAEI,KAAC,KAAD,EAAO,EAAE,CAAC,QAAV,CAAmB,SAAS,CAAC,gCAA7B,eAFJ,GADJ,cAQI,KAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAC,KAArB,CAA2B,SAAS,CAAC,aAArC,uBACI,aAAK,OAAO,CAAEA,cAAd,wBACI,KAAC,QAAD,CAAU,IAAV,EAAe,EAAE,CAAC,KAAlB,CAAwB,SAAS,CAAC,YAAlC,uBACI,YAAI,SAAS,CAAC,KAAd,wBACI,aAAM,SAAS,CAAC,WAAhB,uBACI,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAC,WAAvB,uBACI,oCADJ,EADJ,EADJ,kBADJ,EADJ,cAWI,KAAC,SAAD,EAAW,SAAS,CAAC,aAArB,UACK,CAACJ,aAAa,EAAI,EAAlB,EAAsBK,GAAtB,CAA0B,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACxC,mBACI,KAAC,QAAD,CAAU,IAAV,EAAsC,SAAS,CAAC,aAAhD,UACKD,IAAI,CAACE,MAAL,cACG,wCACI,YAAK,SAAS,CAAC,aAAf,uBACI,YAAK,GAAG,CAAEF,IAAI,CAACE,MAAf,CAAuB,GAAG,CAAC,EAA3B,CAA8B,SAAS,CAAC,0BAAxC,EADJ,EADJ,cAII,UAAG,SAAS,CAAC,gBAAb,UAA+BF,IAAI,CAACG,IAApC,EAJJ,cAKI,UAAG,SAAS,CAAC,0BAAb,uBACI,uBAAQH,IAAI,CAACI,OAAb,EADJ,EALJ,GADH,cAWG,wCACI,YAAK,SAAS,CAAEd,UAAU,CAAC,aAAD,CAAgB,MAAQU,IAAI,CAACK,OAA7B,CAA1B,uBACI,UAAG,SAAS,CAAEL,IAAI,CAACM,IAAnB,EADJ,EADJ,cAII,WAAG,SAAS,CAAC,gBAAb,WACKN,IAAI,CAACG,IADV,kBACgB,cAAO,SAAS,CAAC,YAAjB,UAA+BH,IAAI,CAACI,OAApC,EADhB,GAJJ,GAZR,EAAoBH,KAAK,CAACM,QAAN,EAApB,CADJ,CAwBH,CAzBA,CADL,EAXJ,cAwCI,MAAC,QAAD,CAAU,IAAV,EAAe,SAAS,CAAC,iDAAzB,oCACa,UAAG,SAAS,CAAC,gBAAb,EADb,GAxCJ,GADJ,EARJ,GADJ,CAyDH,CAnED,CAqEA,cAAed,CAAAA,oBAAf","sourcesContent":["import { Badge, Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// hooks\nimport { useToggle } from '../../hooks';\n\n// components\nimport Scrollbar from '../Scrollbar';\n\n// dummy data\nimport { Notification } from '../../layouts/types';\n\ntype NotificationDropdownProps = {\n    notifications: Notification[];\n};\n\nconst NotificationDropdown = ({ notifications }: NotificationDropdownProps) => {\n    const [isOpen, show, hide] = useToggle();\n\n    /*\n     * toggle apps-dropdown\n     */\n    const toggleDropdown = () => {\n        isOpen ? hide() : show();\n    };\n\n    return (\n        <Dropdown show={isOpen} onToggle={toggleDropdown}>\n            <Dropdown.Toggle variant=\"\" as=\"a\" className=\"nav-link waves-effect waves-light\" onClick={toggleDropdown}>\n                <i className=\"fe-bell noti-icon\"></i>\n                <Badge bg=\"danger\" className=\"rounded-circle noti-icon-badge\">\n                    9\n                </Badge>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu align=\"end\" className=\"dropdown-lg\">\n                <div onClick={toggleDropdown}>\n                    <Dropdown.Item as=\"div\" className=\"noti-title\">\n                        <h5 className=\"m-0\">\n                            <span className=\"float-end\">\n                                <Link to=\"#\" className=\"text-dark\">\n                                    <small>Clear All</small>\n                                </Link>\n                            </span>\n                            Notification\n                        </h5>\n                    </Dropdown.Item>\n                    <Scrollbar className=\"noti-scroll\">\n                        {(notifications || []).map((item, index) => {\n                            return (\n                                <Dropdown.Item key={index.toString()} className=\"notify-item\">\n                                    {item.avatar ? (\n                                        <>\n                                            <div className=\"notify-icon\">\n                                                <img src={item.avatar} alt=\"\" className=\"img-fluid rounded-circle\" />\n                                            </div>\n                                            <p className=\"notify-details\">{item.text}</p>\n                                            <p className=\"text-muted mb-0 user-msg\">\n                                                <small>{item.subText}</small>\n                                            </p>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <div className={classNames('notify-icon', 'bg-' + item.bgColor)}>\n                                                <i className={item.icon}></i>\n                                            </div>\n                                            <p className=\"notify-details\">\n                                                {item.text} <small className=\"text-muted\">{item.subText}</small>\n                                            </p>\n                                        </>\n                                    )}\n                                </Dropdown.Item>\n                            );\n                        })}\n                    </Scrollbar>\n\n                    <Dropdown.Item className=\"text-center text-primary notify-item notify-all\">\n                        View All <i className=\"fe-arrow-right\"></i>\n                    </Dropdown.Item>\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default NotificationDropdown;\n"]},"metadata":{},"sourceType":"module"}