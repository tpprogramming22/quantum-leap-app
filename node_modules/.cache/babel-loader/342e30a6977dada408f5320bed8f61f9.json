{"ast":null,"code":"import{Card,Spinner}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var colors=['primary','secondary','success','danger','warning','info','light','dark'];var ColorBorderSpinners=function ColorBorderSpinners(){return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mt-0 header-title\",children:\"Color Border spinner\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-muted mb-4\",children:[\"All standard visual variants are available for both animation styles by setting the\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"variant\"}),\" property.\"]}),(colors||[]).map(function(color,index){return/*#__PURE__*/_jsx(Spinner,{className:\"m-2\",variant:color,animation:\"border\"},index.toString());})]})});};export default ColorBorderSpinners;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Spinners/ColorBorderSpinners.tsx"],"names":["Card","Spinner","colors","ColorBorderSpinners","map","color","index","toString"],"mappings":"AAAA,OAASA,IAAT,CAAeC,OAAf,KAA8B,iBAA9B,C,wFAEA,GAAMC,CAAAA,MAAgB,CAAG,CAAC,SAAD,CAAY,WAAZ,CAAyB,SAAzB,CAAoC,QAApC,CAA8C,SAA9C,CAAyD,MAAzD,CAAiE,OAAjE,CAA0E,MAA1E,CAAzB,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC9B,mBACI,KAAC,IAAD,wBACI,MAAC,IAAD,CAAM,IAAN,yBACI,WAAI,SAAS,CAAC,mBAAd,kCADJ,cAEI,WAAG,SAAS,CAAC,iBAAb,iGACwF,GADxF,cAEI,iCAFJ,gBAFJ,CAOK,CAACD,MAAM,EAAI,EAAX,EAAeE,GAAf,CAAmB,SAACC,KAAD,CAAQC,KAAR,CAAkB,CAClC,mBAAO,KAAC,OAAD,EAAgC,SAAS,CAAC,KAA1C,CAAgD,OAAO,CAAED,KAAzD,CAAgE,SAAS,CAAC,QAA1E,EAAcC,KAAK,CAACC,QAAN,EAAd,CAAP,CACH,CAFA,CAPL,GADJ,EADJ,CAeH,CAhBD,CAkBA,cAAeJ,CAAAA,mBAAf","sourcesContent":["import { Card, Spinner } from 'react-bootstrap';\n\nconst colors: string[] = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\nconst ColorBorderSpinners = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mt-0 header-title\">Color Border spinner</h4>\n                <p className=\"text-muted mb-4\">\n                    All standard visual variants are available for both animation styles by setting the{' '}\n                    <code>variant</code> property.\n                </p>\n\n                {(colors || []).map((color, index) => {\n                    return <Spinner key={index.toString()} className=\"m-2\" variant={color} animation=\"border\" />;\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ColorBorderSpinners;\n"]},"metadata":{},"sourceType":"module"}