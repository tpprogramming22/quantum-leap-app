{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Buttons/DefaultButton.tsx\";\nimport { Button } from 'react-bootstrap'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DefaultButton = _ref => {\n  let {\n    variants\n  } = _ref;\n  const defaultButtonVariants = [...variants, 'light', 'link'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"header-title\",\n      children: \"Default Buttons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sub-header\",\n      children: [\"Use the button classes on an \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"<a>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 46\n      }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"<button>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 70\n      }, this), \", or\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"<input>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), \" element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-list\",\n      children: (defaultButtonVariants || []).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          variant: item,\n          className: \"waves-effect waves-light\",\n          children: item.charAt(0).toUpperCase() + item.slice(1)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = DefaultButton;\nexport default DefaultButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultButton\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/uikit/Buttons/DefaultButton.tsx"],"names":["Button","DefaultButton","variants","defaultButtonVariants","map","item","index","charAt","toUpperCase","slice","toString"],"mappings":";AAAA,SAASA,MAAT,QAAuB,iBAAvB,C,CAEA;;;;;AASA,MAAMC,aAAa,GAAG,QAAsC;AAAA,MAArC;AAAEC,IAAAA;AAAF,GAAqC;AACxD,QAAMC,qBAAsC,GAAG,CAAC,GAAGD,QAAJ,EAAc,OAAd,EAAuB,MAAvB,CAA/C;AAEA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,+DACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADjC,qBACyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADzD,UACyF,GADzF,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACK,CAACC,qBAAqB,IAAI,EAA1B,EAA8BC,GAA9B,CAAkC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChD,4BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAED,IAAjB;AAAuB,UAAA,SAAS,EAAC,0BAAjC;AAAA,oBACKA,IAAI,CAAEE,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCH,IAAI,CAAEI,KAAN,CAAY,CAAZ;AADrC,WAAiEH,KAAK,CAACI,QAAN,EAAjE;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAmBH,CAtBD;;KAAMT,a;AAwBN,eAAeA,aAAf","sourcesContent":["import { Button } from 'react-bootstrap';\n\n// types\nimport { Variant } from './types';\n\ntype DefaultButtonProps = {\n    variants: Variant[];\n};\n\ntype ButtonVariant = Variant | 'light' | 'link';\n\nconst DefaultButton = ({ variants }: DefaultButtonProps) => {\n    const defaultButtonVariants: ButtonVariant[] = [...variants, 'light', 'link'];\n\n    return (\n        <>\n            <h4 className=\"header-title\">Default Buttons</h4>\n            <p className=\"sub-header\">\n                Use the button classes on an <code>&lt;a&gt;</code>, <code>&lt;button&gt;</code>, or{' '}\n                <code>&lt;input&gt;</code> element.\n            </p>\n\n            <div className=\"button-list\">\n                {(defaultButtonVariants || []).map((item, index) => {\n                    return (\n                        <Button variant={item} className=\"waves-effect waves-light\" key={index.toString()}>\n                            {item!.charAt(0).toUpperCase() + item!.slice(1)}\n                        </Button>\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default DefaultButton;\n"]},"metadata":{},"sourceType":"module"}