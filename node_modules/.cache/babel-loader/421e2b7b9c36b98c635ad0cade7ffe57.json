{"ast":null,"code":"import Chart from'react-apexcharts';import{Card,Dropdown}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// StackedAreaChart\nvar StackedAreaChart=function StackedAreaChart(){// default options\nvar apexAreaChart2Opts={chart:{height:422,type:'area',stacked:true,events:{selection:function selection(chart,e){console.log(new Date(e.xaxis.min));}}},colors:['#35b8e0','#10c469','#98a6ad'],dataLabels:{enabled:false},stroke:{width:2,curve:'smooth'},fill:{gradient:{opacityFrom:0.6,opacityTo:0.8}},legend:{position:'top',horizontalAlign:'left'},xaxis:{type:'datetime'},grid:{row:{colors:['transparent','transparent'],// takes an array which will be repeated on columns\nopacity:0.2},borderColor:'#f7f7f7'},responsive:[{breakpoint:600,options:{chart:{toolbar:{show:false}}}}]};/*\n     * generate day wise time series\n     */var generateDayWiseTimeSeries=function generateDayWiseTimeSeries(baseval,count,yrange){var i=0;var series=[];while(i<count){var x=baseval;var y=Math.floor(Math.random()*(yrange.max-yrange.min+1))+yrange.min;series.push([x,y]);baseval+=86400000;i++;}return series;};// chart data\nvar apexAreaChart2Data=[{name:'South',data:generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(),20,{min:10,max:60})},{name:'North',data:generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(),20,{min:10,max:20})},{name:'Central',data:generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(),20,{min:10,max:15})}];return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Dropdown,{className:\"float-end\",align:\"end\",children:[/*#__PURE__*/_jsx(Dropdown.Toggle,{as:\"a\",className:\"cursor-pointer card-drop\",children:/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-dots-vertical\"})}),/*#__PURE__*/_jsxs(Dropdown.Menu,{children:[/*#__PURE__*/_jsx(Dropdown.Item,{children:\"Action\"}),/*#__PURE__*/_jsx(Dropdown.Item,{children:\"Anothther Action\"}),/*#__PURE__*/_jsx(Dropdown.Item,{children:\"Something Else\"}),/*#__PURE__*/_jsx(Dropdown.Item,{children:\"Separated link\"})]})]}),/*#__PURE__*/_jsx(\"h4\",{className:\"header-title mb-3\",children:\"Stacked Area\"}),/*#__PURE__*/_jsx(Chart,{options:apexAreaChart2Opts,series:apexAreaChart2Data,type:\"area\",className:\"apex-charts\"})]})});};export default StackedAreaChart;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/chart/ApexChart/StackedAreaChart.tsx"],"names":["Chart","Card","Dropdown","StackedAreaChart","apexAreaChart2Opts","chart","height","type","stacked","events","selection","e","console","log","Date","xaxis","min","colors","dataLabels","enabled","stroke","width","curve","fill","gradient","opacityFrom","opacityTo","legend","position","horizontalAlign","grid","row","opacity","borderColor","responsive","breakpoint","options","toolbar","show","generateDayWiseTimeSeries","baseval","count","yrange","i","series","x","y","Math","floor","random","max","push","apexAreaChart2Data","name","data","getTime"],"mappings":"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","sourcesContent":["import Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// StackedAreaChart\nconst StackedAreaChart = () => {\n    // default options\n    const apexAreaChart2Opts: ApexOptions = {\n        chart: {\n            height: 422,\n            type: 'area',\n            stacked: true,\n            events: {\n                selection: (chart, e) => {\n                    console.log(new Date(e.xaxis.min));\n                },\n            },\n        },\n        colors: ['#35b8e0', '#10c469', '#98a6ad'],\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            width: 2,\n            curve: 'smooth',\n        },\n        fill: {\n            gradient: {\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n            },\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f7f7f7',\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                },\n            },\n        ],\n    };\n\n    /*\n     * generate day wise time series\n     */\n    const generateDayWiseTimeSeries = (baseval: number, count: number, yrange: { min: number; max: number }) => {\n        var i = 0;\n        var series = [];\n        while (i < count) {\n            var x = baseval;\n            var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n            series.push([x, y]);\n            baseval += 86400000;\n            i++;\n        }\n        return series;\n    };\n\n    // chart data\n    const apexAreaChart2Data = [\n        {\n            name: 'South',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 60,\n            }),\n        },\n        {\n            name: 'North',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 20,\n            }),\n        },\n\n        {\n            name: 'Central',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 15,\n            }),\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mb-3\">Stacked Area</h4>\n                <Chart options={apexAreaChart2Opts} series={apexAreaChart2Data} type=\"area\" className=\"apex-charts\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StackedAreaChart;\n"]},"metadata":{},"sourceType":"module"}