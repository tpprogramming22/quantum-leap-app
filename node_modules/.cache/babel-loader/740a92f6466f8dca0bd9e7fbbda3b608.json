{"ast":null,"code":"import classNames from'classnames';import{Card,Dropdown}from'react-bootstrap';import{Link}from'react-router-dom';// types\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Reminders=function Reminders(_ref){var reminder=_ref.reminder;return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Dropdown,{className:\"float-end\",align:\"end\",children:[/*#__PURE__*/_jsx(Dropdown.Toggle,{as:\"a\",className:\"cursor-pointer card-drop\",children:/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-dots-vertical\"})}),/*#__PURE__*/_jsxs(Dropdown.Menu,{children:[/*#__PURE__*/_jsx(Dropdown.Item,{children:\"Action\"}),/*#__PURE__*/_jsx(Dropdown.Item,{children:\"Anothther Action\"}),/*#__PURE__*/_jsx(Dropdown.Item,{children:\"Something Else\"}),/*#__PURE__*/_jsx(Dropdown.Item,{children:\"Separated link\"})]})]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"header-title mt-0 mb-3\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-notification-clear-all me-1\"}),\"Upcoming Reminders\"]}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-group mb-0 user-list\",children:(reminder||[]).map(function(reminder,index){return/*#__PURE__*/_jsx(\"li\",{className:\"list-group-item\",children:/*#__PURE__*/_jsxs(Link,{to:\"#\",className:\"user-list-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user float-start me-3\",children:/*#__PURE__*/_jsx(\"i\",{className:classNames('mdi mdi-circle','text-'+reminder.variant)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-desc overflow-hidden\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"name mt-0 mb-1\",children:reminder.title}),/*#__PURE__*/_jsxs(\"span\",{className:\"desc text-muted font-12 text-truncate d-block\",children:[reminder.date,\" - \",reminder.time]})]})]})},index.toString());})})]})});};export default Reminders;","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/components/Reminders.tsx"],"names":["classNames","Card","Dropdown","Link","Reminders","reminder","map","index","variant","title","date","time","toString"],"mappings":"AAAA,MAAOA,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,IAAT,CAAeC,QAAf,KAA+B,iBAA/B,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA;wFAOA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAkC,IAA/BC,CAAAA,QAA+B,MAA/BA,QAA+B,CAChD,mBACI,KAAC,IAAD,wBACI,MAAC,IAAD,CAAM,IAAN,yBACI,MAAC,QAAD,EAAU,SAAS,CAAC,WAApB,CAAgC,KAAK,CAAC,KAAtC,wBACI,KAAC,QAAD,CAAU,MAAV,EAAiB,EAAE,CAAC,GAApB,CAAwB,SAAS,CAAC,0BAAlC,uBACI,UAAG,SAAS,CAAC,uBAAb,EADJ,EADJ,cAII,MAAC,QAAD,CAAU,IAAV,yBACI,KAAC,QAAD,CAAU,IAAV,qBADJ,cAEI,KAAC,QAAD,CAAU,IAAV,+BAFJ,cAGI,KAAC,QAAD,CAAU,IAAV,6BAHJ,cAII,KAAC,QAAD,CAAU,IAAV,6BAJJ,GAJJ,GADJ,cAYI,YAAI,SAAS,CAAC,wBAAd,wBACI,UAAG,SAAS,CAAC,qCAAb,EADJ,wBAZJ,cAgBI,WAAI,SAAS,CAAC,2BAAd,UACK,CAACA,QAAQ,EAAI,EAAb,EAAiBC,GAAjB,CAAqB,SAACD,QAAD,CAAWE,KAAX,CAAqB,CACvC,mBACI,WAAI,SAAS,CAAC,iBAAd,uBACI,MAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAC,gBAAvB,wBACI,YAAK,SAAS,CAAC,uBAAf,uBACI,UAAG,SAAS,CAAEP,UAAU,CAAC,gBAAD,CAAmB,QAAUK,QAAQ,CAACG,OAAtC,CAAxB,EADJ,EADJ,cAII,aAAK,SAAS,CAAC,2BAAf,wBACI,WAAI,SAAS,CAAC,gBAAd,UAAgCH,QAAQ,CAACI,KAAzC,EADJ,cAEI,cAAM,SAAS,CAAC,+CAAhB,WACKJ,QAAQ,CAACK,IADd,OACuBL,QAAQ,CAACM,IADhC,GAFJ,GAJJ,GADJ,EAAqCJ,KAAK,CAACK,QAAN,EAArC,CADJ,CAeH,CAhBA,CADL,EAhBJ,GADJ,EADJ,CAwCH,CAzCD,CA2CA,cAAeR,CAAAA,SAAf","sourcesContent":["import classNames from 'classnames';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// types\nimport { Reminder } from '../pages/apps/Contacts/Profile/types';\n\ntype RemindersProps = {\n    reminder: Reminder[];\n};\n\nconst Reminders = ({ reminder }: RemindersProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mt-0 mb-3\">\n                    <i className=\"mdi mdi-notification-clear-all me-1\"></i>\n                    Upcoming Reminders\n                </h4>\n                <ul className=\"list-group mb-0 user-list\">\n                    {(reminder || []).map((reminder, index) => {\n                        return (\n                            <li className=\"list-group-item\" key={index.toString()}>\n                                <Link to=\"#\" className=\"user-list-item\">\n                                    <div className=\"user float-start me-3\">\n                                        <i className={classNames('mdi mdi-circle', 'text-' + reminder.variant)}></i>\n                                    </div>\n                                    <div className=\"user-desc overflow-hidden\">\n                                        <h5 className=\"name mt-0 mb-1\">{reminder.title}</h5>\n                                        <span className=\"desc text-muted font-12 text-truncate d-block\">\n                                            {reminder.date} - {reminder.time}\n                                        </span>\n                                    </div>\n                                </Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Reminders;\n"]},"metadata":{},"sourceType":"module"}