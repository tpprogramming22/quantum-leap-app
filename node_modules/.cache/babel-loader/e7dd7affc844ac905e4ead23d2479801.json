{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/apps/Tasks/Board/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Dropdown, Modal, Button } from 'react-bootstrap';\nimport { Draggable, Droppable, DragDropContext } from 'react-beautiful-dnd';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup'; // hooks\n\nimport { usePageTitle } from '../../../../hooks'; // component\n\nimport { FormInput } from '../../../../components/form';\nimport TaskItem from './Task'; // types\n\n// dummy data\nimport { tasks } from './data'; // images\n\nimport defaultAvatar from '../../../../assets/images/users/user-1.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// kanban\nconst Kanban = () => {\n  _s();\n\n  // set pagetitle\n  usePageTitle({\n    title: 'Kanban Board',\n    breadCrumbItems: [{\n      path: 'apps/tasks/kanban',\n      label: 'Tasks'\n    }, {\n      path: 'apps/tasks/kanban',\n      label: 'Kanban Board',\n      active: true\n    }]\n  });\n  const [state, setState] = useState({\n    upcomingTasks: tasks.filter(t => t.status === 'Upcoming'),\n    inprogressTasks: tasks.filter(t => t.status === 'Inprogress'),\n    completedTasks: tasks.filter(t => t.status === 'Completed')\n  });\n  const [totalTasks, setTotalTasks] = useState(tasks.length);\n  const [newTaskModal, setNewTaskModal] = useState(false);\n  const [newTaskDetails, setNewTaskDetails] = useState(null);\n  /*\n   * Form validation schema\n   */\n\n  const schemaResolver = yupResolver(yup.object().shape({\n    title: yup.string().required(),\n    userName: yup.string().required()\n  }));\n  /*\n   * Form methods\n   */\n\n  const methods = useForm({\n    resolver: schemaResolver\n  });\n  const {\n    handleSubmit,\n    register,\n    control,\n    reset,\n    formState: {\n      errors\n    }\n  } = methods;\n  /**\n   * Toggles the new task modal\n   */\n\n  const toggleNewTaskModal = () => {\n    setNewTaskModal(prevstate => !prevstate);\n  };\n  /**\n   * Creates new empty task with given status\n   * @param status\n   * @param queue\n   */\n\n\n  const newTask = (status, queue) => {\n    setNewTaskDetails({\n      dueDate: new Date(),\n      userAvatar: defaultAvatar,\n      task: 3,\n      comment: 5,\n      status: status,\n      queue: queue\n    });\n    setNewTaskModal(true);\n  }; // a little function to help us with reordering the result\n\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n  /**\n   * Moves an item from one list to another list.\n   */\n\n\n  const move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return result;\n  };\n  /**\n   * Gets the list\n   */\n\n\n  const getList = id => {\n    const modifiedState = { ...state\n    };\n    const stateTasks = modifiedState[id] && modifiedState[id];\n    return stateTasks;\n  };\n  /**\n   * On drag end\n   */\n\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result; // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(getList(source.droppableId), source.index, destination.index);\n      let localState = { ...state\n      };\n      localState[source.droppableId] = items;\n      setState(localState);\n    } else {\n      const result = move(getList(source.droppableId), getList(destination.droppableId), source, destination);\n      const localState = { ...state,\n        ...result\n      };\n      setState(localState);\n    }\n  };\n  /**\n   * Handles the new task form submission\n   */\n\n\n  const handleNewTask = values => {\n    const formData = {\n      title: values['title'],\n      priority: values['priority'],\n      userName: values['userName']\n    };\n    const newTask = { ...newTaskDetails,\n      ...formData,\n      id: totalTasks + 1\n    };\n    let modifiedState = { ...state\n    };\n    let tasks = [...getList(newTaskDetails.queue), newTask];\n    modifiedState[newTaskDetails.queue] = [...tasks];\n    setState(modifiedState);\n    setNewTaskModal(false);\n    setTotalTasks(totalTasks + 1); // reset the form after submission\n\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"upcomingTasks\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            ref: provided.innerRef,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n                  className: \"float-end\",\n                  align: \"end\",\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                    as: \"a\",\n                    className: \"cursor-pointer card-drop\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-dots-vertical\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Anothther Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Something Else\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Separated link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"header-title mt-0 mb-3 text-primary\",\n                  children: \"Upcoming\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 41\n                }, this), state.upcomingTasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-center text-muted pt-2 mb-0\",\n                  children: \"No Tasks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"sortable-list tasklist list-unstyled\",\n                  id: \"upcoming\",\n                  children: [(state.upcomingTasks || []).map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: item.id + '',\n                    index: index,\n                    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(TaskItem, {\n                        task: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 57\n                    }, this)\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 49\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center pt-2\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"#\",\n                    className: \"btn btn-primary waves-effect waves-light\",\n                    onClick: () => newTask('Pending', 'upcomingTasks'),\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 49\n                    }, this), \" Add New\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"inprogressTasks\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            ref: provided.innerRef,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n                  className: \"float-end\",\n                  align: \"end\",\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                    as: \"a\",\n                    className: \"cursor-pointer card-drop\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-dots-vertical\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Anothther Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Something Else\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Separated link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"header-title mt-0 mb-3 text-warning\",\n                  children: \"In Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 41\n                }, this), state.inprogressTasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-center text-muted pt-2 mb-0\",\n                  children: \"No Tasks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"sortable-list tasklist list-unstyled\",\n                  id: \"inprogress\",\n                  children: [(state.inprogressTasks || []).map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: item.id + '',\n                    index: index,\n                    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(TaskItem, {\n                        task: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 57\n                    }, this)\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 49\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center pt-2\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"#\",\n                    className: \"btn btn-primary waves-effect waves-light\",\n                    onClick: () => newTask('Inprogress', 'inprogressTasks'),\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 49\n                    }, this), \" Add New\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"completedTasks\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            ref: provided.innerRef,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n                  className: \"float-end\",\n                  align: \"end\",\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                    as: \"a\",\n                    className: \"cursor-pointer card-drop\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-dots-vertical\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 317,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Anothther Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Something Else\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Separated link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"header-title mt-0 mb-3 text-success\",\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 41\n                }, this), state.completedTasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-center text-muted pt-2 mb-0\",\n                  children: \"No Tasks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"sortable-list tasklist list-unstyled\",\n                  id: \"done\",\n                  children: [(state.completedTasks || []).map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: item.id + '',\n                    index: index,\n                    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(TaskItem, {\n                        task: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 338,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 57\n                    }, this)\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 49\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center pt-2\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"#\",\n                    className: \"btn btn-primary waves-effect waves-light\",\n                    onClick: () => newTask('Done', 'completedTasks'),\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 49\n                    }, this), \" Add New\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), newTaskDetails && /*#__PURE__*/_jsxDEV(Modal, {\n      show: newTaskModal,\n      onHide: toggleNewTaskModal,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"modal-title\",\n          children: \"Add New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(handleNewTask),\n          className: \"px-2\",\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            name: \"title\",\n            label: \"Title\",\n            placeholder: \"Enter title\",\n            type: \"text\",\n            containerClass: \"mb-3\",\n            className: \"form-control\",\n            register: register,\n            errors: errors,\n            control: control\n          }, \"title\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormInput, {\n                name: \"userName\",\n                label: \"Assign To\",\n                placeholder: \"Enter Name\",\n                type: \"text\",\n                containerClass: \"mb-3\",\n                className: \"form-control\",\n                register: register,\n                errors: errors,\n                control: control\n              }, \"userName\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormInput, {\n                name: \"priority\",\n                label: \"Priority\",\n                type: \"select\",\n                containerClass: \"mb-3\",\n                className: \"form-select\",\n                register: register,\n                errors: errors,\n                control: control,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Urgent\",\n                  children: \"Urgent\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"High\",\n                  children: \"High\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 41\n                }, this)]\n              }, \"priority\", true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormInput, {\n                name: \"startDate\",\n                label: \"Start Date\",\n                placeholder: \"Enter Date\",\n                type: \"text\",\n                containerClass: \"mb-3\",\n                className: \"form-control\",\n                register: register,\n                errors: errors,\n                control: control\n              }, \"startDate\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormInput, {\n                name: \"DueDate\",\n                label: \"Due Date\",\n                placeholder: \"Enter Date\",\n                type: \"text\",\n                containerClass: \"mb-3\",\n                className: \"form-control\",\n                register: register,\n                errors: errors,\n                control: control\n              }, \"DueDate\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-start\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              className: \"ms-1\",\n              onClick: toggleNewTaskModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Kanban, \"/xldO0Hw0YDVSwk/nlHWC3J8Y3w=\", false, function () {\n  return [usePageTitle, useForm];\n});\n\n_c = Kanban;\nexport default Kanban;\n\nvar _c;\n\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"sources":["/Users/ted/Downloads/Adminto_React_v1.1/adminto-react/src/pages/apps/Tasks/Board/index.tsx"],"names":["React","useState","useForm","Link","Row","Col","Card","Dropdown","Modal","Button","Draggable","Droppable","DragDropContext","yup","yupResolver","usePageTitle","FormInput","TaskItem","tasks","defaultAvatar","Kanban","title","breadCrumbItems","path","label","active","state","setState","upcomingTasks","filter","t","status","inprogressTasks","completedTasks","totalTasks","setTotalTasks","length","newTaskModal","setNewTaskModal","newTaskDetails","setNewTaskDetails","schemaResolver","object","shape","string","required","userName","methods","resolver","handleSubmit","register","control","reset","formState","errors","toggleNewTaskModal","prevstate","newTask","queue","dueDate","Date","userAvatar","task","comment","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","getList","id","modifiedState","stateTasks","onDragEnd","items","localState","handleNewTask","values","formData","priority","provided","snapshot","innerRef","map","item","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Dropdown, Modal, Button } from 'react-bootstrap';\nimport { Draggable, Droppable, DragDropContext, DropResult } from 'react-beautiful-dnd';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n// hooks\nimport { usePageTitle } from '../../../../hooks';\n\n// component\nimport { FormInput } from '../../../../components/form';\n\nimport TaskItem from './Task';\n\n// types\nimport { KanbanBoardTask } from './types';\n\n// dummy data\nimport { tasks } from './data';\n\n// images\nimport defaultAvatar from '../../../../assets/images/users/user-1.jpg';\n\ntype task = {\n    upcomingTasks: KanbanBoardTask[];\n    inprogressTasks: KanbanBoardTask[];\n    completedTasks: KanbanBoardTask[];\n};\n\n// kanban\nconst Kanban = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Kanban Board',\n        breadCrumbItems: [\n            {\n                path: 'apps/tasks/kanban',\n                label: 'Tasks',\n            },\n            {\n                path: 'apps/tasks/kanban',\n                label: 'Kanban Board',\n                active: true,\n            },\n        ],\n    });\n\n    const [state, setState] = useState<task>({\n        upcomingTasks: tasks.filter((t) => t.status === 'Upcoming'),\n        inprogressTasks: tasks.filter((t) => t.status === 'Inprogress'),\n        completedTasks: tasks.filter((t) => t.status === 'Completed'),\n    });\n    const [totalTasks, setTotalTasks] = useState<number>(tasks.length);\n    const [newTaskModal, setNewTaskModal] = useState<boolean>(false);\n    const [newTaskDetails, setNewTaskDetails] = useState<any>(null);\n\n    /*\n     * Form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            title: yup.string().required(),\n            userName: yup.string().required(),\n        })\n    );\n\n    /*\n     * Form methods\n     */\n    const methods = useForm({ resolver: schemaResolver });\n    const {\n        handleSubmit,\n        register,\n        control,\n        reset,\n        formState: { errors },\n    } = methods;\n\n    /**\n     * Toggles the new task modal\n     */\n    const toggleNewTaskModal = () => {\n        setNewTaskModal((prevstate) => !prevstate);\n    };\n\n    /**\n     * Creates new empty task with given status\n     * @param status\n     * @param queue\n     */\n    const newTask = (status: string, queue: string) => {\n        setNewTaskDetails({\n            dueDate: new Date(),\n            userAvatar: defaultAvatar,\n            task: 3,\n            comment: 5,\n            status: status,\n            queue: queue,\n        });\n        setNewTaskModal(true);\n    };\n\n    // a little function to help us with reordering the result\n    const reorder = (list: any[], startIndex: number, endIndex: number) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    };\n\n    /**\n     * Moves an item from one list to another list.\n     */\n    const move = (\n        source: Iterable<unknown> | ArrayLike<unknown>,\n        destination: Iterable<unknown> | ArrayLike<unknown>,\n        droppableSource: { index: number; droppableId: string | number },\n        droppableDestination: { index: number; droppableId: string | number }\n    ) => {\n        const sourceClone = Array.from(source);\n        const destClone = Array.from(destination);\n        const [removed] = sourceClone.splice(droppableSource.index, 1);\n        destClone.splice(droppableDestination.index, 0, removed);\n        const result: any = {};\n        result[droppableSource.droppableId] = sourceClone;\n        result[droppableDestination.droppableId] = destClone;\n\n        return result;\n    };\n\n    /**\n     * Gets the list\n     */\n    const getList = (id: string) => {\n        const modifiedState: any = { ...state };\n        const stateTasks: any = modifiedState[id] && modifiedState[id];\n        return stateTasks;\n    };\n\n    /**\n     * On drag end\n     */\n    const onDragEnd = (result: DropResult) => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n        if (source.droppableId === destination.droppableId) {\n            const items = reorder(getList(source.droppableId), source.index, destination.index);\n            let localState: any = { ...state };\n            localState[source.droppableId] = items;\n            setState(localState);\n        } else {\n            const result = move(getList(source.droppableId), getList(destination.droppableId), source, destination);\n            const localState = { ...state, ...result };\n            setState(localState);\n        }\n    };\n\n    /**\n     * Handles the new task form submission\n     */\n\n    const handleNewTask = (values: any) => {\n        const formData = {\n            title: values['title'],\n            priority: values['priority'],\n            userName: values['userName'],\n        };\n\n        const newTask = {\n            ...newTaskDetails,\n            ...formData,\n            id: totalTasks + 1,\n        };\n\n        let modifiedState: any = { ...state };\n        let tasks = [...getList(newTaskDetails.queue), newTask];\n        modifiedState[newTaskDetails.queue] = [...tasks];\n\n        setState(modifiedState);\n        setNewTaskModal(false);\n        setTotalTasks(totalTasks + 1);\n        // reset the form after submission\n        reset();\n    };\n\n    return (\n        <>\n            <Row>\n                <DragDropContext onDragEnd={onDragEnd}>\n                    {/* todo */}\n                    <Droppable droppableId=\"upcomingTasks\">\n                        {(provided, snapshot) => (\n                            <Col lg={4} ref={provided.innerRef}>\n                                <Card>\n                                    <Card.Body>\n                                        <Dropdown className=\"float-end\" align=\"end\">\n                                            <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                                                <i className=\"mdi mdi-dots-vertical\"></i>\n                                            </Dropdown.Toggle>\n                                            <Dropdown.Menu>\n                                                <Dropdown.Item>Action</Dropdown.Item>\n                                                <Dropdown.Item>Anothther Action</Dropdown.Item>\n                                                <Dropdown.Item>Something Else</Dropdown.Item>\n                                                <Dropdown.Item>Separated link</Dropdown.Item>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n\n                                        <h5 className=\"header-title mt-0 mb-3 text-primary\">Upcoming</h5>\n                                        {state.upcomingTasks.length === 0 && (\n                                            <p className=\"text-center text-muted pt-2 mb-0\">No Tasks</p>\n                                        )}\n\n                                        <ul className=\"sortable-list tasklist list-unstyled\" id=\"upcoming\">\n                                            {(state.upcomingTasks || []).map((item, index) => (\n                                                <Draggable key={item.id} draggableId={item.id + ''} index={index}>\n                                                    {(provided, snapshot) => (\n                                                        <li\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                        >\n                                                            <TaskItem task={item} />\n                                                        </li>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n                                        </ul>\n                                        <div className=\"text-center pt-2\">\n                                            <Link\n                                                to=\"#\"\n                                                className=\"btn btn-primary waves-effect waves-light\"\n                                                onClick={() => newTask('Pending', 'upcomingTasks')}\n                                            >\n                                                <i className=\"mdi mdi-plus\"></i> Add New\n                                            </Link>\n                                        </div>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )}\n                    </Droppable>\n\n                    {/* in progress */}\n                    <Droppable droppableId=\"inprogressTasks\">\n                        {(provided, snapshot) => (\n                            <Col lg={4} ref={provided.innerRef}>\n                                <Card>\n                                    <Card.Body>\n                                        <Dropdown className=\"float-end\" align=\"end\">\n                                            <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                                                <i className=\"mdi mdi-dots-vertical\"></i>\n                                            </Dropdown.Toggle>\n                                            <Dropdown.Menu>\n                                                <Dropdown.Item>Action</Dropdown.Item>\n                                                <Dropdown.Item>Anothther Action</Dropdown.Item>\n                                                <Dropdown.Item>Something Else</Dropdown.Item>\n                                                <Dropdown.Item>Separated link</Dropdown.Item>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n\n                                        <h5 className=\"header-title mt-0 mb-3 text-warning\">In Progress</h5>\n\n                                        {state.inprogressTasks.length === 0 && (\n                                            <p className=\"text-center text-muted pt-2 mb-0\">No Tasks</p>\n                                        )}\n\n                                        <ul className=\"sortable-list tasklist list-unstyled\" id=\"inprogress\">\n                                            {(state.inprogressTasks || []).map((item, index) => (\n                                                <Draggable key={item.id} draggableId={item.id + ''} index={index}>\n                                                    {(provided, snapshot) => (\n                                                        <li\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                        >\n                                                            <TaskItem task={item} />\n                                                        </li>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n                                        </ul>\n                                        <div className=\"text-center pt-2\">\n                                            <Link\n                                                to=\"#\"\n                                                className=\"btn btn-primary waves-effect waves-light\"\n                                                onClick={() => newTask('Inprogress', 'inprogressTasks')}\n                                            >\n                                                <i className=\"mdi mdi-plus\"></i> Add New\n                                            </Link>\n                                        </div>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )}\n                    </Droppable>\n\n                    {/* done */}\n                    <Droppable droppableId=\"completedTasks\">\n                        {(provided, snapshot) => (\n                            <Col lg={4} ref={provided.innerRef}>\n                                <Card>\n                                    <Card.Body>\n                                        <Dropdown className=\"float-end\" align=\"end\">\n                                            <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                                                <i className=\"mdi mdi-dots-vertical\"></i>\n                                            </Dropdown.Toggle>\n                                            <Dropdown.Menu>\n                                                <Dropdown.Item>Action</Dropdown.Item>\n                                                <Dropdown.Item>Anothther Action</Dropdown.Item>\n                                                <Dropdown.Item>Something Else</Dropdown.Item>\n                                                <Dropdown.Item>Separated link</Dropdown.Item>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n\n                                        <h5 className=\"header-title mt-0 mb-3 text-success\">Completed</h5>\n                                        {state.completedTasks.length === 0 && (\n                                            <p className=\"text-center text-muted pt-2 mb-0\">No Tasks</p>\n                                        )}\n\n                                        <ul className=\"sortable-list tasklist list-unstyled\" id=\"done\">\n                                            {(state.completedTasks || []).map((item, index) => (\n                                                <Draggable key={item.id} draggableId={item.id + ''} index={index}>\n                                                    {(provided, snapshot) => (\n                                                        <li\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                        >\n                                                            <TaskItem task={item} />\n                                                        </li>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n                                        </ul>\n                                        <div className=\"text-center pt-2\">\n                                            <Link\n                                                to=\"#\"\n                                                className=\"btn btn-primary waves-effect waves-light\"\n                                                onClick={() => newTask('Done', 'completedTasks')}\n                                            >\n                                                <i className=\"mdi mdi-plus\"></i> Add New\n                                            </Link>\n                                        </div>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )}\n                    </Droppable>\n                    {/* </div> */}\n                </DragDropContext>\n            </Row>\n\n            {/* add new task modal */}\n            {newTaskDetails && (\n                <Modal show={newTaskModal} onHide={toggleNewTaskModal} centered>\n                    <Modal.Header closeButton>\n                        <h4 className=\"modal-title\">Add New Task</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <form onSubmit={handleSubmit(handleNewTask)} className=\"px-2\">\n                            <FormInput\n                                name=\"title\"\n                                label=\"Title\"\n                                placeholder=\"Enter title\"\n                                type=\"text\"\n                                containerClass=\"mb-3\"\n                                className=\"form-control\"\n                                register={register}\n                                key=\"title\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <Row>\n                                <Col md={6}>\n                                    <FormInput\n                                        name=\"userName\"\n                                        label=\"Assign To\"\n                                        placeholder=\"Enter Name\"\n                                        type=\"text\"\n                                        containerClass=\"mb-3\"\n                                        className=\"form-control\"\n                                        register={register}\n                                        key=\"userName\"\n                                        errors={errors}\n                                        control={control}\n                                    />\n                                </Col>\n                                <Col md={6}>\n                                    <FormInput\n                                        name=\"priority\"\n                                        label=\"Priority\"\n                                        type=\"select\"\n                                        containerClass=\"mb-3\"\n                                        className=\"form-select\"\n                                        register={register}\n                                        key=\"priority\"\n                                        errors={errors}\n                                        control={control}\n                                    >\n                                        <option value=\"\">Select</option>\n                                        <option value=\"Urgent\">Urgent</option>\n                                        <option value=\"High\">High</option>\n                                    </FormInput>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    <FormInput\n                                        name=\"startDate\"\n                                        label=\"Start Date\"\n                                        placeholder=\"Enter Date\"\n                                        type=\"text\"\n                                        containerClass=\"mb-3\"\n                                        className=\"form-control\"\n                                        register={register}\n                                        key=\"startDate\"\n                                        errors={errors}\n                                        control={control}\n                                    />\n                                </Col>\n                                <Col md={6}>\n                                    <FormInput\n                                        name=\"DueDate\"\n                                        label=\"Due Date\"\n                                        placeholder=\"Enter Date\"\n                                        type=\"text\"\n                                        containerClass=\"mb-3\"\n                                        className=\"form-control\"\n                                        register={register}\n                                        key=\"DueDate\"\n                                        errors={errors}\n                                        control={control}\n                                    />\n                                </Col>\n                            </Row>\n\n                            <div className=\"text-start\">\n                                <Button variant=\"success\" type=\"submit\">\n                                    Save\n                                </Button>\n                                <Button variant=\"danger\" className=\"ms-1\" onClick={toggleNewTaskModal}>\n                                    Cancel\n                                </Button>\n                            </div>\n                        </form>\n                    </Modal.Body>\n                </Modal>\n            )}\n        </>\n    );\n};\n\nexport default Kanban;\n"]},"metadata":{},"sourceType":"module"}