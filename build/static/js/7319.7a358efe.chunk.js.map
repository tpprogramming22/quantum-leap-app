{"version":3,"file":"static/js/7319.7a358efe.chunk.js","mappings":"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","sources":["pages/chart/ChartJs/LineChart.tsx","pages/chart/ChartJs/BarChart.tsx","pages/chart/ChartJs/PieChart.tsx","pages/chart/ChartJs/DonutChart.tsx","pages/chart/ChartJs/RadarChart.tsx","pages/chart/ChartJs/PolarChart.tsx","pages/chart/ChartJs/index.tsx"],"sourcesContent":["import { Line } from 'react-chartjs-2';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst LineChart = () => {\n    // chart data\n    const lineChartData = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'Auguest', 'September  '],\n        datasets: [\n            {\n                label: 'Sales Analytics',\n                data: [65, 59, 80, 81, 56, 55, 40, 35, 30],\n                fill: false,\n                borderColor: '#10c469',\n                tension: 0.1,\n            },\n        ],\n    };\n\n    // chart options\n    const lineChartOpts = {\n        bezierCurve: false,\n        maintainAspectRatio: false,\n        hover: {\n            intersect: false,\n        },\n        plugins: {\n            filler: {\n                propagate: false,\n            },\n            legend: {\n                display: true,\n            },\n            tooltip: {\n                intersect: false,\n            },\n        },\n        zeroLineColor: () => 'rgba(150, 150, 150, 0.9)',\n        scales: {\n            x: {\n                display: true,\n                grid: {\n                    color: () => 'rgba(150, 150, 150, 0.1)',\n                    drawBorder: false,\n                },\n            },\n            y: {\n                ticks: {\n                    stepSize: 20,\n                },\n                display: true,\n                borderDash: [5, 5],\n                grid: {\n                    color: () => 'rgba(0,0,0,0)',\n                    drawBorder: false,\n                    fontColor: '#fff',\n                },\n            },\n        },\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title\">Line Chart</h4>\n                <div style={{ height: '350px' }} className=\"mt-4 chartjs-chart\">\n                    <Line data={lineChartData} options={lineChartOpts} />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineChart;\n","import { Bar } from 'react-chartjs-2';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, Title, Tooltip, Legend);\nconst BarChart = () => {\n    // const labels = Utils.months({ count: 7 });\n\n    // chart data\n    const barChartData = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'Auguest', 'September  '],\n        datasets: [\n            {\n                label: 'Sales Analytics',\n                data: [65, 59, 80, 81, 56, 55, 40, 35, 30],\n                backgroundColor: 'rgba(113,182,249,0.2)',\n                borderColor: '#71b6f9',\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    // options\n    const barChartOpts = {\n        maintainAspectRatio: false,\n        plugins: {\n            legend: {\n                display: true,\n            },\n        },\n        scales: {\n            y: {\n                beginAtZero: false,\n                grid: {\n                    display: false,\n                    drawBorder: false,\n                },\n                stacked: false,\n                ticks: {\n                    stepSize: 20,\n                },\n            },\n            x: {\n                stacked: false,\n                grid: {\n                    drawBorder: false,\n                    color: () => 'rgba(0,0,0,0.01)',\n                },\n            },\n        },\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title\">Bar Chart</h4>\n                <div style={{ height: '350px' }} className=\"mt-4 chartjs-chart\">\n                    <Bar data={barChartData} options={barChartOpts} />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarChart;\n","import { Pie } from 'react-chartjs-2';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    ArcElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, ArcElement, Title, Tooltip, Legend);\n\nconst PieChart = () => {\n    // chart data\n    const donutChartData = {\n        labels: ['Desktops', 'Tablets', 'Mobiles'],\n        datasets: [\n            {\n                fill: true,\n                data: [300, 50, 100],\n                backgroundColor: ['#ff8acc', '#5b69bc', '#f9c851'],\n                borderColor: '#fff',\n            },\n        ],\n    };\n\n    // default options\n    const donutChartOpts = {\n        maintainAspectRatio: false,\n        cutoutPercentage: 800,\n        plugins: {\n            legend: {\n                display: true,\n            },\n        },\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title\">Pie Chart</h4>\n                <div className=\"mt-4 chartjs-chart\" style={{ height: '350px' }}>\n                    <Pie data={donutChartData} options={donutChartOpts} />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PieChart;\n","import { Doughnut } from 'react-chartjs-2';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    ArcElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, ArcElement, Title, Tooltip, Legend);\n\nconst DonutChart = () => {\n    // chart data\n    const donutChartData = {\n        labels: ['Direct', 'Affilliate', 'Sponsored'],\n        datasets: [\n            {\n                fill: true,\n                data: [300, 50, 100],\n                backgroundColor: ['#71b6f9', '#10c469', '#f9c851'],\n                borderColor: '#fff',\n            },\n        ],\n    };\n\n    // default options\n    const donutChartOpts = {\n        maintainAspectRatio: false,\n        cutout: '60%',\n        plugins: {\n            legend: {\n                display: true,\n            },\n        },\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title\">Donut Chart</h4>\n                <div className=\"mt-4 chartjs-chart\" style={{ height: '350px' }}>\n                    <Doughnut data={donutChartData} options={donutChartOpts} />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DonutChart;\n","import { Radar } from 'react-chartjs-2';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    RadialLinearScale,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, RadialLinearScale, Title, Tooltip, Legend);\n\nconst RadarChart = () => {\n    // chart data\n    const radarChartData = {\n        labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n        datasets: [\n            {\n                label: 'Desktops',\n                backgroundColor: 'rgba(81,83,85, 0.3)',\n                borderColor: '#ced4da',\n                pointBackgroundColor: '#ced4da',\n                pointBorderColor: '#fff',\n                pointHoverBackgroundColor: '#fff',\n                pointHoverBorderColor: '#ced4da',\n                data: [65, 59, 90, 81, 56, 55, 40],\n            },\n            {\n                label: 'Tablets',\n                backgroundColor: 'rgba(246,114,167,0.3)',\n                borderColor: '#f672a7',\n                pointBackgroundColor: '#f672a7',\n                pointBorderColor: '#fff',\n                pointHoverBackgroundColor: '#fff',\n                pointHoverBorderColor: '#f672a7',\n                data: [28, 48, 40, 19, 96, 27, 100],\n            },\n        ],\n    };\n\n    // default options\n    const radarChartOpts = {\n        maintainAspectRatio: false,\n        scales: {\n            r: {\n                ticks: {\n                    backdropColor: 'transparent',\n                },\n                grid: {\n                    color: 'rgba(150, 150, 150, 0.1)',\n                },\n                angleLines: {\n                    color: 'rgba(150, 150, 150, 0.1)',\n                },\n            },\n        },\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mb-3\">Radar Chart</h4>\n                <div className=\"mt-4 chartjs-chart\" style={{ height: '350px' }}>\n                    <Radar data={radarChartData} options={radarChartOpts} />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RadarChart;\n","import { PolarArea } from 'react-chartjs-2';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst PolarChart = () => {\n    // chart data\n    const polarChartData = {\n        labels: ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'],\n        datasets: [\n            {\n                label: 'My First Dataset',\n                data: [11, 16, 7, 3, 14],\n                backgroundColor: ['#ff8acc', '#5b69bc', '#f9c851', '#ced4da', '#10c469'],\n            },\n        ],\n    };\n\n    // default options\n    const polarChartOpts = {\n        maintainAspectRatio: false,\n        scales: {\n            r: {\n                ticks: {\n                    backdropColor: 'transparent',\n                },\n                angleLines: {\n                    color: 'rgba(150, 150, 150, 0.1)', // lines radiating from the center\n                },\n                grid: {\n                    color: 'rgba(150, 150, 150, 0.1)',\n                },\n            },\n        },\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title\">Polar area Chart</h4>\n                <div className=\"mt-4 chartjs-chart\" style={{ height: '350px' }}>\n                    <PolarArea data={polarChartData} options={polarChartOpts} />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PolarChart;\n","import { Col, Row } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// component\nimport LineChart from './LineChart';\nimport BarChart from './BarChart';\nimport PieChart from './PieChart';\nimport DonutChart from './DonutChart';\nimport RadarChart from './RadarChart';\nimport PolarChart from './PolarChart';\n\nconst ChartJs = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Chartjs Charts',\n        breadCrumbItems: [\n            {\n                label: 'Charts',\n                path: '/charts/chartjs',\n            },\n            {\n                label: 'Chartjs Charts',\n                path: '/charts/chartjs',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <>\n            <Row>\n                <Col xl={6}>\n                    <LineChart />\n                </Col>\n                <Col xl={6}>\n                    <BarChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <PieChart />\n                </Col>\n                <Col xl={6}>\n                    <DonutChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <PolarChart />\n                </Col>\n                <Col xl={6}>\n                    <RadarChart />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default ChartJs;\n"],"names":["ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Card","Dropdown","className","align","as","style","height","data","labels","datasets","label","fill","borderColor","tension","options","bezierCurve","maintainAspectRatio","hover","intersect","plugins","filler","propagate","legend","display","tooltip","zeroLineColor","scales","x","grid","color","drawBorder","y","ticks","stepSize","borderDash","fontColor","BarElement","backgroundColor","borderWidth","beginAtZero","stacked","ArcElement","cutoutPercentage","cutout","RadialLinearScale","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","r","backdropColor","angleLines","usePageTitle","title","breadCrumbItems","path","active","Row","Col","xl"],"sourceRoot":""}