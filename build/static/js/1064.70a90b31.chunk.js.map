{"version":3,"file":"static/js/1064.70a90b31.chunk.js","mappings":"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","sources":["pages/uikit/Images/ImageShape.tsx","pages/uikit/Images/ImageSizes.tsx","pages/uikit/Images/index.tsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import { Col, Row } from 'react-bootstrap';\n\n// images\nimport avatar6 from '../../../assets/images/users/user-6.jpg';\nimport img1 from '../../../assets/images/small/img-1.jpg';\nimport img2 from '../../../assets/images/small/img-3.jpg';\n\nconst ImageShapes = () => {\n    return (\n        <>\n            <h4 className=\"header-title\">Images shapes</h4>\n            <p className=\"sub-header\">\n                Add classes to an <code>&lt;img /&gt;</code> element to easily style images in any project.\n            </p>\n\n            <Row>\n                <Col sm={4}>\n                    <img src={img1} alt=\"\" className=\"img-fluid rounded\" width=\"200\" />\n                    <p className=\"mb-0\">\n                        <code>.rounded</code>\n                    </p>\n                </Col>\n\n                <Col sm={4} className=\"text-center\">\n                    <img src={avatar6} alt=\"\" className=\"img-fluid rounded-circle\" width=\"120\" />\n                    <p className=\"mb-0\">\n                        <code>.rounded-circle</code>\n                    </p>\n                </Col>\n\n                <Col sm={4}>\n                    <img src={img2} alt=\"\" className=\"img-fluid img-thumbnail\" width=\"200\" />\n                    <p className=\"mb-0\">\n                        <code>.img-thumbnail</code>\n                    </p>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default ImageShapes;\n","import { Col, Row } from 'react-bootstrap';\n\n// images\nimport avatar5 from '../../../assets/images/users/user-5.jpg';\n\nconst ImageSizes = () => {\n    return (\n        <>\n            <h4 className=\"header-title\">Image sizes</h4>\n            <p className=\"sub-header\">\n                Add classes to an <code>&lt;img /&gt;</code> element to easily style images in any project.\n            </p>\n\n            <Row>\n                <Col sm={3}>\n                    <img src={avatar5} alt=\"\" className=\"img-fluid avatar-xs rounded\" />\n                    <p className=\"mb-0\">\n                        <code>.avatar-xs</code>\n                    </p>\n                    <img src={avatar5} alt=\"\" className=\"img-fluid avatar-sm rounded mt-2\" />\n                    <p className=\"mb-0\">\n                        <code>.avatar-sm</code>\n                    </p>\n                </Col>\n\n                <Col sm={3}>\n                    <img src={avatar5} alt=\"\" className=\"img-fluid avatar-md rounded\" />\n                    <p className=\"mb-0\">\n                        <code>.avatar-md</code>\n                    </p>\n                </Col>\n\n                <Col sm={3}>\n                    <img src={avatar5} alt=\"\" className=\"img-fluid avatar-lg rounded\" />\n                    <p className=\"mb-0\">\n                        <code>.avatar-lg</code>\n                    </p>\n                </Col>\n\n                <Col sm={3}>\n                    <img src={avatar5} alt=\"\" className=\"img-fluid avatar-xl rounded\" />\n                    <p className=\"mb-0\">\n                        <code>.avatar-xl</code>\n                    </p>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default ImageSizes;\n","import { Card, Col, Row } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// component\nimport ImageShapes from './ImageShape';\nimport ImageSizes from './ImageSizes';\n\nconst Images = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Images',\n        breadCrumbItems: [\n            {\n                path: '/base-ui/images',\n                label: 'Base UI',\n            },\n            {\n                path: '/base-ui/images',\n                label: 'Images',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <Row>\n            <Col xs={12}>\n                <Card>\n                    <Card.Body>\n                        <Row>\n                            <Col xl={6}>\n                                <ImageShapes />\n                            </Col>\n                            <Col xl={6}>\n                                <ImageSizes />\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default Images;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["className","Row","Col","sm","src","img1","alt","width","avatar6","img2","avatar5","usePageTitle","title","breadCrumbItems","path","label","active","xs","Card","xl","ImageShape","CardImg","React","ref","bsPrefix","variant","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","context","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","BsComponent","Tag","resolvedPrefix","p"],"sourceRoot":""}