{"version":3,"file":"static/js/3610.d1640a2c.chunk.js","mappings":"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","sources":["pages/chart/ApexChart/LineChart.tsx","pages/chart/ApexChart/LineAnomationChart.tsx","pages/chart/ApexChart/SplineChart.tsx","pages/chart/ApexChart/StackedAreaChart.tsx","pages/chart/ApexChart/BarChart.tsx","pages/chart/ApexChart/StackedBarChart.tsx","pages/chart/ApexChart/DonutChart.tsx","pages/chart/ApexChart/PieChart.tsx","pages/chart/ApexChart/MixedChart.tsx","pages/chart/ApexChart/index.tsx"],"sourcesContent":["import Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// simple line chart\nconst LineChart = () => {\n    // default options\n    const apexLineChartWithLables: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'line',\n            zoom: {\n                enabled: false,\n            },\n            toolbar: {\n                show: false,\n            },\n        },\n        colors: ['#35b8e0', '#10c469'],\n        dataLabels: {\n            enabled: true,\n        },\n        stroke: {\n            width: [3, 3],\n            curve: 'smooth',\n        },\n        title: {\n            text: 'Average High & Low Temperature',\n            align: 'left',\n            style: {\n                fontSize: '14px',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f7f7f7',\n        },\n        markers: {\n            size: 6,\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n            title: {\n                text: 'Month',\n            },\n        },\n        yaxis: {\n            title: {\n                text: 'Temperature',\n            },\n            min: 5,\n            max: 40,\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    // chart data\n    const apexLineChartWithLablesData = [\n        {\n            name: 'High - 2018',\n            data: [28, 29, 33, 36, 32, 32, 33],\n        },\n        {\n            name: 'Low - 2018',\n            data: [12, 11, 14, 18, 17, 13, 13],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mb-3\">Line with Data Labels</h4>\n                <Chart\n                    options={apexLineChartWithLables}\n                    series={apexLineChartWithLablesData}\n                    type=\"line\"\n                    className=\"apex-charts\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineChart;\n","import Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// line chart with annotations\nconst LineAnnotationChart = () => {\n    // default options\n    const apexLineChartWithAnnotationOpts: ApexOptions = {\n        annotations: {\n            yaxis: [\n                {\n                    y: 8200,\n                    borderColor: '#10c469',\n                    label: {\n                        borderColor: '#10c469',\n                        style: {\n                            color: '#fff',\n                            background: '#10c469',\n                        },\n                        text: 'Support',\n                    },\n                },\n            ],\n            xaxis: [\n                {\n                    x: new Date('23 Nov 2017').getTime(),\n                    borderColor: '#5b69bc',\n                    label: {\n                        borderColor: '#5b69bc',\n                        style: {\n                            color: '#fff',\n                            background: '#5b69bc',\n                        },\n                        text: 'Anno Test',\n                    },\n                },\n                {\n                    x: new Date('03 Dec 2017').getTime(),\n                    borderColor: '#f9c851',\n                    label: {\n                        borderColor: '#f9c851',\n                        style: {\n                            color: '#fff',\n                            background: '#f9c851',\n                        },\n                        orientation: 'horizontal',\n                        text: 'New Beginning',\n                    },\n                },\n            ],\n            points: [\n                {\n                    x: new Date('27 Nov 2017').getTime(),\n                    y: 8506.9,\n                    marker: {\n                        size: 8,\n                        fillColor: '#fff',\n                        strokeColor: '#ff5b5b',\n                        radius: 2,\n                    },\n                    label: {\n                        borderColor: '#ff5b5b',\n                        offsetY: 0,\n                        style: {\n                            color: '#fff',\n                            background: '#ff5b5b',\n                        },\n\n                        text: 'Point Annotation',\n                    },\n                },\n            ],\n        },\n        chart: {\n            height: 380,\n            type: 'line',\n            id: 'areachart-2',\n        },\n        labels: [\n            '13 Nov 2017',\n            '14 Nov 2017',\n            '15 Nov 2017',\n            '16 Nov 2017',\n            '17 Nov 2017',\n            '20 Nov 2017',\n            '21 Nov 2017',\n            '22 Nov 2017',\n            '23 Nov 2017',\n            '24 Nov 2017',\n            '27 Nov 2017',\n            '28 Nov 2017',\n            '29 Nov 2017',\n            '30 Nov 2017',\n            '01 Dec 2017',\n            '04 Dec 2017',\n            '05 Dec 2017',\n            '06 Dec 2017',\n            '07 Dec 2017',\n            '08 Dec 2017',\n        ],\n        colors: ['#39afd1'],\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            width: [3],\n            curve: 'straight',\n        },\n        title: {\n            text: 'Line with Annotations',\n            align: 'left',\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f7f7f7',\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    // chart data\n    const apexLineChartWithAnnotationData = [\n        {\n            name: 'Prices',\n            data: [\n                8107.85, 8128, 8122.9, 8165.5, 8340.7, 8423.7, 8423.5, 8514.3, 8481.85, 8487.7, 8506.9, 8626.2, 8668.95,\n                8602.3, 8607.55, 8512.9, 8496.25, 8600.65, 8881.1, 9340.85,\n            ],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mb-3\">Line Chart with Annotations</h4>\n                <Chart\n                    options={apexLineChartWithAnnotationOpts}\n                    series={apexLineChartWithAnnotationData}\n                    type=\"line\"\n                    className=\"apex-charts\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineAnnotationChart;\n","import Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// SplineAreaChart\nconst SplineAreaChart = () => {\n    // default options\n    const apexAreaChart1Opts: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'area',\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            width: 3,\n            curve: 'smooth',\n        },\n        colors: ['#35b8e0', '#98a6ad'],\n        legend: {\n            offsetY: -10,\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n        },\n        tooltip: {\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f7f7f7',\n        },\n    };\n\n    // chart data\n    const apexAreaChart1Data = [\n        {\n            name: 'Series 1',\n            data: [31, 40, 28, 51, 42, 109, 100],\n        },\n        {\n            name: 'Series 2',\n            data: [11, 32, 45, 32, 34, 52, 41],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mb-3\">Spline Area</h4>\n                <Chart options={apexAreaChart1Opts} series={apexAreaChart1Data} type=\"area\" className=\"apex-charts\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default SplineAreaChart;\n","import Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// StackedAreaChart\nconst StackedAreaChart = () => {\n    // default options\n    const apexAreaChart2Opts: ApexOptions = {\n        chart: {\n            height: 422,\n            type: 'area',\n            stacked: true,\n            events: {\n                selection: (chart, e) => {\n                    console.log(new Date(e.xaxis.min));\n                },\n            },\n        },\n        colors: ['#35b8e0', '#10c469', '#98a6ad'],\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            width: 2,\n            curve: 'smooth',\n        },\n        fill: {\n            gradient: {\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n            },\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f7f7f7',\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                },\n            },\n        ],\n    };\n\n    /*\n     * generate day wise time series\n     */\n    const generateDayWiseTimeSeries = (baseval: number, count: number, yrange: { min: number; max: number }) => {\n        var i = 0;\n        var series = [];\n        while (i < count) {\n            var x = baseval;\n            var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n            series.push([x, y]);\n            baseval += 86400000;\n            i++;\n        }\n        return series;\n    };\n\n    // chart data\n    const apexAreaChart2Data = [\n        {\n            name: 'South',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 60,\n            }),\n        },\n        {\n            name: 'North',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 20,\n            }),\n        },\n\n        {\n            name: 'Central',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 15,\n            }),\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mb-3\">Stacked Area</h4>\n                <Chart options={apexAreaChart2Opts} series={apexAreaChart2Data} type=\"area\" className=\"apex-charts\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StackedAreaChart;\n","import Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// simple bar chart\nconst BarChart = () => {\n    // default options\n    const apexBarChartOpts: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'bar',\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                dataLabels: {\n                    position: 'top',\n                },\n            },\n        },\n        dataLabels: {\n            enabled: true,\n            offsetX: -6,\n            style: {\n                fontSize: '12px',\n                colors: ['#fff'],\n            },\n        },\n        colors: ['#ff5b5b', '#98a6ad'],\n        stroke: {\n            show: true,\n            width: 1,\n            colors: ['#fff'],\n        },\n\n        xaxis: {\n            categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n        },\n        legend: {\n            offsetY: -10,\n        },\n        states: {\n            hover: {\n                filter: {\n                    type: 'none',\n                },\n            },\n        },\n        grid: {\n            borderColor: '#f7f7f7',\n        },\n    };\n\n    // chart data\n    const apexBarChartData = [\n        {\n            name: 'Series 1',\n            data: [44, 55, 41, 64, 22, 43, 21],\n        },\n        {\n            name: 'Series 2',\n            data: [53, 32, 33, 52, 13, 44, 32],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mb-3\">Bar Chart</h4>\n                <Chart options={apexBarChartOpts} series={apexBarChartData} type=\"bar\" className=\"apex-charts\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarChart;\n","import Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// stacked bar chart\nconst StackedBarChart = () => {\n    // default options\n    const apexBarChartStackedOpts: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'bar',\n            stacked: true,\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            },\n        },\n        stroke: {\n            show: false,\n        },\n        xaxis: {\n            categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n            labels: {\n                formatter: (val: string) => {\n                    return val + 'K';\n                },\n            },\n        },\n        yaxis: {\n            title: {\n                text: undefined,\n            },\n        },\n        colors: ['#35b8e0', '#98a6ad', '#10c469', '#ff5b5b', '#f9c851'],\n        tooltip: {\n            y: {\n                formatter: (val: number) => {\n                    return val + 'K';\n                },\n            },\n        },\n        fill: {\n            opacity: 1,\n        },\n        states: {\n            hover: {\n                filter: {\n                    type: 'none',\n                },\n            },\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'center',\n        },\n        grid: {\n            borderColor: '#f7f7f7',\n        },\n    };\n\n    // chart data\n    const apexBarChartStackedData = [\n        {\n            name: 'Marine Sprite',\n            data: [44, 55, 41, 37, 22, 43, 21],\n        },\n        {\n            name: 'Striking Calf',\n            data: [53, 32, 33, 52, 13, 43, 32],\n        },\n        {\n            name: 'Tank Picture',\n            data: [12, 17, 11, 9, 15, 11, 20],\n        },\n        {\n            name: 'Bucket Slope',\n            data: [9, 7, 5, 8, 6, 9, 4],\n        },\n        {\n            name: 'Reborn Kid',\n            data: [25, 12, 19, 32, 25, 24, 10],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mb-3\">Stacked Bar Chart</h4>\n                <Chart\n                    options={apexBarChartStackedOpts}\n                    series={apexBarChartStackedData}\n                    type=\"bar\"\n                    className=\"apex-charts\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StackedBarChart;\n","import Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// simple donut chart\nconst DonutChart = () => {\n    // default options\n    const apexDonutOpts: ApexOptions = {\n        chart: {\n            height: 320,\n            type: 'pie',\n        },\n        labels: ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'],\n        colors: ['#35b8e0', '#98a6ad', '#10c469', '#ff5b5b', '#f9c851'],\n        legend: {\n            show: true,\n            position: 'bottom',\n            horizontalAlign: 'center',\n            floating: false,\n            fontSize: '14px',\n            offsetX: 0,\n            offsetY: -10,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        height: 240,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    // chart data\n    const apexDonutData = [44, 55, 41, 17, 15];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mb-3\">Donut Chart</h4>\n                <Chart\n                    options={apexDonutOpts}\n                    series={apexDonutData}\n                    type=\"donut\"\n                    height={320}\n                    className=\"apex-charts\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DonutChart;\n","import Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// simple pie chart\nconst PieChart = () => {\n    // default options\n    const apexDonutOpts: ApexOptions = {\n        chart: {\n            height: 320,\n            type: 'pie',\n        },\n        labels: ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'],\n        colors: ['#35b8e0', '#98a6ad', '#10c469', '#ff5b5b', '#f9c851'],\n        legend: {\n            show: true,\n            position: 'bottom',\n            horizontalAlign: 'center',\n            floating: false,\n            fontSize: '14px',\n            offsetX: 0,\n            offsetY: -10,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        height: 240,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    // chart data\n    const apexDonutData = [44, 55, 41, 17, 15];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mb-3\">Pie Chart</h4>\n                <Chart options={apexDonutOpts} series={apexDonutData} type=\"pie\" height={320} className=\"apex-charts\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PieChart;\n","import Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// Mixed chart\nconst MixedChart = () => {\n    // default options\n    const apexMixedOpts: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'line',\n            stacked: false,\n            toolbar: {\n                show: false,\n            },\n        },\n        stroke: {\n            width: [0, 2, 4],\n            curve: 'smooth',\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: '50%',\n            },\n        },\n        colors: ['#35b8e0', '#39afd1', '#ff5b5b'],\n        fill: {\n            opacity: [0.85, 0.25, 1],\n            gradient: {\n                inverseColors: false,\n                shade: 'light',\n                type: 'vertical',\n                opacityFrom: 0.85,\n                opacityTo: 0.55,\n                stops: [0, 100, 100, 100],\n            },\n        },\n        labels: [\n            '01/01/2003',\n            '02/01/2003',\n            '03/01/2003',\n            '04/01/2003',\n            '05/01/2003',\n            '06/01/2003',\n            '07/01/2003',\n            '08/01/2003',\n            '09/01/2003',\n            '10/01/2003',\n            '11/01/2003',\n        ],\n        markers: {\n            size: 0,\n        },\n        legend: {\n            offsetY: -10,\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        yaxis: {\n            title: {\n                text: 'Points',\n            },\n        },\n        tooltip: {\n            shared: true,\n            intersect: false,\n            y: {\n                formatter: function (y) {\n                    if (typeof y !== 'undefined') {\n                        return y.toFixed(0) + ' points';\n                    }\n                    return y;\n                },\n            },\n        },\n        grid: {\n            borderColor: '#f7f7f7',\n        },\n    };\n\n    // chart data\n    const apexMixedData = [\n        {\n            name: 'Team A',\n            type: 'column',\n            data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30],\n        },\n        {\n            name: 'Team B',\n            type: 'area',\n            data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43],\n        },\n        {\n            name: 'Team C',\n            type: 'line',\n            data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mb-3\">Line, Bar and Area (Mixed)</h4>\n                <Chart\n                    options={apexMixedOpts}\n                    series={apexMixedData}\n                    type=\"line\"\n                    height={320}\n                    className=\"apex-charts\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MixedChart;\n","import { Col, Row } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// component\nimport LineChart from './LineChart';\nimport LineAnnotationChart from './LineAnomationChart';\nimport SplineAreaChart from './SplineChart';\nimport StackedAreaChart from './StackedAreaChart';\nimport BarChart from './BarChart';\nimport StackedBarChart from './StackedBarChart';\nimport DonutChart from './DonutChart';\nimport PieChart from './PieChart';\nimport MixedChart from './MixedChart';\n\nconst ApexChart = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Apex Charts',\n        breadCrumbItems: [\n            {\n                label: 'Charts',\n                path: '/charts/apex',\n            },\n            {\n                label: 'Apex Charts',\n                path: '/charts/apex',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <>\n            <Row>\n                <Col xl={6}>\n                    <LineChart />\n                </Col>\n                <Col xl={6}>\n                    <LineAnnotationChart />\n                </Col>\n            </Row>\n            <Row>\n                <Col xl={6}>\n                    <SplineAreaChart />\n                </Col>\n                <Col xl={6}>\n                    <StackedAreaChart />\n                </Col>\n            </Row>\n            <Row>\n                <Col xl={6}>\n                    <BarChart />\n                </Col>\n                <Col xl={6}>\n                    <StackedBarChart />\n                </Col>\n            </Row>\n            <Row>\n                <Col xl={6}>\n                    <DonutChart />\n                </Col>\n                <Col xl={6}>\n                    <PieChart />\n                </Col>\n            </Row>\n            <Row>\n                <Col xl={6}>\n                    <MixedChart />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default ApexChart;\n"],"names":["Card","Dropdown","className","align","as","options","chart","height","type","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","title","text","style","fontSize","grid","row","opacity","borderColor","markers","size","xaxis","categories","yaxis","min","max","legend","position","horizontalAlign","floating","offsetY","offsetX","responsive","breakpoint","series","name","data","apexLineChartWithAnnotationOpts","annotations","y","label","color","background","x","Date","getTime","orientation","points","marker","fillColor","strokeColor","radius","id","labels","tooltip","fixed","apexAreaChart2Opts","stacked","events","selection","e","console","log","fill","gradient","opacityFrom","opacityTo","generateDayWiseTimeSeries","baseval","count","yrange","i","Math","floor","random","push","apexAreaChart2Data","plotOptions","bar","horizontal","states","hover","filter","apexBarChartStackedOpts","formatter","val","undefined","columnWidth","inverseColors","shade","stops","shared","intersect","toFixed","usePageTitle","breadCrumbItems","path","active","Row","Col","xl"],"sourceRoot":""}