{"version":3,"file":"static/js/3110.e59ae7c1.chunk.js","mappings":"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","sources":["pages/uikit/Progress/DefaultProgress.tsx","pages/uikit/Progress/ContextualAlternatives.tsx","pages/uikit/Progress/Striped.tsx","pages/uikit/Progress/Sizes.tsx","pages/uikit/Progress/index.tsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import { Card, ProgressBar } from 'react-bootstrap';\n\nconst DefaultProgress = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Basic Example</h4>\n                <p className=\"sub-header\">Default progress bar.</p>\n\n                <ProgressBar now={0} className=\"mb-3\" />\n                <ProgressBar now={33} className=\"mb-3\" />\n                <ProgressBar now={66} className=\"mb-3\" />\n                <ProgressBar now={100} className=\"mb-3\" />\n                <ProgressBar now={25} label={'25%'} className=\"mb-0\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DefaultProgress;\n","import { Card, ProgressBar } from 'react-bootstrap';\n\nconst ContextualAlternatives = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Contextual alternatives</h4>\n                <p className=\"sub-header\">\n                    Progress bars use some of the same button and alert classes for consistent styles.\n                </p>\n\n                <ProgressBar now={25} variant=\"success\" className=\"mb-3\" />\n                <ProgressBar now={50} variant=\"info\" className=\"mb-3\" />\n                <ProgressBar now={75} variant=\"warning\" className=\"mb-3\" />\n                <ProgressBar now={100} variant=\"danger\" className=\"mb-3\" />\n                <ProgressBar className=\"mb-0\">\n                    <ProgressBar now={15} key={1} />\n                    <ProgressBar variant=\"success\" now={30} key={2} />\n                    <ProgressBar variant=\"info\" now={20} key={3} />\n                </ProgressBar>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ContextualAlternatives;\n","import { Card, ProgressBar } from 'react-bootstrap';\n\nconst Striped = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Striped example</h4>\n                <p className=\"sub-header\">Uses a gradient to create a striped effect.</p>\n\n                <ProgressBar now={10} className=\"mb-3\" striped />\n                <ProgressBar now={25} className=\"mb-3\" variant=\"success\" striped />\n                <ProgressBar now={50} className=\"mb-3\" variant=\"info\" striped />\n                <ProgressBar now={75} className=\"mb-3\" variant=\"warning\" striped />\n                <ProgressBar now={100} className=\"mb-3\" variant=\"danger\" striped />\n                <ProgressBar now={75} className=\"mb-0\" striped animated />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Striped;\n","import { Card, ProgressBar } from 'react-bootstrap';\n\nconst Sizes = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Size example</h4>\n                <p className=\"sub-header\">\n                    We only set a <code>height</code> value on the <code>.progress</code>, so if you change that value\n                    the inner <code>.progress-bar</code> will automatically resize accordingly.\n                </p>\n\n                <ProgressBar now={70} className=\"mb-3\" style={{ height: 1 }} />\n                <ProgressBar now={30} className=\"progress-sm mb-3\" />\n                <ProgressBar now={25} className=\"mb-3 progress-md\" variant=\"success\" />\n                <ProgressBar now={50} className=\"mb-3 progress-lg\" variant=\"info\" />\n                <ProgressBar now={75} className=\"mb-3 progress-xl\" variant=\"warning\" />\n                <ProgressBar now={38} className=\"mb-0 progress-xxl\" variant=\"danger\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Sizes;\n","import { Col, Row } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// components\nimport DefaultProgress from './DefaultProgress';\nimport ContextualAlternatives from './ContextualAlternatives';\nimport Striped from './Striped';\nimport Sizes from './Sizes';\n\nconst Progress = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Progress',\n        breadCrumbItems: [\n            {\n                path: '/base-ui/progress',\n                label: 'Base UI',\n            },\n            {\n                path: '/base-ui/progress',\n                label: 'Progress',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <>\n            <Row>\n                <Col md={6}>\n                    <DefaultProgress />\n                </Col>\n                <Col md={6}>\n                    <ContextualAlternatives />\n                </Col>\n            </Row>\n            <Row>\n                <Col md={6}>\n                    <Striped />\n                </Col>\n                <Col md={6}>\n                    <Sizes />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Progress;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\n\n\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\n\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["Card","className","ProgressBar","now","label","variant","striped","animated","style","height","usePageTitle","title","breadCrumbItems","path","active","Row","Col","md","CardImg","React","ref","bsPrefix","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","context","map","func","index","child","forEach","hasChildOfType","type","some","getPercentage","min","max","percentage","Math","round","renderProgressBar","visuallyHidden","role","width","isChild","wrapperProps","cloneElement","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","BsComponent","Tag","resolvedPrefix","p"],"sourceRoot":""}