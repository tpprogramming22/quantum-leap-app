{"version":3,"file":"static/js/5433.8da1bbd9.chunk.js","mappings":"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","sources":["components/Reminders.tsx","components/TeamMembers.tsx","pages/apps/Contacts/Profile/data.ts","pages/apps/Contacts/Profile/UserBox.tsx","pages/apps/Contacts/Profile/NewPost.tsx","pages/apps/Contacts/Profile/CommentBox.tsx","pages/apps/Contacts/Profile/index.tsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import classNames from 'classnames';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// types\nimport { Reminder } from '../pages/apps/Contacts/Profile/types';\n\ntype RemindersProps = {\n    reminder: Reminder[];\n};\n\nconst Reminders = ({ reminder }: RemindersProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mt-0 mb-3\">\n                    <i className=\"mdi mdi-notification-clear-all me-1\"></i>\n                    Upcoming Reminders\n                </h4>\n                <ul className=\"list-group mb-0 user-list\">\n                    {(reminder || []).map((reminder, index) => {\n                        return (\n                            <li className=\"list-group-item\" key={index.toString()}>\n                                <Link to=\"#\" className=\"user-list-item\">\n                                    <div className=\"user float-start me-3\">\n                                        <i className={classNames('mdi mdi-circle', 'text-' + reminder.variant)}></i>\n                                    </div>\n                                    <div className=\"user-desc overflow-hidden\">\n                                        <h5 className=\"name mt-0 mb-1\">{reminder.title}</h5>\n                                        <span className=\"desc text-muted font-12 text-truncate d-block\">\n                                            {reminder.date} - {reminder.time}\n                                        </span>\n                                    </div>\n                                </Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Reminders;\n","import { Card, Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// types\nimport { TeamMember } from '../pages/apps/Contacts/Profile/types';\n\ntype TeamMembersProps = {\n    members: TeamMember[];\n};\n\nconst TeamMembers = ({ members }: TeamMembersProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mt-0 mb-3\">My Team Members</h4>\n                <ul className=\"list-group mb-0 user-list\">\n                    {(members || []).map((member, index) => {\n                        return (\n                            <li className=\"list-group-item\" key={index.toString()}>\n                                <Link to=\"#\" className=\"user-list-item\">\n                                    <div className=\"user avatar-sm float-start me-2\">\n                                        <img src={member.avatar} alt=\"member\" className=\"img-fluid rounded-circle\" />\n                                    </div>\n                                    <div className=\"user-desc\">\n                                        <h5 className=\"name mt-0 mb-1\">{member.name}</h5>\n                                        <p className=\"desc text-muted mb-0 font-12\">{member.designation}</p>\n                                    </div>\n                                </Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default TeamMembers;\n","// types\nimport { Post, Reminder, TeamMember } from './types';\n\n// images\nimport avatar1 from '../../../../assets/images/users/user-1.jpg';\nimport avatar2 from '../../../../assets/images/users/user-2.jpg';\nimport avatar3 from '../../../../assets/images/users/user-3.jpg';\nimport avatar4 from '../../../../assets/images/users/user-4.jpg';\nimport avatar5 from '../../../../assets/images/users/user-5.jpg';\nimport avatar6 from '../../../../assets/images/users/user-6.jpg';\nimport avatar7 from '../../../../assets/images/users/user-7.jpg';\n\nimport img1 from '../../../../assets/images/small/img-1.jpg';\nimport img2 from '../../../../assets/images/small/img-2.jpg';\nimport img3 from '../../../../assets/images/small/img-3.jpg';\n\nconst members: TeamMember[] = [\n    {\n        avatar: avatar2,\n        name: 'Michael Zenaty',\n        designation: 'CEO',\n    },\n    {\n        avatar: avatar3,\n        name: 'James Neon',\n        designation: 'Web Designer',\n    },\n    {\n        avatar: avatar4,\n        name: 'John Smith',\n        designation: 'Web Developer',\n    },\n    {\n        avatar: avatar5,\n        name: 'Michael Zenaty',\n        designation: 'Programmer',\n    },\n    {\n        avatar: avatar6,\n        name: 'Mat Helme',\n        designation: 'Manager',\n    },\n];\n\nconst reminder: Reminder[] = [\n    {\n        variant: 'primary',\n        title: 'Meet Manager',\n        date: 'February 24, 2019',\n        time: '10.30am to 12.45pm',\n    },\n    {\n        variant: 'success',\n        title: 'Project Discussion',\n        date: 'February 25, 2019',\n        time: '10.30am to 12.45pm',\n    },\n    {\n        variant: 'info',\n        title: 'Meet Manager',\n        date: 'February 26, 2019',\n        time: '10.30am to 12.45pm',\n    },\n    {\n        variant: 'secondary',\n        title: 'Project Discussion',\n        date: 'February 27, 2019',\n        time: '10.30am to 12.45pm',\n    },\n    {\n        variant: 'danger',\n        title: 'Meet Manager',\n        date: 'February 28, 2019',\n        time: '10.30am to 12.45pm',\n    },\n];\n\nconst posts: Post[] = [\n    {\n        avatar: avatar1,\n        name: 'Adam Jansen',\n        time: 'about 2 minutes ago',\n        content: {\n            message: 'Story based around the idea of time lapse, animation to post soon!',\n            media: [img1, img2, img3],\n        },\n        comments: [\n            {\n                avatar: avatar3,\n                name: 'John Smith',\n                time: 'about 1 minutes ago',\n                content: {\n                    message: 'Wow impressive!',\n                },\n            },\n            {\n                avatar: avatar4,\n                name: 'Matt Cheuvront',\n                time: 'about 2 minutes ago',\n                content: {\n                    message: 'Wow, that is really nice.',\n                },\n                replies: [\n                    {\n                        avatar: avatar5,\n                        name: 'Stephanie Walter',\n                        time: 'about 3 minutes ago',\n                        content: {\n                            message: 'Nice work, makes me think of The Money Pit.',\n                        },\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        avatar: avatar6,\n        name: 'John Smith',\n        time: 'about 4 minutes ago',\n        content: {\n            message: 'i am in the middle of a timelapse animation myself!(Very different though.) Awesome stuff.',\n        },\n    },\n    {\n        avatar: avatar7,\n        name: 'Nicolai Larson',\n        time: 'about 10 hour ago',\n        content: {\n            message: 'The parallax is a little odd but O.o that house build is awesome!!',\n        },\n    },\n];\n\nexport { members, reminder, posts };\n","import { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// images\nimport profileImg from '../../../../assets/images/users/profile.jpg';\n\nconst UserBox = () => {\n    return (\n        <Card>\n            <Card.Body className=\"bg-picture\">\n                <div className=\"d-flex align-items-top\">\n                    <img\n                        src={profileImg}\n                        alt=\"profileImage\"\n                        className=\"flex-shrink-0 rounded-circle avatar-xl img-thumbnail float-start me-3\"\n                    />\n                    <div className=\"flex-grow-1 overflow-hidden\">\n                        <h4 className=\"m-0\">Alexandra Clarkson</h4>\n                        <p className=\"text-muted\">\n                            <i>Web Designer</i>\n                        </p>\n                        <p className=\"font-13\">\n                            Hi I'm Alexandra Clarkson,has been the industry's standard dummy text ever since the 1500s,\n                            when an unknown printer took a galley of type.Contrary to popular belief, Lorem Ipsum is not\n                            simply random text. It has roots in a piece of classical Latin literature it over 2000 years\n                            to popular belief Ipsum is not simplyrandom text.\n                        </p>\n\n                        <ul className=\"social-list list-inline mt-3 mb-0\">\n                            <li className=\"list-inline-item\">\n                                <Link to=\"#\" className=\"social-list-item border-purple text-purple\">\n                                    <i className=\"mdi mdi-facebook\"></i>\n                                </Link>\n                            </li>\n                            <li className=\"list-inline-item\">\n                                <Link to=\"#\" className=\"social-list-item border-danger text-danger\">\n                                    <i className=\"mdi mdi-google\"></i>\n                                </Link>\n                            </li>\n                            <li className=\"list-inline-item\">\n                                <Link to=\"#\" className=\"social-list-item border-info text-info\">\n                                    <i className=\"mdi mdi-twitter\"></i>\n                                </Link>\n                            </li>\n                            <li className=\"list-inline-item\">\n                                <Link to=\"#\" className=\"social-list-item border-secondary text-secondary\">\n                                    <i className=\"mdi mdi-github\"></i>\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default UserBox;\n","import { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst NewPost = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <form className=\"comment-area-box\">\n                    <span className=\"input-icon icon-end\">\n                        <textarea rows={3} className=\"form-control\" placeholder=\"Post a new message\"></textarea>\n                    </span>\n                    <div className=\"pt-1 float-end\">\n                        <Link to=\"#\" className=\"btn btn-info btn-sm waves-effect waves-light\">\n                            Send\n                        </Link>\n                    </div>\n\n                    <ul className=\"nav nav-pills profile-pills mt-1\">\n                        <li>\n                            <Link to=\"#\">\n                                <i className=\"fa fa-user\"></i>\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to=\"#\">\n                                <i className=\"fa fa-location-arrow\"></i>\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to=\"#\">\n                                <i className=\"fa fa-camera\"></i>\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to=\"#\">\n                                <i className=\"far fa-smile\"></i>\n                            </Link>\n                        </li>\n                    </ul>\n                </form>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default NewPost;\n","import classNames from 'classnames';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// types\nimport { Post } from './types';\n\ntype CommentsProps = {\n    posts: Post[];\n};\n\nconst CommentBox = ({ posts }: CommentsProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                {(posts || []).map((post, index) => {\n                    return (\n                        <div\n                            className={classNames('d-flex', 'align-items-top', index === 0 ? 'mb-2' : 'mb-3')}\n                            key={index.toString()}\n                        >\n                            <img\n                                src={post.avatar}\n                                alt=\"avatar\"\n                                className=\"flex-shrink-0 comment-avatar avatar-sm rounded me-2\"\n                            />\n                            <div className=\"flex-grow-1\">\n                                <h5 className=\"mt-0\">\n                                    <Link to=\"#\" className=\"text-dark\">\n                                        {post.name}\n                                        <small className=\"ms-1 text-muted\">{post.time}</small>\n                                    </Link>\n                                </h5>\n                                <p>{post.content.message}</p>\n                                <div>\n                                    {(post.content.media || []).map((item, index) => {\n                                        return (\n                                            <Link to=\"#\" key={index.toString()}>\n                                                <img src={item} alt=\"media\" className=\"avatar-md rounded me-1\" />\n                                            </Link>\n                                        );\n                                    })}\n                                </div>\n                                <div\n                                    className={classNames('comment-footer', {\n                                        'mb-3': post.comments && post.comments!.length > 0,\n                                        'pt-2': post.content.media,\n                                    })}\n                                >\n                                    <Link to=\"#\">\n                                        <i className=\"far fa-thumbs-up\" />\n                                    </Link>\n                                    <Link to=\"#\">\n                                        <i className=\"far fa-thumbs-down\" />\n                                    </Link>\n                                    <Link to=\"#\">Reply</Link>\n                                </div>\n                                {(post.comments || []).map((comment, index) => {\n                                    return (\n                                        <div\n                                            className={classNames('d-flex', 'align-items-top', {\n                                                'mb-2':\n                                                    post.comments &&\n                                                    post.comments!.length > 0 &&\n                                                    index < post.comments.length - 1,\n                                            })}\n                                            key={index.toString()}\n                                        >\n                                            <img\n                                                src={comment.avatar}\n                                                alt=\"avatar\"\n                                                className=\"flex-shrink-0 comment-avatar avatar-sm rounded me-2\"\n                                            />\n                                            <div className=\"flex-grow-1\">\n                                                <h5 className=\"mt-0\">\n                                                    <Link to=\"#\" className=\"text-dark\">\n                                                        {comment.name}\n                                                        <small className=\"ms-1 text-muted\">{comment.time}</small>\n                                                    </Link>\n                                                </h5>\n                                                <p>{comment.content.message}</p>\n                                                <div\n                                                    className={classNames('comment-footer', {\n                                                        'mb-3': comment.replies && comment.replies!.length > 0,\n                                                    })}\n                                                >\n                                                    <Link to=\"#\">\n                                                        <i className=\"far fa-thumbs-up\" />\n                                                    </Link>\n                                                    <Link to=\"#\">\n                                                        <i className=\"far fa-thumbs-down\" />\n                                                    </Link>\n                                                    <Link to=\"#\">Reply</Link>\n                                                </div>\n                                                {(comment.replies || []).map((reply, index) => {\n                                                    return (\n                                                        <div\n                                                            className={classNames('d-flex', 'align-items-top', {\n                                                                'mb-2':\n                                                                    comment.replies &&\n                                                                    comment.replies!.length > 0 &&\n                                                                    index === comment.replies.length - 1,\n                                                            })}\n                                                            key={index.toString()}\n                                                        >\n                                                            <img\n                                                                src={reply.avatar}\n                                                                alt=\"avatar\"\n                                                                className=\"flex-shrink-0 comment-avatar avatar-sm rounded me-2\"\n                                                            />\n                                                            <div className=\"flex-grow-1\">\n                                                                <h5 className=\"mt-0\">\n                                                                    <Link to=\"#\" className=\"text-dark\">\n                                                                        {reply.name}\n                                                                        <small className=\"ms-1 text-muted\">\n                                                                            {reply.time}\n                                                                        </small>\n                                                                    </Link>\n                                                                </h5>\n                                                                <p>{reply.content.message}</p>\n                                                                <div className=\"comment-footer\">\n                                                                    <Link to=\"#\">\n                                                                        <i className=\"far fa-thumbs-up\" />\n                                                                    </Link>\n                                                                    <Link to=\"#\">\n                                                                        <i className=\"far fa-thumbs-down\" />\n                                                                    </Link>\n                                                                    <Link to=\"#\">Reply</Link>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    );\n                                                })}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    );\n                })}\n                <div className=\"text-center\">\n                    <Link to=\"#\" className=\"text-danger\">\n                        <i className=\"mdi mdi-spin mdi-loading me-1\"></i> Load more\n                    </Link>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CommentBox;\n","import { Col, Row } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../../hooks';\n\n// components\nimport TeamMembers from '../../../../components/TeamMembers';\nimport Reminders from '../../../../components/Reminders';\n\nimport UserBox from './UserBox';\nimport NewPost from './NewPost';\nimport CommentBox from './CommentBox';\n\n// dummy data\nimport { members, posts, reminder } from './data';\n\nconst Profile = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Profile',\n        breadCrumbItems: [\n            {\n                path: '/apps/contacts/profile',\n                label: 'Contacts',\n            },\n            {\n                path: '/apps/contacts/profile',\n                label: 'Profile',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <Row>\n            <Col sm={8}>\n                <UserBox />\n                <NewPost />\n                <CommentBox posts={posts} />\n            </Col>\n            <Col sm={4}>\n                <TeamMembers members={members} />\n                <Reminders reminder={reminder} />\n            </Col>\n        </Row>\n    );\n};\n\nexport default Profile;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["reminder","className","align","as","map","index","to","classNames","variant","title","date","time","toString","members","member","src","avatar","alt","name","designation","avatar2","avatar3","avatar4","avatar5","avatar6","posts","avatar1","content","message","media","img1","img2","img3","comments","replies","avatar7","Card","profileImg","rows","placeholder","post","item","length","comment","reply","usePageTitle","breadCrumbItems","path","label","active","Row","Col","sm","TeamMembers","Reminders","CardImg","React","ref","bsPrefix","Component","props","prefix","useBootstrapPrefix","_jsx","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","context","p"],"sourceRoot":""}