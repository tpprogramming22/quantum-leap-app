{"version":3,"file":"static/js/5136.df8db65e.chunk.js","mappings":"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","sources":["pages/uikit/SweetAlerts/Alerts.tsx","pages/uikit/SweetAlerts/index.tsx"],"sourcesContent":["import { withSwal } from 'react-sweetalert2';\n\n// images\nimport logosm from '../../../assets/images/logo-sm.png';\n\nconst Alerts = withSwal((props: any) => {\n    const { swal } = props;\n\n    let timerInterval: NodeJS.Timeout;\n\n    return (\n        <table className=\"table table-borderless table-centered mb-0\">\n            <thead className=\"table-light\">\n                <tr>\n                    <th style={{ width: '50%' }}>Alert Type</th>\n                    <th>Example</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>A basic message</td>\n                    <td>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-info btn-xs\"\n                            id=\"sa-basic\"\n                            onClick={() =>\n                                swal.fire({\n                                    title: 'Any fool can use a computer!',\n                                })\n                            }\n                        >\n                            Click me\n                        </button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>A title with a text under</td>\n                    <td>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-info btn-xs\"\n                            id=\"sa-title\"\n                            onClick={() =>\n                                swal.fire({\n                                    title: 'The Internet?',\n                                    text: 'That thing is still around?',\n                                    icon: 'question',\n                                })\n                            }\n                        >\n                            Click me\n                        </button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>A success message!</td>\n                    <td>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-info btn-xs\"\n                            id=\"sa-success\"\n                            onClick={() =>\n                                swal.fire({\n                                    title: 'Good job!',\n                                    text: 'You clicked the button!',\n                                    icon: 'success',\n                                })\n                            }\n                        >\n                            Click me\n                        </button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>A modal window with a long content inside:</td>\n                    <td>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-info btn-xs\"\n                            id=\"sa-long-content\"\n                            onClick={() =>\n                                swal.fire({\n                                    imageUrl: 'https://placeholder.pics/svg/300x1500',\n                                    imageHeight: 1500,\n                                    imageAlt: 'A tall image',\n                                })\n                            }\n                        >\n                            Click me\n                        </button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>A custom positioned dialog</td>\n                    <td>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-info btn-xs\"\n                            id=\"sa-custom-position\"\n                            onClick={() =>\n                                swal.fire({\n                                    position: 'top-end',\n                                    icon: 'success',\n                                    title: 'Your work has been saved',\n                                    showConfirmButton: false,\n                                    timer: 1500,\n                                })\n                            }\n                        >\n                            Click me\n                        </button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>A modal with a title, an error icon, a text, and a footer</td>\n                    <td>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-info btn-xs\"\n                            id=\"sa-error\"\n                            onClick={() =>\n                                swal.fire({\n                                    icon: 'error',\n                                    title: 'Oops...',\n                                    text: 'Something went wrong!',\n                                    footer: '<a href>Why do I have this issue?</a>',\n                                })\n                            }\n                        >\n                            Click me\n                        </button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>A confirm dialog, with a function attached to the \"Confirm\"-button...</td>\n                    <td>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-info btn-xs\"\n                            id=\"sa-warning\"\n                            onClick={() =>\n                                swal\n                                    .fire({\n                                        title: 'Are you sure?',\n                                        text: \"You won't be able to revert this!\",\n                                        icon: 'warning',\n                                        showCancelButton: true,\n                                        confirmButtonColor: '#28bb4b',\n                                        cancelButtonColor: '#f34e4e',\n                                        confirmButtonText: 'Yes, delete it!',\n                                    })\n                                    .then(function (result: { value: any }) {\n                                        if (result.value) {\n                                            swal.fire('Deleted!', 'Your file has been deleted.', 'success');\n                                        }\n                                    })\n                            }\n                        >\n                            Click me\n                        </button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>By passing a parameter, you can execute something else for \"Cancel\".</td>\n                    <td>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-info btn-xs\"\n                            id=\"sa-params\"\n                            onClick={() =>\n                                swal\n                                    .fire({\n                                        title: 'Are you sure?',\n                                        text: \"You won't be able to revert this!\",\n                                        icon: 'warning',\n                                        showCancelButton: true,\n                                        confirmButtonText: 'Yes, delete it!',\n                                        cancelButtonText: 'No, cancel!',\n                                        confirmButtonClass: 'btn btn-success mt-2',\n                                        cancelButtonClass: 'btn btn-danger ms-2 mt-2',\n                                        buttonsStyling: false,\n                                    })\n                                    .then(function (result: { value: any; dismiss: any }) {\n                                        if (result.value) {\n                                            swal.fire({\n                                                title: 'Deleted!',\n                                                text: 'Your file has been deleted.',\n                                                icon: 'success',\n                                                confirmButtonColor: '#4a4fea',\n                                            });\n                                        } else if (\n                                            // Read more about handling dismissals\n                                            result.dismiss === swal.DismissReason.cancel\n                                        ) {\n                                            swal.fire({\n                                                title: 'Cancelled',\n                                                text: 'Your imaginary file is safe :)',\n                                                icon: 'error',\n                                                confirmButtonColor: '#4a4fea',\n                                            });\n                                        }\n                                    })\n                            }\n                        >\n                            Click me\n                        </button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>A message with custom Image Header</td>\n                    <td>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-info btn-xs\"\n                            id=\"sa-image\"\n                            onClick={() =>\n                                swal.fire({\n                                    title: 'Admin to',\n                                    text: 'Responsive Bootstrap 5 Admin Dashboard',\n                                    imageUrl: logosm,\n                                    imageHeight: 50,\n                                    confirmButtonColor: '#4a4fea',\n                                    animation: false,\n                                })\n                            }\n                        >\n                            Click me\n                        </button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>A message with auto close timer</td>\n                    <td>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-info btn-xs\"\n                            id=\"sa-close\"\n                            onClick={() =>\n                                swal\n                                    .fire({\n                                        title: 'Auto close alert!',\n                                        html: 'I will close in <strong></strong> seconds.',\n                                        timer: 2000,\n                                        onBeforeOpen: function () {\n                                            swal.showLoading();\n                                            timerInterval = setInterval(function () {\n                                                swal.getContent().querySelector('strong').textContent =\n                                                    swal.getTimerLeft();\n                                            }, 100);\n                                        },\n                                        onClose: function () {\n                                            clearInterval(timerInterval);\n                                        },\n                                    })\n                                    .then(function (result: { dismiss: any }) {\n                                        if (\n                                            // Read more about handling dismissals\n                                            result.dismiss === swal.DismissReason.timer\n                                        ) {\n                                            console.log('I was closed by the timer');\n                                        }\n                                    })\n                            }\n                        >\n                            Click me\n                        </button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Custom HTML description and buttons</td>\n                    <td>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-info btn-xs\"\n                            id=\"custom-html-alert\"\n                            onClick={() =>\n                                swal.fire({\n                                    title: '<i>HTML</i> <u>example</u>',\n                                    icon: 'info',\n                                    html:\n                                        'You can use <b>bold text</b>, ' +\n                                        '<a href=\"//coderthemes.com/\">links</a> ' +\n                                        'and other HTML tags',\n                                    showCloseButton: true,\n                                    showCancelButton: true,\n                                    confirmButtonClass: 'btn btn-confirm',\n                                    cancelButtonClass: 'btn btn-cancel ms-1',\n                                    confirmButtonText: '<i class=\"mdi mdi-thumb-up-outline\"></i> Great!',\n                                    cancelButtonText: '<i class=\"mdi mdi-thumb-down-outline\"></i>',\n                                })\n                            }\n                        >\n                            Click me\n                        </button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>A message with custom width, padding and background</td>\n                    <td>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-info btn-xs\"\n                            id=\"custom-padding-width-alert\"\n                            onClick={() =>\n                                swal.fire({\n                                    title: 'Custom width, padding, background.',\n                                    width: 600,\n                                    padding: 100,\n                                    background:\n                                        '#fff url(//subtlepatterns2015.subtlepatterns.netdna-cdn.com/patterns/geometry.png)',\n                                })\n                            }\n                        >\n                            Click me\n                        </button>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Ajax request example</td>\n                    <td>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-info btn-xs\"\n                            id=\"ajax-alert\"\n                            onClick={() =>\n                                swal\n                                    .fire({\n                                        title: 'Submit email to run ajax request',\n                                        input: 'email',\n                                        showCancelButton: true,\n                                        confirmButtonText: 'Submit',\n                                        showLoaderOnConfirm: true,\n                                        confirmButtonColor: '#4a4fea',\n                                        cancelButtonColor: '#f34e4e',\n                                        preConfirm: function (email: string) {\n                                            return new Promise<void>(function (resolve, reject) {\n                                                setTimeout(function () {\n                                                    if (email === 'taken@example.com') {\n                                                        reject('This email is already taken.');\n                                                    } else {\n                                                        resolve();\n                                                    }\n                                                }, 2000);\n                                            });\n                                        },\n                                        allowOutsideClick: false,\n                                    })\n                                    .then(function (email: string) {\n                                        swal.fire({\n                                            icon: 'success',\n                                            title: 'Ajax request finished!',\n                                            confirmButtonColor: '#4a4fea',\n                                            html: 'Submitted email: ' + email,\n                                        });\n                                    })\n                            }\n                        >\n                            Click me\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    );\n});\n\nexport default Alerts;\n","import { Row, Col, Card } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// component\nimport Alerts from './Alerts';\n\nconst SweetAlerts = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Sweet Alerts',\n        breadCrumbItems: [\n            {\n                path: '/extended-ui/sweet-alert',\n                label: 'Extended UI',\n            },\n            {\n                path: '/extended-ui/sweet-alert',\n                label: 'Sweet Alerts',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <Row>\n            <Col>\n                <Card>\n                    <Card.Body>\n                        <h4 className=\"header-title\">Examples</h4>\n\n                        <p className=\"sub-header\">\n                            A beautiful, responsive, customizable, accessible (WAI-ARIA) replacement for JavaScript's\n                            popup boxes\n                        </p>\n\n                        <Alerts />\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default SweetAlerts;\n"],"names":["withSwal","props","timerInterval","swal","className","style","width","type","id","onClick","fire","title","text","icon","imageUrl","imageHeight","imageAlt","position","showConfirmButton","timer","footer","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","cancelButtonText","confirmButtonClass","cancelButtonClass","buttonsStyling","dismiss","DismissReason","cancel","logosm","animation","html","onBeforeOpen","showLoading","setInterval","getContent","querySelector","textContent","getTimerLeft","onClose","clearInterval","console","log","showCloseButton","padding","background","input","showLoaderOnConfirm","preConfirm","email","Promise","resolve","reject","setTimeout","allowOutsideClick","usePageTitle","breadCrumbItems","path","label","active","Row","Col","Card"],"sourceRoot":""}