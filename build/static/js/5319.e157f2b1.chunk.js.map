{"version":3,"file":"static/js/5319.e157f2b1.chunk.js","mappings":"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","sources":["components/Scrollbar.tsx","components/topbar/SearchDropdown.tsx","components/topbar/ThemeSetting.tsx","components/topbar/TopbarSearch.tsx","components/topbar/NotificationDropdown.tsx","components/topbar/ProfileDropdown.tsx","layouts/Topbar/data.ts","layouts/Topbar/index.tsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-bootstrap/esm/Badge.js"],"sourcesContent":["import SimpleBar from 'simplebar-react';\n\ntype ScrollbarProps = SimpleBar.Props & {\n    className?: string;\n    style?: Record<string, unknown>;\n    children?: unknown;\n};\n\nconst Scrollbar = ({ className, style, children, ...otherProps }: ScrollbarProps) => {\n    return (\n        <SimpleBar className={className} style={style} {...otherProps}>\n            {children}\n        </SimpleBar>\n    );\n};\n\nexport default Scrollbar;\n","import { useState } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nconst SearchDropdown = () => {\n    const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n    /*\n     * toggle search-dropdown\n     */\n    const toggleDropdown = () => {\n        setDropdownOpen(!dropdownOpen);\n    };\n    return (\n        <Dropdown show={dropdownOpen} onToggle={toggleDropdown} align=\"end\">\n            <Dropdown.Toggle\n                id=\"dropdown-apps\"\n                as=\"a\"\n                onClick={toggleDropdown}\n                className={classNames('nav-link arrow-none waves-effect waves-light', {\n                    show: dropdownOpen,\n                })}\n            >\n                <i className=\"fe-search noti-icon\"></i>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className=\"dropdown-lg p-0\">\n                <form className=\"p-3\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Search ...\" />\n                </form>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default SearchDropdown;\n","import { Link } from 'react-router-dom';\n\ntype ThemeSettingProps = {\n    handleRightSideBar: () => void;\n};\n\nconst ThemeSetting = ({ handleRightSideBar }: ThemeSettingProps) => {\n    return (\n        <>\n            <Link to=\"#\" className=\"nav-link right-bar-toggle waves-effect waves-light\" onClick={handleRightSideBar}>\n                <i className=\"fe-settings noti-icon\"></i>\n            </Link>\n        </>\n    );\n};\n\nexport default ThemeSetting;\n","import { Link } from 'react-router-dom';\nimport Select, { components } from 'react-select';\nimport classNames from 'classnames';\n\n// utils\nimport { groupByFields } from '../../utils';\n\n// types\nimport { SearchOptions } from '../../layouts/types';\n\ntype TopbarSearchProps = {\n    options: SearchOptions[];\n};\n\n/*\n * get options\n */\nconst optionGetter = (option: SearchOptions) => {\n    switch (option.type) {\n        case 'report':\n            return (\n                <Link to=\"#\" className={classNames('dropdown-item', 'notify-item', 'p-0')}>\n                    <i className={classNames(option.icon, 'me-1')}></i>\n                    <span>{option.label}</span>\n                </Link>\n            );\n        case 'help':\n            return (\n                <Link to=\"#\" className={classNames('dropdown-item', 'notify-item', 'p-0')}>\n                    <i className={classNames(option.icon, 'me-1')}></i>\n                    <span>{option.label}</span>\n                </Link>\n            );\n        case 'settings':\n            return (\n                <Link to=\"#\" className={classNames('dropdown-item', 'notify-item', 'p-0')}>\n                    <i className={classNames(option.icon, 'me-1')}></i>\n                    <span>{option.label}</span>\n                </Link>\n            );\n        case 'title':\n            return (\n                <div className=\"dropdown-header noti-title p-0\">\n                    <h6 className=\"text-overflow mb-2 text-uppercase\">Users</h6>\n                </div>\n            );\n        case 'users':\n            return (\n                <Link to=\"#\" className=\"dropdown-item notify-item px-0\">\n                    <div className=\"d-flex\">\n                        <img\n                            src={option.userDetails!.avatar}\n                            alt=\"\"\n                            className=\"d-flex me-2 rounded-circle\"\n                            height=\"32\"\n                        />\n                        <div>\n                            <h5 className=\"drop-username m-0 font-14\">\n                                {option.userDetails!.firstname} {option.userDetails!.lastname}\n                            </h5>\n                            <span className=\"user-subinfo font-12 mb-0\">{option.userDetails!.position}</span>\n                        </div>\n                    </div>\n                </Link>\n            );\n\n        default:\n            return;\n    }\n};\n\n/*\n * filter options\n */\nconst formateOptions = (options: SearchOptions[]) => {\n    const grouppedData = groupByFields(options, (item: SearchOptions) => {\n        return [item.type];\n    });\n\n    let formattedOptions = [];\n    let count = 0;\n\n    for (let i = 0; i < grouppedData.length; i++) {\n        for (let j = 0; j < grouppedData[i].length; j++) {\n            if (grouppedData[i][j].type === 'users' && count === 0) {\n                grouppedData[i].splice(j, 0, {\n                    label: 'Users',\n                    value: 'title',\n                    type: 'title',\n                });\n                count = 1;\n            }\n            formattedOptions.push(grouppedData[i][j]);\n        }\n    }\n    return formattedOptions;\n};\n\n/* custon indicator */\nconst IndicatorsContainer = (props: any) => {\n    const { handleClick } = props.selectProps;\n    return (\n        <div style={{}}>\n            <components.IndicatorsContainer {...props}>\n                <button className=\"btn\" onMouseDown={handleClick}>\n                    <i className=\"fe-search\"></i>\n                </button>\n            </components.IndicatorsContainer>\n        </div>\n    );\n};\n\n/* custom menu list */\nconst MenuList = (props: any) => {\n    const { options } = props.selectProps;\n\n    return (\n        <components.MenuList {...props}>\n            {/* menu header */}\n            <div className=\"dropdown-header noti-title\">\n                <h5 className=\"text-overflow mb-2\">\n                    Found {options.length < 10 ? ('0' + options.length).slice(-2) : options.length} results\n                </h5>\n            </div>\n            {props.children}\n        </components.MenuList>\n    );\n};\n\n/* fomates the option label */\nconst handleFormatOptionLabel = (option: SearchOptions) => {\n    const formattedOption = optionGetter(option);\n    return <div>{formattedOption}</div>;\n};\n\nconst TopbarSearch = ({ options }: TopbarSearchProps) => {\n    return (\n        <Select\n            components={{ IndicatorsContainer, MenuList }}\n            placeholder={'Search...'}\n            options={formateOptions(options)}\n            formatOptionLabel={handleFormatOptionLabel}\n            isOptionDisabled={(option) => option.type === 'title'}\n            maxMenuHeight={350}\n            isSearchable\n            isClearable\n            name=\"search-app\"\n            className=\"app-search\"\n            classNamePrefix=\"react-select\"\n        />\n    );\n};\n\nexport default TopbarSearch;\n","import { Badge, Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// hooks\nimport { useToggle } from '../../hooks';\n\n// components\nimport Scrollbar from '../Scrollbar';\n\n// dummy data\nimport { Notification } from '../../layouts/types';\n\ntype NotificationDropdownProps = {\n    notifications: Notification[];\n};\n\nconst NotificationDropdown = ({ notifications }: NotificationDropdownProps) => {\n    const [isOpen, show, hide] = useToggle();\n\n    /*\n     * toggle apps-dropdown\n     */\n    const toggleDropdown = () => {\n        isOpen ? hide() : show();\n    };\n\n    return (\n        <Dropdown show={isOpen} onToggle={toggleDropdown}>\n            <Dropdown.Toggle variant=\"\" as=\"a\" className=\"nav-link waves-effect waves-light\" onClick={toggleDropdown}>\n                <i className=\"fe-bell noti-icon\"></i>\n                <Badge bg=\"danger\" className=\"rounded-circle noti-icon-badge\">\n                    9\n                </Badge>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu align=\"end\" className=\"dropdown-lg\">\n                <div onClick={toggleDropdown}>\n                    <Dropdown.Item as=\"div\" className=\"noti-title\">\n                        <h5 className=\"m-0\">\n                            <span className=\"float-end\">\n                                <Link to=\"#\" className=\"text-dark\">\n                                    <small>Clear All</small>\n                                </Link>\n                            </span>\n                            Notification\n                        </h5>\n                    </Dropdown.Item>\n                    <Scrollbar className=\"noti-scroll\">\n                        {(notifications || []).map((item, index) => {\n                            return (\n                                <Dropdown.Item key={index.toString()} className=\"notify-item\">\n                                    {item.avatar ? (\n                                        <>\n                                            <div className=\"notify-icon\">\n                                                <img src={item.avatar} alt=\"\" className=\"img-fluid rounded-circle\" />\n                                            </div>\n                                            <p className=\"notify-details\">{item.text}</p>\n                                            <p className=\"text-muted mb-0 user-msg\">\n                                                <small>{item.subText}</small>\n                                            </p>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <div className={classNames('notify-icon', 'bg-' + item.bgColor)}>\n                                                <i className={item.icon}></i>\n                                            </div>\n                                            <p className=\"notify-details\">\n                                                {item.text} <small className=\"text-muted\">{item.subText}</small>\n                                            </p>\n                                        </>\n                                    )}\n                                </Dropdown.Item>\n                            );\n                        })}\n                    </Scrollbar>\n\n                    <Dropdown.Item className=\"text-center text-primary notify-item notify-all\">\n                        View All <i className=\"fe-arrow-right\"></i>\n                    </Dropdown.Item>\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default NotificationDropdown;\n","import React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// hooks\nimport { useToggle } from '../../hooks/';\n\n// types\nimport { ProfileMenu } from '../../layouts/types';\n\ntype ProfileDropdownProps = {\n    userImage: string;\n    username: string;\n    menuItems: ProfileMenu[];\n};\n\nconst ProfileDropdown = ({ userImage, username, menuItems }: ProfileDropdownProps) => {\n    const [isOpen, show, hide] = useToggle();\n\n    /*\n     * toggle apps-dropdown\n     */\n    const toggleDropdown = () => {\n        isOpen ? hide() : show();\n    };\n\n    return (\n        <Dropdown show={isOpen} onToggle={toggleDropdown}>\n            <Dropdown.Toggle\n                as=\"a\"\n                variant=\"\"\n                className=\"nav-link nav-user me-0 waves-effect waves-light\"\n                id=\"page-header-user-dropdown\"\n                onClick={toggleDropdown}\n            >\n                <img src={userImage} alt=\"user\" className=\"rounded-circle\" />\n                <span className=\"pro-user-name ms-1\">\n                    {username} <i className=\"mdi mdi-chevron-down\"></i>\n                </span>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu align=\"end\" className=\"profile-dropdown\">\n                <div onClick={toggleDropdown}>\n                    <Dropdown.Header className=\"noti-title\">\n                        <h6 className=\"text-overflow m-0\">Welcome !</h6>\n                    </Dropdown.Header>\n\n                    {(menuItems || []).map((menu, i) => {\n                        return (\n                            <React.Fragment key={i + '-menu'}>\n                                {i === menuItems.length - 1 && <Dropdown.Divider as=\"div\" />}\n                                <Link\n                                    to={menu.redirectTo}\n                                    className=\"dropdown-item notify-item\"\n                                    key={i + '-profile-menu'}\n                                >\n                                    <i className={classNames(menu.icon, 'me-1')}></i>\n                                    <span>{menu.label}</span>\n                                </Link>\n                            </React.Fragment>\n                        );\n                    })}\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default ProfileDropdown;\n","import { Notification, ProfileMenu, SearchOptions } from '../types';\n\n// images\nimport avatar1 from '../../assets/images/users/user-1.jpg';\nimport avatar2 from '../../assets/images/users/user-2.jpg';\nimport avatar4 from '../../assets/images/users/user-4.jpg';\nimport avatar5 from '../../assets/images/users/user-5.jpg';\n\n// get the notifications\nconst notifications: Notification[] = [\n    // {\n    //     id: 1,\n    //     text: 'Cristina Pride',\n    //     subText: 'Hi, How are you? What about our next meeting',\n    //     avatar: avatar1,\n    // },\n    {\n        id: 2,\n        text: 'Glucose levels low',\n        subText: '1 min ago',\n        icon: 'mdi mdi-comment-account-outline',\n        bgColor: 'primary',\n    },\n    // {\n    //     id: 3,\n    //     text: 'Karen Robinson',\n    //     subText: 'Wow ! this admin looks good and awesome design',\n    //     avatar: avatar4,\n    // },\n    // {\n    //     id: 4,\n    //     text: 'New user registered.',\n    //     subText: '5 hours ago',\n    //     icon: 'mdi mdi-account-plus',\n    //     bgColor: 'warning',\n    // },\n    // {\n    //     id: 5,\n    //     text: 'Caleb Flakelar commented on Admin',\n    //     subText: '1 min ago',\n    //     icon: 'mdi mdi-comment-account-outline',\n    //     bgColor: 'info',\n    // },\n    // {\n    //     id: 6,\n    //     text: 'Carlos Crouch liked Admin',\n    //     subText: '13 days ago',\n    //     icon: 'mdi mdi-heart',\n    //     bgColor: 'secondary',\n    // },\n];\n\n// get the profilemenu\nconst profileMenus: ProfileMenu[] = [\n    {\n        label: 'My Account',\n        icon: 'fe-user',\n        redirectTo: '#',\n        // /apps/contacts/profile\n    },\n    {\n        label: 'Lock Screen',\n        icon: 'fe-lock',\n        redirectTo: '/auth/lock-screen',\n    },\n    {\n        label: 'Logout',\n        icon: 'fe-log-out',\n        redirectTo: '/auth/logout',\n    },\n];\n\nconst searchOptions: SearchOptions[] = [\n    { value: '1', label: 'Analytics Report', icon: 'fe-home', type: 'report' },\n    // {\n    //     value: '2',\n    //     label: 'How can I help you?',\n    //     icon: 'fe-aperture',\n    //     type: 'help',\n    // },\n    // {\n    //     value: '3',\n    //     label: 'User profile settings',\n    //     icon: 'fe-settings',\n    //     type: 'settings',\n    // },\n    // {\n    //     label: 'Erwin E. Brown',\n    //     value: 'users1',\n    //     type: 'users',\n    //     userDetails: {\n    //         firstname: 'Erwin',\n    //         lastname: 'E. Brown',\n    //         position: 'UI Designer',\n    //         avatar: avatar2,\n    //     },\n    // },\n    // {\n    //     label: 'Jacob Deo',\n    //     value: 'users2',\n    //     type: 'users',\n    //     userDetails: {\n    //         firstname: 'Jacob',\n    //         lastname: 'Deo',\n    //         position: 'Developer',\n    //         avatar: avatar5,\n    //     },\n    // },\n];\n\nexport { notifications, profileMenus, searchOptions };\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// actions\nimport { showRightSidebar } from '../../redux/actions';\n\n// constants\nimport { LayoutTypes } from '../../constants';\n\n// hooks\nimport { useRedux } from '../../hooks';\n\n// components\nimport SearchDropdown from '../../components/topbar/SearchDropdown';\nimport ThemeSetting from '../../components/topbar/ThemeSetting';\nimport TopbarSearch from '../../components/topbar/TopbarSearch';\nimport NotificationDropdown from '../../components/topbar/NotificationDropdown';\nimport ProfileDropdown from '../../components/topbar/ProfileDropdown';\n\n// dummy data\nimport { notifications, profileMenus, searchOptions } from './data';\n\n// images\nimport logoSm from '../../assets/images/logo-sm.png';\nimport avatar1 from '../../assets/images/users/user-1.jpg';\nimport logoDark from '../../assets/images/logo-dark.png';\nimport logoLight from '../../assets/images/logo-light.png';\n\ntype TopbarProps = {\n    openLeftMenuCallBack: () => void;\n    containerClass?: string;\n};\n\nconst Topbar = ({ openLeftMenuCallBack, containerClass }: TopbarProps) => {\n    const { dispatch, appSelector } = useRedux();\n    const [isopen, setIsopen] = useState<boolean>(false);\n\n    const { layout, pageTitle } = appSelector((state) => ({\n        layout: state.Layout.layoutType,\n        pageTitle: state.PageTitle.pageTitle,\n    }));\n\n    /**\n     * Toggle the leftmenu when having mobile screen\n     */\n    const handleLeftMenuCallBack = () => {\n        setIsopen(!isopen);\n        if (openLeftMenuCallBack) openLeftMenuCallBack();\n    };\n\n    /**\n     * Toggles the right sidebar\n     */\n    const handleRightSideBar = () => {\n        dispatch(showRightSidebar());\n    };\n\n    return (\n        <div className=\"navbar-custom\">\n            <div className={containerClass}>\n                <ul className=\"list-unstyled topnav-menu float-end mb-0\">\n                    <li className=\"d-none d-lg-block\">\n                        <TopbarSearch options={searchOptions} />\n                    </li>\n\n                    <li className=\"dropdown d-inline-block d-lg-none\">\n                        <SearchDropdown />\n                    </li>\n                    <li className=\"dropdown notification-list topbar-dropdown\">\n                        <NotificationDropdown notifications={notifications} />\n                    </li>\n                    <li className=\"dropdown notification-list topbar-dropdown\">\n                        {/* User */}\n                        <ProfileDropdown userImage={avatar1} username={'Theodore'} menuItems={profileMenus} />\n                    </li>\n                    <li className=\"dropdown notification-list\">\n                        <ThemeSetting handleRightSideBar={handleRightSideBar} />\n                    </li>\n                </ul>\n\n                {/* LOGO  */}\n                <div className=\"logo-box\">\n                    <Link to=\"/\" className=\"logo logo-dark text-center\">\n                        <span className=\"logo-sm\">\n                            <img src={logoSm} alt=\"logo-sm\" height=\"22\" />\n                        </span>\n                        <span className=\"logo-lg\">\n                            <img src={logoDark} alt=\"logo-dark\" height=\"16\" />\n                        </span>\n                    </Link>\n\n                    <Link to=\"/\" className=\"logo logo-light text-center\">\n                        <span className=\"logo-sm\">\n                            <img src={logoSm} alt=\"logo-sm\" height=\"22\" />\n                        </span>\n                        <span className=\"logo-lg\">\n                            <img src={logoLight} alt=\"logo-light\" height=\"16\" />\n                        </span>\n                    </Link>\n                </div>\n\n                <ul className=\"list-unstyled topnav-menu topnav-menu-left mb-0\">\n                    {layout === LayoutTypes.LAYOUT_VERTICAL ? (\n                        <>\n                            {/* Mobile menu toggle (Vertical Layout) */}\n                            <li onClick={handleLeftMenuCallBack}>\n                                <button className=\"button-menu-mobile disable-btn waves-effect\">\n                                    <i className=\"fe-menu\"></i>\n                                </button>\n                            </li>\n                        </>\n                    ) : (\n                        <>\n                            {/* Mobile menu toggle (Horizontal Layout) */}\n                            <li>\n                                <Link\n                                    to=\"#\"\n                                    className={classNames('navbar-toggle nav-link', {\n                                        open: isopen,\n                                    })}\n                                    onClick={handleLeftMenuCallBack}\n                                >\n                                    <div className=\"lines\">\n                                        <span></span>\n                                        <span></span>\n                                        <span></span>\n                                    </div>\n                                </Link>\n                            </li>\n                        </>\n                    )}\n\n                    {layout === LayoutTypes.LAYOUT_VERTICAL && (\n                        <li>\n                            <h4 className=\"page-title-main\">{pageTitle.title}</h4>\n                        </li>\n                    )}\n                </ul>\n\n                <div className=\"clearfix\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Topbar;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;"],"names":["className","style","children","otherProps","useState","dropdownOpen","setDropdownOpen","toggleDropdown","Dropdown","show","onToggle","align","id","as","onClick","classNames","type","placeholder","handleRightSideBar","to","formateOptions","options","grouppedData","groupByFields","item","formattedOptions","count","i","length","j","splice","label","value","push","IndicatorsContainer","props","handleClick","selectProps","c","onMouseDown","MenuList","slice","handleFormatOptionLabel","option","formattedOption","icon","src","userDetails","avatar","alt","height","firstname","lastname","position","optionGetter","components","formatOptionLabel","isOptionDisabled","maxMenuHeight","isSearchable","isClearable","name","classNamePrefix","notifications","useToggle","isOpen","hide","variant","Badge","bg","Scrollbar","map","index","text","subText","bgColor","toString","userImage","username","menuItems","menu","redirectTo","profileMenus","searchOptions","openLeftMenuCallBack","containerClass","useRedux","dispatch","appSelector","isopen","setIsopen","state","layout","Layout","layoutType","pageTitle","PageTitle","handleLeftMenuCallBack","avatar1","showRightSidebar","logoSm","logoDark","logoLight","LayoutTypes","open","title","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","React","ref","bsPrefix","pill","Component","prefix","useBootstrapPrefix","_jsx","displayName","defaultProps"],"sourceRoot":""}