{"version":3,"file":"static/js/5492.7412cfd2.chunk.js","mappings":"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","sources":["pages/uikit/GeneralUI/ContextualBadges.tsx","pages/uikit/GeneralUI/DefaultBadges.tsx","pages/uikit/GeneralUI/PillBadges.tsx","pages/uikit/GeneralUI/PositionedBadges.tsx","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","pages/uikit/GeneralUI/DefaultPagination.tsx","pages/uikit/GeneralUI/RoundedPagination.tsx","pages/uikit/GeneralUI/PaginationSizes.tsx","pages/uikit/GeneralUI/PaginationAlignment.tsx","pages/uikit/GeneralUI/BreadcrumbExample.tsx","pages/uikit/GeneralUI/index.tsx","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import { Badge, Card } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// types\nimport { Variant } from './types';\n\ntype ContextualBadgesProps = {\n    variants: Variant[];\n};\n\ntype BadgesVariant = Variant;\n\nconst ContexualBadges = ({ variants }: ContextualBadgesProps) => {\n    const contexualBadges: BadgesVariant[] = [...variants];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Contexual variations</h4>\n                <p className=\"sub-header\">\n                    Add any of the below mentioned modifier classes to change the appearance of a badge. Badge can be\n                    more contextual as well. Just use regular convention e.g. <code>bg-*color</code> to have badge with\n                    different background.\n                </p>\n\n                {(contexualBadges || []).map((color, index) => {\n                    return (\n                        <Badge\n                            className={classNames(\n                                'me-1',\n                                'badge',\n                                'bg-' + color,\n                                color === 'light' ? 'text-dark' : null\n                            )}\n                            bg=\"\"\n                            key={index.toString()}\n                        >\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                        </Badge>\n                    );\n                })}\n\n                <h5 className=\"mt-4\">Soft Badges</h5>\n                <p className=\"sub-header\">\n                    Using the <code>.badge-soft-*</code> modifier class, you can have more soften variation.\n                </p>\n\n                {(contexualBadges || []).map((color, index) => {\n                    return (\n                        <Badge className={classNames('me-1', 'badge-soft-' + color)} bg=\"\" key={index.toString()}>\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                        </Badge>\n                    );\n                })}\n\n                <h5 className=\"mt-4\">Outline Badges</h5>\n                <p className=\"sub-header\">\n                    Using the <code>.badge-outline-*</code> to quickly create a bordered badges.\n                </p>\n\n                {(contexualBadges || []).map((color, index) => {\n                    return (\n                        <Badge bg=\"\" className={classNames('me-1', 'badge-outline-' + color)} key={index.toString()}>\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                        </Badge>\n                    );\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ContexualBadges;\n","import { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\n\nconst DefaultBadges = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Default</h4>\n                <p className=\"sub-header\">\n                    A simple labeling component. Badges scale to match the size of the immediate parent element by using\n                    relative font sizing and <code>em</code> units.\n                </p>\n\n                <h1>\n                    h1.Example heading <span className=\"badge bg-secondary text-light\">New</span>\n                </h1>\n                <h2>\n                    h2.Example heading <span className=\"badge badge-soft-success\">New</span>\n                </h2>\n                <h3>\n                    h3.Example heading <span className=\"badge bg-primary\">New</span>\n                </h3>\n                <h4>\n                    h4.Example heading{' '}\n                    <Link to=\"/\" className=\"badge badge-soft-info\">\n                        Info Link\n                    </Link>\n                </h4>\n                <h5>\n                    h5.Example heading <span className=\"badge badge-outline-warning\">New</span>\n                </h5>\n                <h6>\n                    h6.Example heading <span className=\"badge bg-danger\">New</span>\n                </h6>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DefaultBadges;\n","import { Badge, Card } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// types\nimport { Variant } from './types';\n\ntype PillBadgesProps = {\n    variants: Variant[];\n};\n\ntype BadgesVariant = Variant;\n\nconst PillBadges = ({ variants }: PillBadgesProps) => {\n    const pillBadges: BadgesVariant[] = [...variants];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Pill Badges</h4>\n                <p className=\"sub-header\">\n                    Use the <code>.rounded-pill</code> modifier class to make badges more rounded.\n                </p>\n\n                {(pillBadges || []).map((color, index) => {\n                    return (\n                        <Badge\n                            pill\n                            bg=\"\"\n                            className={classNames('me-1', 'bg-' + color, color === 'light' ? 'text-dark' : null)}\n                            key={index.toString()}\n                        >\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                        </Badge>\n                    );\n                })}\n\n                <h5 className=\"mt-4\">Soft Badges</h5>\n                <p className=\"sub-header\">\n                    Use the <code>.badge-soft-*</code> modifier class to make badges lighten.\n                </p>\n\n                {(pillBadges || []).map((color, index) => {\n                    return (\n                        <Badge pill bg=\"\" className={classNames('me-1', 'badge-soft-' + color)} key={index.toString()}>\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                        </Badge>\n                    );\n                })}\n\n                <h5 className=\"mt-4\">Outline Badges</h5>\n                <p className=\"sub-header\">\n                    Using the <code>.badge-outline-*</code> to quickly create a bordered badges.\n                </p>\n\n                {(pillBadges || []).map((color, index) => {\n                    return (\n                        <Badge\n                            bg=\"\"\n                            pill\n                            className={classNames('me-1', 'badge-outline-' + color)}\n                            key={index.toString()}\n                        >\n                            {color!.charAt(0).toUpperCase() + color!.slice(1)}\n                        </Badge>\n                    );\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PillBadges;\n","import { Badge, Button, Card, Row } from 'react-bootstrap';\n\nconst PositionedBadges = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Badge Positioned</h4>\n                <p className=\"sub-header\">\n                    Use the <code>.rounded-pill</code> modifier class to make badges more rounded.\n                </p>\n\n                <Row>\n                    <div className=\"col-6\">\n                        <Button className=\"btn btn-primary position-relative\">\n                            Inbox\n                            <Badge pill bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle\">\n                                99+\n                                <span className=\"visually-hidden\">unread messages</span>\n                            </Badge>\n                        </Button>\n                    </div>\n\n                    <div className=\"col-6\">\n                        <Button className=\"btn btn-primary position-relative\">\n                            Profile\n                            <Badge\n                                bg=\"danger\"\n                                className=\"position-absolute top-0 start-100 translate-middle p-1 border border-light rounded-circle\"\n                            >\n                                <span className=\"visually-hidden\">New alerts</span>\n                            </Badge>\n                        </Button>\n                    </div>\n\n                    <div className=\"col-6\">\n                        <Button className=\"btn btn-success mt-4\">\n                            Notifications\n                            <Badge bg=\"light\" className=\" text-dark ms-1\">\n                                4\n                            </Badge>\n                        </Button>\n                    </div>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PositionedBadges;\n","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active,\n  disabled,\n  className,\n  style,\n  activeLabel,\n  children,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: \"page-link\",\n      disabled: disabled,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label = name) {\n  function Button({\n    children,\n    ...props\n  }) {\n    return /*#__PURE__*/_jsxs(PageItem, { ...props,\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        \"aria-hidden\": \"true\",\n        children: children || defaultValue\n      }), /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: label\n      })]\n    });\n  }\n\n  Button.displayName = name;\n  return Button;\n}\n\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","import { Pagination } from 'react-bootstrap';\n\nconst DefaultPagination = () => {\n    let items = [];\n    for (let number = 1; number <= 5; number++) {\n        items.push(\n            <Pagination.Item key={number} active={number === 3}>\n                {number}\n            </Pagination.Item>\n        );\n    }\n\n    return (\n        <>\n            <p className=\"mb-1 fw-bold\">Default Pagination</p>\n            <p className=\"text-muted font-14\">Simple pagination inspired by Rdio, great for apps and search results.</p>\n            <nav>\n                <Pagination>\n                    <Pagination.Prev />\n                    {items}\n                    <Pagination.Next />\n                </Pagination>\n            </nav>\n        </>\n    );\n};\n\nexport default DefaultPagination;\n","import { Pagination } from 'react-bootstrap';\n\nconst RoundedPagination = () => {\n    let items = [];\n    for (let number = 1; number <= 5; number++) {\n        items.push(\n            <Pagination.Item key={number} active={number === 3}>\n                {number}\n            </Pagination.Item>\n        );\n    }\n    return (\n        <>\n            <p className=\"mb-1 fw-bold mt-4\">Rounded Pagination</p>\n            <p className=\"text-muted font-14\">\n                Add <code> .pagination-rounded</code> for rounded pagination.\n            </p>\n            <Pagination className=\"pagination-rounded\">\n                <Pagination.Prev />\n                {items}\n                <Pagination.Next />\n            </Pagination>\n        </>\n    );\n};\n\nexport default RoundedPagination;\n","import { Pagination } from 'react-bootstrap';\n\nconst PaginationSizes = () => {\n    let items = [];\n    for (let number = 1; number <= 3; number++) {\n        items.push(<Pagination.Item key={number}>{number}</Pagination.Item>);\n    }\n    return (\n        <>\n            <p className=\"mb-1 fw-bold mt-4\">Sizing</p>\n            <p className=\"text-muted font-14\">\n                Add <code>lg</code> or <code>sm</code> type to <code>size</code> prop for additional sizes.\n            </p>\n\n            <Pagination size=\"lg\">\n                <Pagination.Prev />\n                {items}\n                <Pagination.Next />\n            </Pagination>\n\n            <Pagination size=\"sm\">\n                <Pagination.Prev />\n                {items}\n                <Pagination.Next />\n            </Pagination>\n        </>\n    );\n};\n\nexport default PaginationSizes;\n","import { Pagination } from 'react-bootstrap';\n\nconst PaginationAlignment = () => {\n    let items = [];\n    for (let number = 1; number <= 3; number++) {\n        items.push(<Pagination.Item key={number}>{number}</Pagination.Item>);\n    }\n    return (\n        <>\n            <p className=\"mb-1 fw-bold mt-4\">Alignment</p>\n            <p className=\"text-muted font-14\">Change the alignment of pagination components with flexbox utilities.</p>\n\n            <Pagination className=\"justify-content-center\">\n                <Pagination.Prev disabled>Previous</Pagination.Prev>\n                <Pagination.Item>{1}</Pagination.Item>\n                <Pagination.Item>{2}</Pagination.Item>\n                <Pagination.Item>{3}</Pagination.Item>\n                <Pagination.Next>Next</Pagination.Next>\n            </Pagination>\n\n            <Pagination className=\"justify-content-end\">\n                <Pagination.Prev disabled>Previous</Pagination.Prev>\n                <Pagination.Item>{1}</Pagination.Item>\n                <Pagination.Item>{2}</Pagination.Item>\n                <Pagination.Item>{3}</Pagination.Item>\n                <Pagination.Next>Next</Pagination.Next>\n            </Pagination>\n        </>\n    );\n};\n\nexport default PaginationAlignment;\n","import { Link } from 'react-router-dom';\nimport { Breadcrumb } from 'react-bootstrap';\n\nconst BreadcrumbExample = () => {\n    return (\n        <>\n            <h4 className=\"header-title mt-3 mt-sm-0\">Breadcrumb</h4>\n            <p className=\"text-muted font-14\">\n                Indicate the current page’s location within a navigational hierarchy that automatically adds separators\n                via CSS. Please read the official{' '}\n                <Link target=\"_blank\" rel=\"noreferrer\" to=\"https://getbootstrap.com/docs/4.0/components/breadcrumb/\">\n                    Bootstrap\n                </Link>{' '}\n                documentation for more options.\n            </p>\n\n            <Breadcrumb>\n                <Breadcrumb.Item active>Home</Breadcrumb.Item>\n            </Breadcrumb>\n\n            <Breadcrumb>\n                <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n                <Breadcrumb.Item active>Library</Breadcrumb.Item>\n            </Breadcrumb>\n\n            <Breadcrumb>\n                <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n                <Breadcrumb.Item href=\"/ui/general\">Library</Breadcrumb.Item>\n                <Breadcrumb.Item active>Data</Breadcrumb.Item>\n            </Breadcrumb>\n        </>\n    );\n};\n\nexport default BreadcrumbExample;\n","import { Card, Col, Row } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// component\nimport ContexualBadges from './ContextualBadges';\nimport DefaultBadges from './DefaultBadges';\nimport PillBadges from './PillBadges';\nimport PositionedBadges from './PositionedBadges';\nimport DefaultPagination from './DefaultPagination';\nimport RoundedPagination from './RoundedPagination';\nimport PaginationSizes from './PaginationSizes';\nimport PaginationAlignment from './PaginationAlignment';\nimport BreadcrumbExample from './BreadcrumbExample';\n\n// types\nimport { Variant } from './types';\n\nconst variants: Variant[] = [\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'warning',\n    'info',\n    'pink',\n    'blue',\n    'light',\n    'dark',\n];\n\nconst GeneralUI = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'General UI',\n        breadCrumbItems: [\n            {\n                path: '/base-ui/general',\n                label: 'Base UI',\n            },\n            {\n                path: '/base-ui/general',\n                label: 'General UI',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <>\n            <Row>\n                <Col xl={6}>\n                    <DefaultBadges />\n                    <ContexualBadges variants={variants} />\n                </Col>\n                <Col xl={6}>\n                    <PillBadges variants={variants} />\n                    <PositionedBadges />\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <Row>\n                                <Col md={6}>\n                                    <h4 className=\"header-title\">Pagination</h4>\n                                    <p className=\"sub-header\">\n                                        Provide pagination links for your site or app with the multi-page pagination\n                                        component.\n                                    </p>\n\n                                    <DefaultPagination />\n                                    <RoundedPagination />\n                                    <PaginationSizes />\n                                    <PaginationAlignment />\n                                </Col>\n                                <Col md={6}>\n                                    <BreadcrumbExample />\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default GeneralUI;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["variants","contexualBadges","Card","className","map","color","index","Badge","classNames","bg","charAt","toUpperCase","slice","toString","to","pillBadges","pill","Row","Button","PageItem","React","ref","active","disabled","style","activeLabel","children","props","Component","Anchor","_jsx","_jsxs","defaultProps","displayName","createButton","name","defaultValue","label","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","size","decoratedBsPrefix","useBootstrapPrefix","Object","assign","Item","items","number","push","target","rel","Breadcrumb","href","usePageTitle","title","breadCrumbItems","path","Col","xl","md","text","as","prefix","variant","useButtonProps","tagName","buttonProps","CardImg","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","border","body","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","context","rHyphen","pascalCase","str","string","replace","_","chr","BsComponent","Tag","resolvedPrefix","p"],"sourceRoot":""}